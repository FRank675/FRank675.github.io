<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>日常小确幸记录</title>
      <link href="/posts/1e3575b0dcca/"/>
      <url>/posts/1e3575b0dcca/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="2023-1-23"><a href="#2023-1-23" class="headerlink" title="2023.1.23"></a>2023.1.23</h2><p>今天刷题看到了一些有趣的评论^_^</p><p><img src="/%E6%97%A5%E5%B8%B8%E7%82%B9%E6%BB%B4.assets/1674463375977.png" alt="1674463375977"></p><p><img src="/%E6%97%A5%E5%B8%B8%E7%82%B9%E6%BB%B4.assets/1674463442949.png" alt="1674463442949"></p><p>然后一年后有人评论</p><p><img src="/%E6%97%A5%E5%B8%B8%E7%82%B9%E6%BB%B4.assets/1674463413620.png" alt="1674463413620"></p><p>然后我好像得研究一下网站的图床咋搞</p>]]></content>
      
      
      <categories>
          
          <category> 小确幸 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode刷题记录</title>
      <link href="/posts/8cc09a6c47db/"/>
      <url>/posts/8cc09a6c47db/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="主要记录LEETCODE刷题的感想和总结"><a href="#主要记录LEETCODE刷题的感想和总结" class="headerlink" title="主要记录LEETCODE刷题的感想和总结~"></a>主要记录LEETCODE刷题的感想和总结~</h1><h2 id="剑指-Offer-09-用两个栈实现队列"><a href="#剑指-Offer-09-用两个栈实现队列" class="headerlink" title="剑指 Offer 09. 用两个栈实现队列"></a><a href="https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/">剑指 Offer 09. 用两个栈实现队列</a></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -<span class="number">1</span> )</span><br><span class="line"></span><br><span class="line">示例 <span class="number">1</span>：</span><br><span class="line">输入：</span><br><span class="line">[<span class="string">&quot;CQueue&quot;</span>,<span class="string">&quot;appendTail&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>]</span><br><span class="line">[[],[<span class="number">3</span>],[],[],[]]</span><br><span class="line">输出：[null,null,<span class="number">3</span>,-<span class="number">1</span>,-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：</span><br><span class="line">[<span class="string">&quot;CQueue&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;appendTail&quot;</span>,<span class="string">&quot;appendTail&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>]</span><br><span class="line">[[],[],[<span class="number">5</span>],[<span class="number">2</span>],[],[]]</span><br><span class="line">输出：[null,-<span class="number">1</span>,null,null,<span class="number">5</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">###思路分析：使用双栈实现队列，队列要求先进先出，所以一个栈用于进，另一个栈倒置用于出，在python中可以使用append()方法添加元素，使用pop()弹出元素</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CQueue</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#初始化双栈</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.stack1 = []</span><br><span class="line">        self.stack2 = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#添加元素，在第一个栈中添加元素</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">appendTail</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type value: int</span></span><br><span class="line"><span class="string">        :rtype: None</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.stack1.append(value)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除最先进去的元素</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deleteHead</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment">#当第二个栈不为空，则可以直接弹出</span></span><br><span class="line">        <span class="comment">#否则需要将第一个栈中的元素弹入第二个栈</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.stack2) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(self.stack1) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            <span class="comment">#将第一个栈中的元素全部弹出装入第二个栈中</span></span><br><span class="line">            <span class="comment">#达到的效果就是第一个栈最先进去的元素在第二个栈的顶部</span></span><br><span class="line">            <span class="keyword">while</span> self.stack1:</span><br><span class="line">                self.stack2.append(self.stack1.pop())</span><br><span class="line">        <span class="comment">#第二个栈顶端的元素就是队列删除的最先进去的元素</span></span><br><span class="line">        <span class="keyword">return</span> self.stack2.pop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Your CQueue object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = CQueue()</span></span><br><span class="line"><span class="comment"># obj.appendTail(value)</span></span><br><span class="line"><span class="comment"># param_2 = obj.deleteHead()</span></span><br></pre></td></tr></table></figure><h2 id="剑指-Offer-30-包含min函数的栈"><a href="#剑指-Offer-30-包含min函数的栈" class="headerlink" title="剑指 Offer 30. 包含min函数的栈"></a><a href="https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof/">剑指 Offer 30. 包含min函数的栈</a></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 <span class="built_in">min</span> 函数在该栈中，调用 <span class="built_in">min</span>、push 及 pop 的时间复杂度都是 O(<span class="number">1</span>)。</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">MinStack minStack = new MinStack();</span><br><span class="line">minStack.push(-<span class="number">2</span>);</span><br><span class="line">minStack.push(<span class="number">0</span>);</span><br><span class="line">minStack.push(-<span class="number">3</span>);</span><br><span class="line">minStack.<span class="built_in">min</span>();   --&gt; 返回 -<span class="number">3.</span></span><br><span class="line">minStack.pop();</span><br><span class="line">minStack.top();      --&gt; 返回 <span class="number">0.</span></span><br><span class="line">minStack.<span class="built_in">min</span>();   --&gt; 返回 -<span class="number">2.</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line">各函数的调用总次数不超过 <span class="number">20000</span> 次</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MinStack</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        initialize your data structure here.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment">#初始化两个栈，一个栈正常存储，另一个栈存储最小值</span></span><br><span class="line">        self.stack = []</span><br><span class="line">        self.minStack = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">push</span>(<span class="params">self, x</span>):<span class="number">2</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: None</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment">#第一个栈正常存储</span></span><br><span class="line">        self.stack.append(x)</span><br><span class="line">        <span class="comment">#第二个栈比较是否出现更小的值，如果出现，添加到最小栈</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.minStack <span class="keyword">or</span> x &lt;= self.minStack[-<span class="number">1</span>]:</span><br><span class="line">            self.minStack.append(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :rtype: None</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment">#第一个栈正常弹出，第二个栈比较是否弹出最小值，如果是，第二个栈也弹出</span></span><br><span class="line">        <span class="keyword">if</span> self.stack.pop() == self.minStack[-<span class="number">1</span>]:</span><br><span class="line">            self.minStack.pop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">top</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.stack[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">min</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment">#最小值即最小栈最后一个值</span></span><br><span class="line">        <span class="keyword">return</span> self.minStack[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Your MinStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = MinStack()</span></span><br><span class="line"><span class="comment"># obj.push(x)</span></span><br><span class="line"><span class="comment"># obj.pop()</span></span><br><span class="line"><span class="comment"># param_3 = obj.top()</span></span><br><span class="line"><span class="comment"># param_4 = obj.min()</span></span><br></pre></td></tr></table></figure><h2 id="剑指-Offer-06-从尾到头打印链表"><a href="#剑指-Offer-06-从尾到头打印链表" class="headerlink" title="剑指 Offer 06. 从尾到头打印链表"></a><a href="https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/">剑指 Offer 06. 从尾到头打印链表</a></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</span><br><span class="line"></span><br><span class="line">示例 <span class="number">1</span>：</span><br><span class="line">输入：head = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">输出：[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line">限制：</span><br><span class="line"><span class="number">0</span> &lt;= 链表长度 &lt;= <span class="number">10000</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 递归法</span></span><br><span class="line"><span class="comment"># [1,2,3,4,5]</span></span><br><span class="line"><span class="comment"># [2,3,4,5]</span></span><br><span class="line"><span class="comment"># [3,4,5]</span></span><br><span class="line"><span class="comment"># [4,5]</span></span><br><span class="line"><span class="comment"># [5]</span></span><br><span class="line"><span class="comment"># []</span></span><br><span class="line"><span class="comment"># [5,4,3,2,1]</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reversePrint</span>(<span class="params">self, head</span>):</span><br><span class="line">        <span class="keyword">if</span> head <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        <span class="keyword">return</span> self.reversePrint(head.<span class="built_in">next</span>) + [head.val]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 普通做法</span></span><br><span class="line"><span class="comment"># 遍历链表使用一个list存储链表</span></span><br><span class="line"><span class="comment"># 反转链表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reversePrint</span>(<span class="params">self, head</span>):</span><br><span class="line">        resList = []</span><br><span class="line">        <span class="keyword">while</span> head:</span><br><span class="line">            resList.append(head.val)</span><br><span class="line">            head = head.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> resList[::-<span class="number">1</span>]</span><br><span class="line"><span class="comment"># list的[]中有三个参数，用冒号分割</span></span><br><span class="line"><span class="comment"># list[param1:param2:param3]</span></span><br><span class="line"><span class="comment"># param1，相当于start_index，可以为空，默认是0</span></span><br><span class="line"><span class="comment"># param2，相当于end_index，可以为空，默认是list.size</span></span><br><span class="line"><span class="comment"># param3，步长，默认为1。步长为-1时，返回倒序原序列</span></span><br></pre></td></tr></table></figure><h2 id="剑指-Offer-24-反转链表"><a href="#剑指-Offer-24-反转链表" class="headerlink" title="剑指 Offer 24. 反转链表"></a><a href="https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/">剑指 Offer 24. 反转链表</a></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">输入: <span class="number">1</span>-&gt;<span class="number">2</span>-&gt;<span class="number">3</span>-&gt;<span class="number">4</span>-&gt;<span class="number">5</span>-&gt;NULL</span><br><span class="line">输出: <span class="number">5</span>-&gt;<span class="number">4</span>-&gt;<span class="number">3</span>-&gt;<span class="number">2</span>-&gt;<span class="number">1</span>-&gt;NULL</span><br><span class="line"></span><br><span class="line">限制：</span><br><span class="line"><span class="number">0</span> &lt;= 节点个数 &lt;= <span class="number">5000</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义指针 pre，cur 分别指向 null 和头节点。</span></span><br><span class="line"><span class="comment">#遍历链表，将 cur.next 临时保存到 t 中，然后改变指针 cur 指向的节点的指向，将其指向 pre 指针指向的节点，即 cur.next = pre。然后 pre 指针指向 cur，cur 指针往前走。</span></span><br><span class="line"><span class="comment">#当遍历结束后，返回 pre 指针即可。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode(object):</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reverseList</span>(<span class="params">self, head: ListNode</span>) -&gt; ListNode:</span><br><span class="line">        pre, cur = <span class="literal">None</span>, head</span><br><span class="line">        <span class="keyword">while</span> cur:</span><br><span class="line">            t = cur.<span class="built_in">next</span></span><br><span class="line">            cur.<span class="built_in">next</span> = pre</span><br><span class="line">            pre = cur</span><br><span class="line">            cur = t</span><br><span class="line">        <span class="keyword">return</span> pre</span><br></pre></td></tr></table></figure><h2 id="剑指-Offer-05-替换空格"><a href="#剑指-Offer-05-替换空格" class="headerlink" title="剑指 Offer 05. 替换空格"></a><a href="https://leetcode.cn/problems/ti-huan-kong-ge-lcof/">剑指 Offer 05. 替换空格</a></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">请实现一个函数，把字符串 s 中的每个空格替换成<span class="string">&quot;%20&quot;</span>。</span><br><span class="line"></span><br><span class="line">示例 <span class="number">1</span>：</span><br><span class="line">输入：s = <span class="string">&quot;We are happy.&quot;</span></span><br><span class="line">输出：<span class="string">&quot;We%20are%20happy.&quot;</span></span><br><span class="line"> </span><br><span class="line">限制：</span><br><span class="line"><span class="number">0</span> &lt;= s 的长度 &lt;= <span class="number">10000</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">replaceSpace</span>(<span class="params">self, s</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> s.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;%20&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Python replace()方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 描述</span></span><br><span class="line"><span class="comment"># Python replace() 方法把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># replace()方法语法：</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span>.replace(old, new[, <span class="built_in">max</span>])</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line"><span class="comment"># old -- 将被替换的子字符串。</span></span><br><span class="line"><span class="comment"># new -- 新字符串，用于替换old子字符串。</span></span><br><span class="line"><span class="comment"># max -- 可选字符串, 替换不超过 max 次</span></span><br><span class="line"><span class="comment"># 返回值</span></span><br><span class="line"><span class="comment"># 返回字符串中的 old（旧字符串） 替换成 new(新字符串)后生成的新字符串，如果指定第三个参数max，则替换不超过 max 次。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;this is string example....wow!!! this is really string&quot;</span>;</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>.replace(<span class="string">&quot;is&quot;</span>, <span class="string">&quot;was&quot;</span>);</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>.replace(<span class="string">&quot;is&quot;</span>, <span class="string">&quot;was&quot;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment"># 以上实例输出结果如下：</span></span><br><span class="line">thwas was string example....wow!!! thwas was really string</span><br><span class="line">thwas was string example....wow!!! thwas <span class="keyword">is</span> really string</span><br></pre></td></tr></table></figure><h2 id="剑指-Offer-58-II-左旋转字符串"><a href="#剑指-Offer-58-II-左旋转字符串" class="headerlink" title="剑指 Offer 58 - II. 左旋转字符串"></a><a href="https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/">剑指 Offer 58 - II. 左旋转字符串</a></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串<span class="string">&quot;abcdefg&quot;</span>和数字<span class="number">2</span>，该函数将返回左旋转两位得到的结果<span class="string">&quot;cdefgab&quot;</span>。</span><br><span class="line"></span><br><span class="line">示例 <span class="number">1</span>：</span><br><span class="line">输入: s = <span class="string">&quot;abcdefg&quot;</span>, k = <span class="number">2</span></span><br><span class="line">输出: <span class="string">&quot;cdefgab&quot;</span></span><br><span class="line"></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line">输入: s = <span class="string">&quot;lrloseumgh&quot;</span>, k = <span class="number">6</span></span><br><span class="line">输出: <span class="string">&quot;umghlrlose&quot;</span></span><br><span class="line"> </span><br><span class="line">限制：</span><br><span class="line"><span class="number">1</span> &lt;= k &lt; s.length &lt;= <span class="number">10000</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reverseLeftWords</span>(<span class="params">self, s, n</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> s[n:]+s[<span class="number">0</span>:n]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Python字符串运算符</span></span><br><span class="line"></span><br><span class="line">下表实例变量 a 值为字符串 <span class="string">&quot;Hello&quot;</span>，b 变量值为 <span class="string">&quot;Python&quot;</span>：</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">字符串连接</td><td align="left">&gt;&gt;&gt;a + b ‘HelloPython’</td></tr><tr><td align="left">*</td><td align="left">重复输出字符串</td><td align="left">&gt;&gt;&gt;a * 2 ‘HelloHello’</td></tr><tr><td align="left">[]</td><td align="left">通过索引获取字符串中字符</td><td align="left">&gt;&gt;&gt;a[1] ‘e’</td></tr><tr><td align="left">[ : ]</td><td align="left">截取字符串中的一部分</td><td align="left">&gt;&gt;&gt;a[1:4] ‘ell’</td></tr><tr><td align="left">in</td><td align="left">成员运算符 - 如果字符串中包含给定的字符返回 True</td><td align="left">&gt;&gt;&gt;”H” in a True</td></tr><tr><td align="left">not in</td><td align="left">成员运算符 - 如果字符串中不包含给定的字符返回 True</td><td align="left">&gt;&gt;&gt;”M” not in a True</td></tr><tr><td align="left">r&#x2F;R</td><td align="left">原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母”r”（可以大小写）以外，与普通字符串有着几乎完全相同的语法。</td><td align="left">&gt;&gt;&gt;print r’\n’ \n &gt;&gt;&gt; print R’\n’ \n</td></tr><tr><td align="left">%</td><td align="left">格式字符串</td><td align="left"></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Python 的字符串内建函数</span></span><br><span class="line"></span><br><span class="line">字符串方法是从 Python1<span class="number">.6</span> 到 <span class="number">2.0</span> 慢慢加进来的 —— 它们也被加到了Jython 中。</span><br><span class="line"></span><br><span class="line">这些方法实现了 string 模块的大部分方法，如下表所示列出了目前字符串内建支持的方法，所有的方法都包含了对 Unicode 的支持，有一些甚至是专门用于 Unicode 的。</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left"><strong>方法</strong></th><th align="left"><strong>描述</strong></th></tr></thead><tbody><tr><td align="left">string.capitalize()</td><td align="left">把字符串的第一个字符大写</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-center.html">string.center(width)</a></td><td align="left">返回一个原字符串居中,并使用空格填充至长度 width 的新字符串</td></tr><tr><td align="left">string.count(str, beg&#x3D;0, end&#x3D;len(string))</td><td align="left">返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-decode.html">string.decode(encoding&#x3D;’UTF-8’, errors&#x3D;’strict’)</a></td><td align="left">以 encoding 指定的编码格式解码 string，如果出错默认报一个 ValueError 的 异 常 ， 除非 errors 指 定 的 是 ‘ignore’ 或 者’replace’</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-encode.html">string.encode(encoding&#x3D;’UTF-8’, errors&#x3D;’strict’)</a></td><td align="left">以 encoding 指定的编码格式编码 string，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-endswith.html">string.endswith(obj, beg&#x3D;0, end&#x3D;len(string))</a></strong></td><td align="left">检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-expandtabs.html">string.expandtabs(tabsize&#x3D;8)</a></td><td align="left">把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8。</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-find.html">string.find(str, beg&#x3D;0, end&#x3D;len(string))</a></strong></td><td align="left">检测 str 是否包含在 string 中，如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-format.html">string.format()</a></strong></td><td align="left">格式化字符串</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-index.html">string.index(str, beg&#x3D;0, end&#x3D;len(string))</a></strong></td><td align="left">跟find()方法一样，只不过如果str不在 string中会报一个异常.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isalnum.html">string.isalnum()</a></td><td align="left">如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True,否则返回 False</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isalpha.html">string.isalpha()</a></td><td align="left">如果 string 至少有一个字符并且所有字符都是字母则返回 True,否则返回 False</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isdecimal.html">string.isdecimal()</a></td><td align="left">如果 string 只包含十进制数字则返回 True 否则返回 False.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isdigit.html">string.isdigit()</a></td><td align="left">如果 string 只包含数字则返回 True 否则返回 False.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-islower.html">string.islower()</a></td><td align="left">如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isnumeric.html">string.isnumeric()</a></td><td align="left">如果 string 中只包含数字字符，则返回 True，否则返回 False</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isspace.html">string.isspace()</a></td><td align="left">如果 string 中只包含空格，则返回 True，否则返回 False.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-istitle.html">string.istitle()</a></td><td align="left">如果 string 是标题化的(见 title())则返回 True，否则返回 False</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-isupper.html">string.isupper()</a></td><td align="left">如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-join.html">string.join(seq)</a></strong></td><td align="left">以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-ljust.html">string.ljust(width)</a></td><td align="left">返回一个原字符串左对齐,并使用空格填充至长度 width 的新字符串</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-lower.html">string.lower()</a></td><td align="left">转换 string 中所有大写字符为小写.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-lstrip.html">string.lstrip()</a></td><td align="left">截掉 string 左边的空格</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-maketrans.html">string.maketrans(intab, outtab)</a></td><td align="left">maketrans() 方法用于创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-max.html">max(str)</a></td><td align="left">返回字符串 <em>str</em> 中最大的字母。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-min.html">min(str)</a></td><td align="left">返回字符串 <em>str</em> 中最小的字母。</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-partition.html">string.partition(str)</a></strong></td><td align="left">有点像 find()和 split()的结合体,从 str 出现的第一个位置起,把 字 符 串 string 分 成 一 个 3 元 素 的 元 组 (string_pre_str,str,string_post_str),如果 string 中不包含str 则 string_pre_str &#x3D;&#x3D; string.</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-replace.html">string.replace(str1, str2, num&#x3D;string.count(str1))</a></strong></td><td align="left">把 string 中的 str1 替换成 str2,如果 num 指定，则替换不超过 num 次.</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-rfind.html">string.rfind(str, beg&#x3D;0,end&#x3D;len(string) )</a></td><td align="left">类似于 find() 函数，返回字符串最后一次出现的位置，如果没有匹配项则返回 -1。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-rindex.html">string.rindex( str, beg&#x3D;0,end&#x3D;len(string))</a></td><td align="left">类似于 index()，不过是返回最后一个匹配到的子字符串的索引号。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-rjust.html">string.rjust(width)</a></td><td align="left">返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-rpartition.html">string.rpartition(str)</a></td><td align="left">类似于 partition()函数,不过是从右边开始查找</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-rstrip.html">string.rstrip()</a></td><td align="left">删除 string 字符串末尾的空格.</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-split.html">string.split(str&#x3D;””, num&#x3D;string.count(str))</a></strong></td><td align="left">以 str 为分隔符切片 string，如果 num 有指定值，则仅分隔 <strong>num+1</strong> 个子字符串</td></tr><tr><td align="left">[string.splitlines(<a href="https://www.runoob.com/python/att-string-splitlines.html">keepends])</a></td><td align="left">按照行(‘\r’, ‘\r\n’, ‘\n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-startswith.html">string.startswith(obj, beg&#x3D;0,end&#x3D;len(string))</a></td><td align="left">检查字符串是否是以 obj 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查.</td></tr><tr><td align="left">[string.strip(obj])</td><td align="left">在 string 上执行 lstrip()和 rstrip()</td></tr><tr><td align="left">string.swapcase()</td><td align="left">翻转 string 中的大小写</td></tr><tr><td align="left">string.title()</td><td align="left">返回”标题化”的 string,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td></tr><tr><td align="left"><strong><a href="https://www.runoob.com/python/att-string-translate.html">string.translate(str, del&#x3D;””)</a></strong></td><td align="left">根据 str 给出的表(包含 256 个字符)转换 string 的字符,要过滤掉的字符放到 del 参数中</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-upper.html">string.upper()</a></td><td align="left">转换 string 中的小写字母为大写</td></tr><tr><td align="left"><a href="https://www.runoob.com/python/att-string-zfill.html">string.zfill(width)</a></td><td align="left">返回长度为 width 的字符串，原字符串 string 右对齐，前面填充0</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/posts/290bdd6d9133/"/>
      <url>/posts/290bdd6d9133/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><p>变量是存储在内存中的值，这就意味着在创建变量时会在内存中开辟一个空间。</p><p>基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。</p><p>因此，变量可以指定不同的数据类型，这些变量可以存储整数，小数或字符。</p><h3 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h3><p>Python 中的变量赋值不需要类型声明。</p><p>每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。</p><p>每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。</p><p>等号 <strong>&#x3D;</strong> 用来给变量赋值。</p><p>等号 <strong>&#x3D;</strong> 运算符左边是一个变量名，等号 <strong>&#x3D;</strong> 运算符右边是存储在变量中的值。例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line">counter = <span class="number">100</span> <span class="comment"># 赋值整型变量</span></span><br><span class="line">miles = <span class="number">1000.0</span> <span class="comment"># 浮点型</span></span><br><span class="line">name = <span class="string">&quot;John&quot;</span> <span class="comment"># 字符串</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> counter</span><br><span class="line"><span class="built_in">print</span> miles</span><br><span class="line"><span class="built_in">print</span> name</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100</span><br><span class="line">1000.0</span><br><span class="line">John</span><br></pre></td></tr></table></figure><h3 id="多个变量赋值"><a href="#多个变量赋值" class="headerlink" title="多个变量赋值"></a>多个变量赋值</h3><p>Python允许你同时为多个变量赋值。例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = b = c = 1</span><br></pre></td></tr></table></figure><p>以上实例，创建一个整型对象，值为1，三个变量被分配到相同的内存空间上。</p><p>您也可以为多个对象指定多个变量。例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a, b, c = 1, 2, &quot;john&quot;</span><br></pre></td></tr></table></figure><p>以上实例，两个整型对象 1 和 2 分别分配给变量 a 和 b，字符串对象 “john” 分配给变量 c。</p><h3 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h3><p>Python 定义了一些标准类型，用于存储各种类型的数据。</p><p>Python有五个标准的数据类型：</p><ul><li>Numbers（数字）</li><li>String（字符串）</li><li>List（列表）</li><li>Tuple（元组）</li><li>Dictionary（字典）</li></ul><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><p>数字数据类型用于存储数值。</p><p>他们是不可改变的数据类型，这意味着改变数字数据类型会分配一个新的对象。</p><p>当你指定一个值时，Number 对象就会被创建：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var1 = 1</span><br><span class="line">var2 = 10</span><br></pre></td></tr></table></figure><p>您也可以使用del语句删除一些对象的引用。</p><p>del语句的语法是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">del var1[,var2[,var3[....,varN]]]</span><br></pre></td></tr></table></figure><p>您可以通过使用del语句删除单个或多个对象的引用。例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">del var</span><br><span class="line">del var_a, var_b</span><br></pre></td></tr></table></figure><p>Python支持四种不同的数字类型：</p><ul><li>int（有符号整型）</li><li>long（长整型，也可以代表八进制和十六进制）</li><li>float（浮点型）</li><li>complex（复数）</li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串或串(String)是由数字、字母、下划线组成的一串字符。</p><p>一般记为 :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s = &quot;a1a2···an&quot;   # n&gt;=0</span><br></pre></td></tr></table></figure><p>它是编程语言中表示文本的数据类型。</p><p>python的字串列表有2种取值顺序:</p><ul><li>从左到右索引默认0开始的，最大范围是字符串长度少1</li><li>从右到左索引默认-1开始的，最大范围是字符串开头</li></ul><p><img src="/Python.assets/python-string-slice.png" alt="img"></p><p>如果你要实现从字符串中获取一段子字符串的话，可以使用 <strong>[头下标:尾下标]</strong> 来截取相应的字符串，其中下标是从 0 开始算起，可以是正数或负数，下标可以为空表示取到头或尾。</p><p><strong>[头下标:尾下标]</strong> 获取的子字符串包含头下标的字符，但不包含尾下标的字符。</p><p>比如:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; s = &#x27;abcdef&#x27;</span><br><span class="line">&gt;&gt;&gt; s[1:5]</span><br><span class="line">&#x27;bcde&#x27;</span><br></pre></td></tr></table></figure><p>当使用以冒号分隔的字符串，python 返回一个新的对象，结果包含了以这对偏移标识的连续的内容，左边的开始是包含了下边界。</p><p>上面的结果包含了 <strong>s[1]</strong> 的值 b，而取到的最大范围不包括<strong>尾下标</strong>，就是 <strong>s[5]</strong> 的值 f。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/o99aU.png" alt="img"></p><p>加号（+）是字符串连接运算符，星号（*）是重复操作。如下实例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>           <span class="comment"># 输出完整字符串</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>[<span class="number">0</span>]        <span class="comment"># 输出字符串中的第一个字符</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>[<span class="number">2</span>:<span class="number">5</span>]      <span class="comment"># 输出字符串中第三个至第六个之间的字符串</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span>[<span class="number">2</span>:]       <span class="comment"># 输出从第三个字符开始的字符串</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span> * <span class="number">2</span>       <span class="comment"># 输出字符串两次</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">str</span> + <span class="string">&quot;TEST&quot;</span>  <span class="comment"># 输出连接的字符串</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br><span class="line">H</span><br><span class="line">llo</span><br><span class="line">llo World!</span><br><span class="line">Hello World!Hello World!</span><br><span class="line">Hello World!TEST</span><br></pre></td></tr></table></figure><p>Python 列表截取可以接收第三个参数，参数作用是截取的步长，以下实例在索引 1 到索引 4 的位置并设置为步长为 2（间隔一个位置）来截取字符串：</p><p><img src="/Python.assets/python_list_slice_2.png" alt="img"></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>List（列表） 是 Python 中使用最频繁的数据类型。</p><p>列表可以完成大多数集合类的数据结构实现。它支持字符，数字，字符串甚至可以包含列表（即嵌套）。</p><p>列表用 <strong>[ ]</strong> 标识，是 python 最通用的复合数据类型。</p><p>列表中值的切割也可以用到变量 <strong>[头下标:尾下标]</strong> ，就可以截取相应的列表，从左到右索引默认 0 开始，从右到左索引默认 -1 开始，下标可以为空表示取到头或尾。</p><p><img src="/Python.assets/list_slicing1_new1.png" alt="img"></p><p>加号 <strong>+</strong> 是列表连接运算符，星号 ***** 是重复操作。如下实例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">list</span> = [ <span class="string">&#x27;runoob&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;john&#x27;</span>, <span class="number">70.2</span> ]</span><br><span class="line">tinylist = [<span class="number">123</span>, <span class="string">&#x27;john&#x27;</span>]</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="built_in">list</span>               <span class="comment"># 输出完整列表</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">list</span>[<span class="number">0</span>]            <span class="comment"># 输出列表的第一个元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">list</span>[<span class="number">1</span>:<span class="number">3</span>]          <span class="comment"># 输出第二个至第三个元素 </span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">list</span>[<span class="number">2</span>:]           <span class="comment"># 输出从第三个开始至列表末尾的所有元素</span></span><br><span class="line"><span class="built_in">print</span> tinylist * <span class="number">2</span>       <span class="comment"># 输出列表两次</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">list</span> + tinylist    <span class="comment"># 打印组合的列表</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;runoob&#x27;, 786, 2.23, &#x27;john&#x27;, 70.2]</span><br><span class="line">runoob</span><br><span class="line">[786, 2.23]</span><br><span class="line">[2.23, &#x27;john&#x27;, 70.2]</span><br><span class="line">[123, &#x27;john&#x27;, 123, &#x27;john&#x27;]</span><br><span class="line">[&#x27;runoob&#x27;, 786, 2.23, &#x27;john&#x27;, 70.2, 123, &#x27;john&#x27;]</span><br></pre></td></tr></table></figure><h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3><p>元组是另一个数据类型，类似于 List（列表）。</p><p>元组用 <strong>()</strong> 标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">tuple</span> = ( <span class="string">&#x27;runoob&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;john&#x27;</span>, <span class="number">70.2</span> )</span><br><span class="line">tinytuple = (<span class="number">123</span>, <span class="string">&#x27;john&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="built_in">tuple</span>               <span class="comment"># 输出完整元组</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">tuple</span>[<span class="number">0</span>]            <span class="comment"># 输出元组的第一个元素</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">tuple</span>[<span class="number">1</span>:<span class="number">3</span>]          <span class="comment"># 输出第二个至第四个（不包含）的元素 </span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">tuple</span>[<span class="number">2</span>:]           <span class="comment"># 输出从第三个开始至列表末尾的所有元素</span></span><br><span class="line"><span class="built_in">print</span> tinytuple * <span class="number">2</span>       <span class="comment"># 输出元组两次</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">tuple</span> + tinytuple   <span class="comment"># 打印组合的元组</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&#x27;runoob&#x27;, 786, 2.23, &#x27;john&#x27;, 70.2)</span><br><span class="line">runoob</span><br><span class="line">(786, 2.23)</span><br><span class="line">(2.23, &#x27;john&#x27;, 70.2)</span><br><span class="line">(123, &#x27;john&#x27;, 123, &#x27;john&#x27;)</span><br><span class="line">(&#x27;runoob&#x27;, 786, 2.23, &#x27;john&#x27;, 70.2, 123, &#x27;john&#x27;)</span><br></pre></td></tr></table></figure><p>以下对元组的操作是无效的，因为元组不允许更新，而列表是允许更新的：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">tuple</span> = ( <span class="string">&#x27;runoob&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;john&#x27;</span>, <span class="number">70.2</span> )</span><br><span class="line"><span class="built_in">list</span> = [ <span class="string">&#x27;runoob&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;john&#x27;</span>, <span class="number">70.2</span> ]</span><br><span class="line"><span class="built_in">tuple</span>[<span class="number">2</span>] = <span class="number">1000</span>    <span class="comment"># 元组中是非法应用</span></span><br><span class="line"><span class="built_in">list</span>[<span class="number">2</span>] = <span class="number">1000</span>     <span class="comment"># 列表中是合法应用</span></span><br></pre></td></tr></table></figure><p>元组是不允许更新的，所以以上代码执行错误，结果如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;test.py&quot;, line 6, in &lt;module&gt;</span><br><span class="line">    tuple[2] = 1000    # 元组中是非法应用</span><br><span class="line">TypeError: &#x27;tuple&#x27; object does not support item assignment</span><br></pre></td></tr></table></figure><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><p>字典(dictionary)是除列表以外python之中最灵活的内置数据结构类型。列表是有序的对象集合，字典是无序的对象集合。</p><p>两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。</p><p>字典用”{ }”标识。字典由索引(key)和它对应的值value组成。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">dict</span> = &#123;&#125;</span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;one&#x27;</span>] = <span class="string">&quot;This is one&quot;</span></span><br><span class="line"><span class="built_in">dict</span>[<span class="number">2</span>] = <span class="string">&quot;This is two&quot;</span></span><br><span class="line"> </span><br><span class="line">tinydict = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;runoob&#x27;</span>,<span class="string">&#x27;code&#x27;</span>:<span class="number">6734</span>, <span class="string">&#x27;dept&#x27;</span>: <span class="string">&#x27;sales&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> <span class="built_in">dict</span>[<span class="string">&#x27;one&#x27;</span>]          <span class="comment"># 输出键为&#x27;one&#x27; 的值</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">dict</span>[<span class="number">2</span>]              <span class="comment"># 输出键为 2 的值</span></span><br><span class="line"><span class="built_in">print</span> tinydict             <span class="comment"># 输出完整的字典</span></span><br><span class="line"><span class="built_in">print</span> tinydict.keys()      <span class="comment"># 输出所有键</span></span><br><span class="line"><span class="built_in">print</span> tinydict.values()    <span class="comment"># 输出所有值</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is one</span><br><span class="line">This is two</span><br><span class="line">&#123;&#x27;dept&#x27;: &#x27;sales&#x27;, &#x27;code&#x27;: 6734, &#x27;name&#x27;: &#x27;runoob&#x27;&#125;</span><br><span class="line">[&#x27;dept&#x27;, &#x27;code&#x27;, &#x27;name&#x27;]</span><br><span class="line">[&#x27;sales&#x27;, 6734, &#x27;runoob&#x27;]</span><br></pre></td></tr></table></figure><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。</p><p>以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。</p><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">[int(x [,base])</td><td align="left">将x转换为一个整数</td></tr><tr><td align="left">[long(x [,base] )</td><td align="left">将x转换为一个长整数</td></tr><tr><td align="left">[float(x)]</td><td align="left">将x转换到一个浮点数</td></tr><tr><td align="left">[complex(real [,imag])]</td><td align="left">创建一个复数</td></tr><tr><td align="left">[str(x)]</td><td align="left">将对象 x 转换为字符串</td></tr><tr><td align="left">[repr(x)]</td><td align="left">将对象 x 转换为表达式字符串</td></tr><tr><td align="left">[eval(str)]</td><td align="left">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td align="left">[tuple(s)]</td><td align="left">将序列 s 转换为一个元组</td></tr><tr><td align="left">[list(s)]</td><td align="left">将序列 s 转换为一个列表</td></tr><tr><td align="left">[set(s)]</td><td align="left">转换为可变集合</td></tr><tr><td align="left">[dict(d)]</td><td align="left">创建一个字典。d 必须是一个序列 (key,value)元组。</td></tr><tr><td align="left">[frozenset(s)]</td><td align="left">转换为不可变集合</td></tr><tr><td align="left">[chr(x)]</td><td align="left">将一个整数转换为一个字符</td></tr><tr><td align="left">[unichr(x)]</td><td align="left">将一个整数转换为Unicode字符</td></tr><tr><td align="left">[ord(x)]</td><td align="left">将一个字符转换为它的整数值</td></tr><tr><td align="left">[hex(x)]</td><td align="left">将一个整数转换为一个十六进制字符串</td></tr><tr><td align="left">[oct(x)]</td><td align="left">将一个整数转换为一个八进制字符串</td></tr></tbody></table><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">简单的赋值运算符</td><td align="left">c &#x3D; a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td align="left">+&#x3D;</td><td align="left">加法赋值运算符</td><td align="left">c +&#x3D; a 等效于 c &#x3D; c + a</td></tr><tr><td align="left">-&#x3D;</td><td align="left">减法赋值运算符</td><td align="left">c -&#x3D; a 等效于 c &#x3D; c - a</td></tr><tr><td align="left">*&#x3D;</td><td align="left">乘法赋值运算符</td><td align="left">c *&#x3D; a 等效于 c &#x3D; c * a</td></tr><tr><td align="left">&#x2F;&#x3D;</td><td align="left">除法赋值运算符</td><td align="left">c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td></tr><tr><td align="left">%&#x3D;</td><td align="left">取模赋值运算符</td><td align="left">c %&#x3D; a 等效于 c &#x3D; c % a</td></tr><tr><td align="left">**&#x3D;</td><td align="left">幂赋值运算符</td><td align="left">c **&#x3D; a 等效于 c &#x3D; c ** a</td></tr><tr><td align="left">&#x2F;&#x2F;&#x3D;</td><td align="left">取整除赋值运算符</td><td align="left">c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th align="left">运算符</th><th align="left">逻辑表达式</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">and</td><td align="left">x and y</td><td align="left">布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td><td align="left">(a and b) 返回 20。</td></tr><tr><td align="left">or</td><td align="left">x or y</td><td align="left">布尔”或” - 如果 x 是非 0，它返回 x 的计算值，否则它返回 y 的计算值。</td><td align="left">(a or b) 返回 10。</td></tr><tr><td align="left">not</td><td align="left">not x</td><td align="left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td align="left">not(a and b) 返回 False</td></tr></tbody></table><h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><p>除了以上的一些运算符之外，Python还支持成员运算符，测试实例中包含了一系列的成员，包括字符串，列表或元组。</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">in</td><td align="left">如果在指定的序列中找到值返回 True，否则返回 False。</td><td align="left">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td></tr><tr><td align="left">not in</td><td align="left">如果在指定的序列中没有找到值返回 True，否则返回 False。</td><td align="left">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td></tr></tbody></table><p>以下实例演示了Python所有成员运算符的操作：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> ];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">in</span> <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;1 - 变量 a 在给定的列表中 list 中&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;1 - 变量 a 不在给定的列表中 list 中&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( b <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;2 - 变量 b 不在给定的列表中 list 中&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;2 - 变量 b 在给定的列表中 list 中&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 修改变量 a 的值</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">in</span> <span class="built_in">list</span> ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;3 - 变量 a 在给定的列表中 list 中&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;3 - 变量 a 不在给定的列表中 list 中&quot;</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 - 变量 a 不在给定的列表中 list 中</span><br><span class="line">2 - 变量 b 不在给定的列表中 list 中</span><br><span class="line">3 - 变量 a 在给定的列表中 list 中</span><br></pre></td></tr></table></figure><h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><p>身份运算符用于比较两个对象的存储单元</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">is</td><td align="left">is 是判断两个标识符是不是引用自一个对象</td><td align="left"><strong>x is y</strong>, 类似 <strong>id(x) &#x3D;&#x3D; id(y)</strong> , 如果引用的是同一个对象则返回 True，否则返回 False</td></tr><tr><td align="left">is not</td><td align="left">is not 是判断两个标识符是不是引用自不同对象</td><td align="left"><strong>x is not y</strong> ， 类似 **id(a) !&#x3D; id(b)**。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table><p><strong>注：</strong> id()函数用于获取对象内存地址。</p><p>以下实例演示了Python所有身份运算符的操作：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line">a = <span class="number">20</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">is</span> b ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;1 - a 和 b 有相同的标识&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;1 - a 和 b 没有相同的标识&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">is</span> <span class="keyword">not</span> b ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;2 - a 和 b 没有相同的标识&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;2 - a 和 b 有相同的标识&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 修改变量 b 的值</span></span><br><span class="line">b = <span class="number">30</span></span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">is</span> b ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;3 - a 和 b 有相同的标识&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;3 - a 和 b 没有相同的标识&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> ( a <span class="keyword">is</span> <span class="keyword">not</span> b ):</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;4 - a 和 b 没有相同的标识&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;4 - a 和 b 有相同的标识&quot;</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 - a 和 b 有相同的标识</span><br><span class="line">2 - a 和 b 有相同的标识</span><br><span class="line">3 - a 和 b 没有相同的标识</span><br><span class="line">4 - a 和 b 没有相同的标识</span><br></pre></td></tr></table></figure><blockquote><p>is 与 &#x3D;&#x3D; 区别：</p><p>is 用于判断两个变量引用对象是否为同一个(同一块内存空间)， &#x3D;&#x3D; 用于判断引用变量的值是否相等。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b <span class="keyword">is</span> a </span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b == a</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b <span class="keyword">is</span> a</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b == a</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></blockquote><hr><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>以下表格列出了从最高到最低优先级的所有运算符：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">**</td><td align="left">指数 (最高优先级)</td></tr><tr><td align="left">~ + -</td><td align="left">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td align="left">* &#x2F; % &#x2F;&#x2F;</td><td align="left">乘，除，取模和取整除</td></tr><tr><td align="left">+ -</td><td align="left">加法减法</td></tr><tr><td align="left">&gt;&gt; &lt;&lt;</td><td align="left">右移，左移运算符</td></tr><tr><td align="left">&amp;</td><td align="left">位 ‘AND’</td></tr><tr><td align="left">^ |</td><td align="left">位运算符</td></tr><tr><td align="left">&lt;&#x3D; &lt; &gt; &gt;&#x3D;</td><td align="left">比较运算符</td></tr><tr><td align="left">&lt;&gt; &#x3D;&#x3D; !&#x3D;</td><td align="left">等于运算符</td></tr><tr><td align="left">&#x3D; %&#x3D; &#x2F;&#x3D; &#x2F;&#x2F;&#x3D; -&#x3D; +&#x3D; *&#x3D; **&#x3D;</td><td align="left">赋值运算符</td></tr><tr><td align="left">is is not</td><td align="left">身份运算符</td></tr><tr><td align="left">in not in</td><td align="left">成员运算符</td></tr><tr><td align="left">not and or</td><td align="left">逻辑运算符</td></tr></tbody></table><p>以下实例演示了Python所有运算符优先级的操作：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line">a = <span class="number">20</span></span><br><span class="line">b = <span class="number">10</span></span><br><span class="line">c = <span class="number">15</span></span><br><span class="line">d = <span class="number">5</span></span><br><span class="line">e = <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">e = (a + b) * c / d       <span class="comment">#( 30 * 15 ) / 5</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;(a + b) * c / d 运算结果为：&quot;</span>,  e</span><br><span class="line"> </span><br><span class="line">e = ((a + b) * c) / d     <span class="comment"># (30 * 15 ) / 5</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;((a + b) * c) / d 运算结果为：&quot;</span>,  e</span><br><span class="line"> </span><br><span class="line">e = (a + b) * (c / d);    <span class="comment"># (30) * (15/5)</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;(a + b) * (c / d) 运算结果为：&quot;</span>,  e</span><br><span class="line"> </span><br><span class="line">e = a + (b * c) / d;      <span class="comment">#  20 + (150/5)</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;a + (b * c) / d 运算结果为：&quot;</span>,  e</span><br></pre></td></tr></table></figure><p>以上实例输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a + b) * c / d 运算结果为： 90</span><br><span class="line">((a + b) * c) / d 运算结果为： 90</span><br><span class="line">(a + b) * (c / d) 运算结果为： 90</span><br><span class="line">a + (b * c) / d 运算结果为： 50</span><br></pre></td></tr></table></figure><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><p>Python条件语句是通过一条或多条语句的执行结果（True或者False）来决定执行的代码块。</p><p>Python程序语言指定任何非0和非空（null）值为true，0 或者 null为false。</p><p>Python 编程中 if 语句用于控制程序的执行，基本形式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件：</span><br><span class="line">    执行语句……</span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line">    执行语句……</span><br></pre></td></tr></table></figure><p>其中”判断条件”成立时（非零），则执行后面的语句，而执行内容可以多行，以缩进来区分表示同一范围。</p><p>else 为可选语句，当需要在条件不成立时执行内容则可以执行相关语句。</p><p>if 语句的判断条件可以用&gt;（大于）、&lt;(小于)、&#x3D;&#x3D;（等于）、&gt;&#x3D;（大于等于）、&lt;&#x3D;（小于等于）来表示其关系。</p><p>当判断条件为多个值时，可以使用以下形式：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件<span class="number">1</span>:</span><br><span class="line">    执行语句<span class="number">1</span>……</span><br><span class="line"><span class="keyword">elif</span> 判断条件<span class="number">2</span>:</span><br><span class="line">    执行语句<span class="number">2</span>……</span><br><span class="line"><span class="keyword">elif</span> 判断条件<span class="number">3</span>:</span><br><span class="line">    执行语句<span class="number">3</span>……</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    执行语句<span class="number">4</span>……</span><br></pre></td></tr></table></figure><p>由于 python 并不支持 switch 语句，所以多个条件判断，只能用 elif 来实现，如果判断需要多个条件需同时判断时，可以使用 or （或），表示两个条件有一个成立时判断条件成功；使用 and （与）时，表示只有两个条件同时成立的情况下，判断条件才成功。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 例3：if语句多个条件</span></span><br><span class="line"> </span><br><span class="line">num = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> num &gt;= <span class="number">0</span> <span class="keyword">and</span> num &lt;= <span class="number">10</span>:    <span class="comment"># 判断值是否在0~10之间</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="comment"># 输出结果: hello</span></span><br><span class="line"> </span><br><span class="line">num = <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> num &lt; <span class="number">0</span> <span class="keyword">or</span> num &gt; <span class="number">10</span>:    <span class="comment"># 判断值是否在小于0或大于10</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;undefine&#x27;</span></span><br><span class="line"><span class="comment"># 输出结果: undefine</span></span><br><span class="line"> </span><br><span class="line">num = <span class="number">8</span></span><br><span class="line"><span class="comment"># 判断值是否在0~5或者10~15之间</span></span><br><span class="line"><span class="keyword">if</span> (num &gt;= <span class="number">0</span> <span class="keyword">and</span> num &lt;= <span class="number">5</span>) <span class="keyword">or</span> (num &gt;= <span class="number">10</span> <span class="keyword">and</span> num &lt;= <span class="number">15</span>):    </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;undefine&#x27;</span></span><br><span class="line"><span class="comment"># 输出结果: undefine</span></span><br></pre></td></tr></table></figure><p>当if有多个条件时可使用括号来区分判断的先后顺序，括号中的判断优先执行，此外 and 和 or 的优先级低于&gt;（大于）、&lt;（小于）等判断符号，即大于和小于在没有括号的情况下会比与或要优先判断。</p><hr><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>Python 提供了 for 循环和 while 循环（在 Python 中没有 do..while 循环）:</p><table><thead><tr><th align="left">循环类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">while 循环</td><td align="left">在给定的判断条件为 true 时执行循环体，否则退出循环体。</td></tr><tr><td align="left">for 循环</td><td align="left">重复执行语句</td></tr><tr><td align="left">嵌套循环</td><td align="left">你可以在while循环体中嵌套for循环</td></tr></tbody></table><h3 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h3><p>循环控制语句可以更改语句执行的顺序。Python支持以下循环控制语句：</p><table><thead><tr><th align="left">控制语句</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">break 语句</td><td align="left">在语句块执行过程中终止循环，并且跳出整个循环</td></tr><tr><td align="left">continue 语句</td><td align="left">在语句块执行过程中终止当前循环，跳出该次循环，执行下一次循环。</td></tr><tr><td align="left">pass 语句</td><td align="left">pass是空语句，是为了保持程序结构的完整性。</td></tr></tbody></table><hr><h2 id="While循环语句"><a href="#While循环语句" class="headerlink" title="While循环语句"></a>While循环语句</h2><p>Python 编程中 while 语句用于循环执行程序，即在某条件下，循环执行某段程序，以处理需要重复处理的相同任务。其基本形式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 判断条件(condition)：</span><br><span class="line">    执行语句(statements)……</span><br></pre></td></tr></table></figure><p>执行语句可以是单个语句或语句块。判断条件可以是任何表达式，任何非零、或非空（null）的值均为true。</p><p>当判断条件假 false 时，循环结束。</p><p>while 语句时还有另外两个重要的命令 continue，break 来跳过循环，continue 用于跳过该次循环，break 则是用于退出循环，此外”判断条件”还可以是个常值，表示循环必定成立，具体用法如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># continue 和 break 用法</span></span><br><span class="line"> </span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:   </span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span> &gt; <span class="number">0</span>:     <span class="comment"># 非双数时跳过输出</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span> i         <span class="comment"># 输出双数2、4、6、8、10</span></span><br><span class="line"> </span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:            <span class="comment"># 循环条件为1必定成立</span></span><br><span class="line">    <span class="built_in">print</span> i         <span class="comment"># 输出1~10</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">10</span>:     <span class="comment"># 当i大于10时跳出循环</span></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="循环使用-else-语句"><a href="#循环使用-else-语句" class="headerlink" title="循环使用 else 语句"></a>循环使用 else 语句</h2><p>在 python 中，while … else 在循环条件为 false 时执行 else 语句块：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"> </span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt; <span class="number">5</span>:</span><br><span class="line">   <span class="built_in">print</span> count, <span class="string">&quot; is  less than 5&quot;</span></span><br><span class="line">   count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> count, <span class="string">&quot; is not less than 5&quot;</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 is less than 5</span><br><span class="line">1 is less than 5</span><br><span class="line">2 is less than 5</span><br><span class="line">3 is less than 5</span><br><span class="line">4 is less than 5</span><br><span class="line">5 is not less than 5</span><br></pre></td></tr></table></figure><hr><h2 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h2><p>如果条件判断语句永远为 true，循环将会无限的执行下去</p><hr><h2 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h2><hr><h2 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h2><hr><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h2><hr><h2 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h2><hr><h2 id="pass语句"><a href="#pass语句" class="headerlink" title="pass语句"></a>pass语句</h2><hr><h2 id="Number（数字）"><a href="#Number（数字）" class="headerlink" title="Number（数字）"></a>Number（数字）</h2><hr><h2 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h2><hr><h2 id="列表（List）"><a href="#列表（List）" class="headerlink" title="列表（List）"></a>列表（List）</h2><hr><h2 id="元组-1"><a href="#元组-1" class="headerlink" title="元组"></a>元组</h2><h2 id="字典（Dictionary）"><a href="#字典（Dictionary）" class="headerlink" title="字典（Dictionary）"></a>字典（Dictionary）</h2><h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h2 id="文件I-x2F-O"><a href="#文件I-x2F-O" class="headerlink" title="文件I&#x2F;O"></a>文件I&#x2F;O</h2><h2 id="File方法"><a href="#File方法" class="headerlink" title="File方法"></a>File方法</h2><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><h2 id="OS文件-x2F-目录方法"><a href="#OS文件-x2F-目录方法" class="headerlink" title="OS文件&#x2F;目录方法"></a>OS文件&#x2F;目录方法</h2><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>舜桀的2023</title>
      <link href="/posts/491f272d9433/"/>
      <url>/posts/491f272d9433/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="舜桀的2023"><a href="#舜桀的2023" class="headerlink" title="舜桀的2023"></a>舜桀的2023</h1><h2 id="1月1日"><a href="#1月1日" class="headerlink" title="1月1日"></a>1月1日</h2>]]></content>
      
      
      <categories>
          
          <category> 复盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git相关</title>
      <link href="/posts/b87a3cdd6d0d/"/>
      <url>/posts/b87a3cdd6d0d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="Git取得项目的仓库"><a href="#Git取得项目的仓库" class="headerlink" title="Git取得项目的仓库"></a>Git取得项目的仓库</h2><h3 id="在工作目录中初始化新仓库"><a href="#在工作目录中初始化新仓库" class="headerlink" title="在工作目录中初始化新仓库"></a>在工作目录中初始化新仓库</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*在项目所在目录进行初始化，初始化后会得到一个名为.git的目录，存放所有Git需要的数据和资源*/</span></span><br><span class="line"></span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：*/</span></span><br><span class="line"></span><br><span class="line">$ git add *.c</span><br><span class="line"></span><br><span class="line">$ git add README</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">&#x27;initial project version&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*这样我们就得到了一个实际维护着若干文件的Git仓库*/</span>    </span><br></pre></td></tr></table></figure><h3 id="从现有仓库克隆"><a href="#从现有仓库克隆" class="headerlink" title="从现有仓库克隆"></a>从现有仓库克隆</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*如果想对某个开源项目出一份力，可以先把该项目的 Git 仓库复制一份出来，这就需要用到git clone 命令。*/</span></span><br><span class="line"><span class="comment">/*克隆仓库的命令格式为 git clone [url]。*/</span></span><br><span class="line"><span class="comment">/*比如，要克隆 Ruby 语言的 Git 代码仓库 Grit，可以用下面的命令：*/</span></span><br><span class="line"></span><br><span class="line">$ git clone git:<span class="comment">//github.com/schacon/grit.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*这会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录，然后从中取出最新版本的文件拷贝。*/</span></span><br><span class="line"><span class="comment">/*如果进入这个新建的 grit 目录，你会看到项目中的所有文件已经在里边了，准备好后续的开发和使用。*/</span></span><br><span class="line"><span class="comment">/*如果希望在克隆的时候，自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：*/</span></span><br><span class="line"></span><br><span class="line">$ git clone git:<span class="comment">//github.com/schacon/grit.git mygrit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*唯一的差别就是，现在新建的目录成了mygrit，其他的都和上边的一样。*/</span></span><br></pre></td></tr></table></figure><h2 id="Git记录每次更新到仓库"><a href="#Git记录每次更新到仓库" class="headerlink" title="Git记录每次更新到仓库"></a>Git记录每次更新到仓库</h2><p>有了一个真实项目的 Git 仓库，并从这个仓库中取出了所有文件的工作拷贝。接下来，对这些文件作些修改，在完成了一个阶段的目标之后，提交本次更新到仓库。</p><p>工作目录下面的所有文件有这两种状态：已跟踪或未跟踪。</p><p>已跟踪的文件是指本来就被纳入版本控制管理的文件，在上次快照中有它们的记录，工作一段时间后，它们的状态可能是未更新，已修改或者已放入暂存区。</p><p>而所有其他文件都属于未跟踪文件。它们既没有上次更新时的快照，也不在当前的暂存区域。初次克隆某个仓库时，工作目录中的所有文件都属于已跟踪文件，且状态为未修改。</p><p>在编辑过某些文件之后，Git 将这些文件标为已修改。我们逐步把这些修改过的文件放到暂存区域，直到最后一次性提交所有这些暂存起来的文件，如此重复。</p><h2 id="Git查看提交历史"><a href="#Git查看提交历史" class="headerlink" title="Git查看提交历史"></a>Git查看提交历史</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*在提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，可以使用 `git log` 命令查看。*/</span></span><br><span class="line"></span><br><span class="line">$ git log</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。*/</span></span><br><span class="line"><span class="comment">/*每次更新都有一个 SHA-1 校验和、作者的名字和电子邮件地址、提交时间，最后缩进一个段落显示提交说明。*/</span></span><br><span class="line"><span class="comment">/*常用 -p 选项展开显示每次提交的内容差异，用 -2 则仅显示最近的两次更新：*/</span></span><br><span class="line">    </span><br><span class="line">$ git log -p -<span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下表还列出了一些其他常用的选项及其释义。</p><table><thead><tr><th align="left">选项</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-p</td><td align="left">按补丁格式显示每个更新之间的差异。</td></tr><tr><td align="left">–word-diff</td><td align="left">按 word diff 格式显示差异。</td></tr><tr><td align="left">–stat</td><td align="left">显示每次更新的文件修改统计信息。</td></tr><tr><td align="left">–shortstat</td><td align="left">只显示 –stat 中最后的行数修改添加移除统计。</td></tr><tr><td align="left">–name-only</td><td align="left">仅在提交信息后显示已修改的文件清单。</td></tr><tr><td align="left">–name-status</td><td align="left">显示新增、修改、删除的文件清单。</td></tr><tr><td align="left">–abbrev-commit</td><td align="left">仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。</td></tr><tr><td align="left">–relative-date</td><td align="left">使用较短的相对时间显示（比如，“2 weeks ago”）。</td></tr><tr><td align="left">–graph</td><td align="left">显示 ASCII 图形表示的分支合并历史。</td></tr><tr><td align="left">–pretty</td><td align="left">使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。</td></tr><tr><td align="left">–oneline</td><td align="left">–pretty&#x3D;oneline –abbrev-commit 的简化用法。</td></tr></tbody></table><p>限制输出长度</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*下面的命令列出所有最近两周内的提交：*/</span></span><br><span class="line"></span><br><span class="line">$ git log --since=<span class="number">2.</span>weeks</span><br><span class="line"></span><br><span class="line"><span class="comment">/*可以给出各种时间格式，比如说具体的某一天（“2008-01-15”），或者是多久以前（“2 years 1 day 3 minutes ago”）。*/</span></span><br><span class="line"><span class="comment">/*另一个真正实用的git log选项是路径(path)，如果只关心某些文件或者目录的历史提交，可以在 git log 选项的最后指定它们的路径。因为是放在最后位置上的选项，所以用两个短划线（--）隔开之前的选项和后面限定的路径名。*/</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">选项</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-(n)</td><td align="left">仅显示最近的 n 条提交</td></tr><tr><td align="left">–since, –after</td><td align="left">仅显示指定时间之后的提交。</td></tr><tr><td align="left">–until, –before</td><td align="left">仅显示指定时间之前的提交。</td></tr><tr><td align="left">–author</td><td align="left">仅显示指定作者相关的提交。</td></tr><tr><td align="left">–committer</td><td align="left">仅显示指定提交者相关的提交。</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*如果要查看 Git 仓库中，2008 年 10 月期间，Junio Hamano 提交的但未合并的测试脚本（位于项目的 t/ 目录下的文件），可以用下面的查询命令：*/</span></span><br><span class="line"></span><br><span class="line">$ git log --pretty=<span class="string">&quot;%h - %s&quot;</span> --author=gitster --since=<span class="string">&quot;2008-10-01&quot;</span> \ --before=<span class="string">&quot;2008-11-01&quot;</span> --no-merges -- t/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Git撤销操作"><a href="#Git撤销操作" class="headerlink" title="Git撤销操作"></a>Git撤销操作</h2><h3 id="修改最后一次提交"><a href="#修改最后一次提交" class="headerlink" title="修改最后一次提交"></a>修改最后一次提交</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*提交完了才发现漏掉了几个文件没有加，或者提交信息写错了。想要撤消刚才的提交操作，可以使用 --amend 选项重新提交*/</span></span><br><span class="line"></span><br><span class="line">$ git commit --amend</span><br><span class="line"></span><br><span class="line"><span class="comment">/*此命令将使用当前的暂存区域快照提交。*/</span></span><br><span class="line"><span class="comment">/*如果刚才提交完没有作任何改动，直接运行此命令的话，相当于有机会重新编辑提交说明，但将要提交的文件快照和之前的一样。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*启动文本编辑器后，会看到上次提交时的说明，编辑它确认没问题后保存退出，就会使用新的提交说明覆盖刚才失误的提交。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*如果刚才提交时忘了暂存某些修改，可以先补上暂存操作，然后再运行 --amend 提交：*/</span></span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">&#x27;initial commit&#x27;</span></span><br><span class="line">    </span><br><span class="line">$ git add forgotten_file</span><br><span class="line">    </span><br><span class="line">$ git commit --amend</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*上面的三条命令最终只是产生一个提交，第二个提交命令修正了第一个的提交内容。*/</span></span><br></pre></td></tr></table></figure><h3 id="取消已经暂存的文件"><a href="#取消已经暂存的文件" class="headerlink" title="取消已经暂存的文件"></a>取消已经暂存的文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*有两个修改过的文件，想要分开提交，但不小心用 git add . 全加到了暂存区域。该如何撤消暂存其中的一个文件呢？*/</span></span><br><span class="line"></span><br><span class="line">$ git reset HEAD benchmarks.rb</span><br><span class="line"></span><br><span class="line"><span class="comment">/*现在 benchmarks.rb 文件又回到了之前已修改未暂存的状态。*/</span></span><br></pre></td></tr></table></figure><h3 id="取消对文件的修改"><a href="#取消对文件的修改" class="headerlink" title="取消对文件的修改"></a>取消对文件的修改</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*该如何取消修改，回到之前的状态（也就是修改之前的版本）*/</span></span><br><span class="line"></span><br><span class="line">$ git checkout -- benchmarks.rb</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在用这条命令前，请务必确定真的不再需要保留刚才的修改。*/</span></span><br></pre></td></tr></table></figure><h2 id="Git远程仓库的使用"><a href="#Git远程仓库的使用" class="headerlink" title="Git远程仓库的使用"></a>Git远程仓库的使用</h2><p>远程仓库是指托管在网络上的项目仓库，可能会有好多个，其中有些你只能读，另外有些可以写。</p><p>同他人协作开发某个项目时，需要管理这些远程仓库，以便推送或拉取数据，分享各自的工作进展。 </p><p>管理远程仓库的工作，包括添加远程库，移除废弃的远程库，管理各式远程库分支，定义是否跟踪这些分支，等等。 </p><h3 id="查看当前的远程库"><a href="#查看当前的远程库" class="headerlink" title="查看当前的远程库"></a>查看当前的远程库</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*要查看当前配置有哪些远程仓库，可以用 git remote 命令，它会列出每个远程库的简短名字。*/</span></span><br><span class="line"><span class="comment">/*在克隆完某个项目后，至少可以看到一个名为origin 的远程库，Git 默认使用这个名字来标识你所克隆的原始仓库：*/</span></span><br><span class="line"></span><br><span class="line">$ git clone git:<span class="comment">//github.com/schacon/ticgit.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Cloning into &#x27;ticgit&#x27;...</span></span><br><span class="line"><span class="comment">remote: Reusing existing pack: 1857, done.</span></span><br><span class="line"><span class="comment">remote: Total 1857 (delta 0), reused 0 (delta 0)</span></span><br><span class="line"><span class="comment">Receiving objects: 100% (1857/1857), 374.35 KiB | 193.00 KiB/s, done.</span></span><br><span class="line"><span class="comment">Resolving deltas: 100% (772/772), done.</span></span><br><span class="line"><span class="comment">Checking connectivity... done.*/</span></span><br><span class="line"></span><br><span class="line">$ cd ticgit</span><br><span class="line">    </span><br><span class="line">$ git remote</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*origin*/</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*也可以加上 -v 选项（译注：此为 --verbose 的简写，取首字母），显示对应的克隆地址：*/</span></span><br><span class="line"></span><br><span class="line">$ git remote -v</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*origin  git://github.com/schacon/ticgit.git (fetch)</span></span><br><span class="line"><span class="comment">origin  git://github.com/schacon/ticgit.git (push)*/</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*如果有多个远程仓库，此命令将全部列出。比如在我的 Grit 项目中，可以看到：*/</span></span><br><span class="line"></span><br><span class="line">$ cd grit</span><br><span class="line">$ git remote -v</span><br><span class="line">bakkdoor  git:<span class="comment">//github.com/bakkdoor/grit.git</span></span><br><span class="line">cho45     git:<span class="comment">//github.com/cho45/grit.git</span></span><br><span class="line">defunkt   git:<span class="comment">//github.com/defunkt/grit.git</span></span><br><span class="line">koke      git:<span class="comment">//github.com/koke/grit.git</span></span><br><span class="line">origin    git<span class="meta">@github</span>.com:mojombo/grit.git</span><br><span class="line"><span class="comment">/*这样一来，我就可以非常轻松地从这些用户的仓库中，拉取他们的提交到本地。*/</span></span><br><span class="line"><span class="comment">/*需要注意，上面列出的地址只有 origin 用的是 SSH URL 链接，所以也只有这个仓库能推送数据上去。*/</span></span><br></pre></td></tr></table></figure><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用，运行git remote add [shortname] [url]：*/</span></span><br><span class="line"></span><br><span class="line">$ git remote</span><br><span class="line">    </span><br><span class="line">origin</span><br><span class="line">    </span><br><span class="line">$ git remote add pb git:<span class="comment">//github.com/paulboone/ticgit.git</span></span><br><span class="line"></span><br><span class="line">$ git remote -v</span><br><span class="line">    </span><br><span class="line">origin  git:<span class="comment">//github.com/schacon/ticgit.git</span></span><br><span class="line">pb  git:<span class="comment">//github.com/paulboone/ticgit.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*现在可以用字符串 pb 指代对应的仓库地址了。比如说，要抓取所有 Paul 有的，但本地仓库没有的信息，可以运行 git fetch pb：*/</span></span><br><span class="line"></span><br><span class="line">$ git fetch pb</span><br><span class="line">    </span><br><span class="line">remote: Counting objects: <span class="number">58</span>, done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">41</span>/<span class="number">41</span>), done.</span><br><span class="line">remote: Total <span class="number">44</span> (delta <span class="number">24</span>), reused <span class="number">1</span> (delta <span class="number">0</span>)</span><br><span class="line">Unpacking objects: <span class="number">100</span>% (<span class="number">44</span>/<span class="number">44</span>), done.</span><br><span class="line">From git:<span class="comment">//github.com/paulboone/ticgit</span></span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">branch</span>]      master     -&gt; pb/master</span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">branch</span>]      ticgit     -&gt; pb/ticgit</span><br><span class="line">     </span><br><span class="line"><span class="comment">/*现在，Paul 的主干分支（master）已经完全可以在本地访问了，对应的名字是 pb/master，你可以将它合并到自己的某个分支，或者切换到这个分支。*/</span></span><br></pre></td></tr></table></figure><h3 id="从远程仓库抓取数据"><a href="#从远程仓库抓取数据" class="headerlink" title="从远程仓库抓取数据"></a>从远程仓库抓取数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*可以用下面的命令从远程仓库抓取数据到本地：*/</span></span><br><span class="line"></span><br><span class="line">$ git fetch [remote-name]</span><br><span class="line"></span><br><span class="line"><span class="comment">/*此命令会到远程仓库中拉取所有你本地仓库中还没有的数据。运行完成后，你就可以在本地访问该远程仓库中的所有分支，将其中某个分支合并到本地，或者只是取出某个分支，一探究竟。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*如果是克隆了一个仓库，此命令会自动将远程仓库归于 origin 名下。*/</span></span><br><span class="line"><span class="comment">/*所以，git fetch origin 会抓取从你上次克隆以来别人上传到此远程仓库中的所有更新（或是上次 fetch 以来别人提交的更新）。*/</span></span><br><span class="line"><span class="comment">/*有一点很重要，需要记住，fetch 命令只是将远端的数据拉到本地仓库，并不自动合并到当前工作分支，只有当你确实准备好了，才能手工合并。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*如果设置了某个分支用于跟踪某个远端仓库的分支，可以使用git pull命令自动抓取数据下来，然后将远端分支自动合并到本地仓库中当前分支。*/</span></span><br><span class="line"><span class="comment">/*在日常工作中我们经常这么用，既快且好。实际上，默认情况下 git clone 命令本质上就是自动创建了本地的 master 分支用于跟踪远程仓库中的 master 分支（假设远程仓库确实有 master 分支）。所以一般我们运行 git pull，目的都是要从原始克隆的远端仓库中抓取数据后，合并到工作目录中的当前分支。*/</span></span><br></pre></td></tr></table></figure><h3 id="推送数据到远程仓库"><a href="#推送数据到远程仓库" class="headerlink" title="推送数据到远程仓库"></a>推送数据到远程仓库</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*项目进行到一个阶段，要同别人分享目前的成果，可以将本地仓库中的数据推送到远程仓库。*/</span></span><br><span class="line"><span class="comment">/*实现这个任务的命令很简单： git push [remote-name] [branch-name]。*/</span></span><br><span class="line"><span class="comment">/*如果要把本地的 master 分支推送到 origin 服务器上（再次说明下，克隆操作会自动使用默认的 master 和 origin 名字），可以运行下面的命令：*/</span></span><br><span class="line"></span><br><span class="line">$ git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">/*只有在所克隆的服务器上有写权限，或者同一时刻没有其他人在推数据，这条命令才会如期完成任务。*/</span></span><br><span class="line"><span class="comment">/*如果在你推数据前，已经有其他人推送了若干更新，那你的推送操作就会被驳回。你必须先把他们的更新抓取到本地，合并到自己的项目中，然后才可以再次推送。*/</span></span><br></pre></td></tr></table></figure><h3 id="查看远程仓库信息"><a href="#查看远程仓库信息" class="headerlink" title="查看远程仓库信息"></a>查看远程仓库信息</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*可以通过命令 git remote show [remote-name] 查看某个远程仓库的详细信息，比如要看所克隆的 origin 仓库，可以运行：*/</span></span><br><span class="line"></span><br><span class="line">$ git remote show origin</span><br><span class="line">    </span><br><span class="line">* remote origin</span><br><span class="line">  URL: git:<span class="comment">//github.com/schacon/ticgit.git</span></span><br><span class="line">  Remote branch merged with <span class="string">&#x27;git pull&#x27;</span> <span class="keyword">while</span> on branch master</span><br><span class="line">    master</span><br><span class="line">  Tracked remote branches</span><br><span class="line">    master</span><br><span class="line">    ticgit</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*除了对应的克隆地址外，它还给出了许多额外的信息。它友善地告诉你如果是在 master 分支，就可以用 git pull 命令抓取数据合并到本地。另外还列出了所有处于跟踪状态中的远端分支。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*随着使用 Git 的深入，git remote show 给出的信息可能会像这样：*/</span></span><br><span class="line"></span><br><span class="line">$ git remote show origin</span><br><span class="line">      </span><br><span class="line">* remote origin</span><br><span class="line">  URL: git<span class="meta">@github</span>.com:defunkt/github.git</span><br><span class="line">  Remote branch merged with <span class="string">&#x27;git pull&#x27;</span> <span class="keyword">while</span> on branch issues</span><br><span class="line">    issues</span><br><span class="line">  Remote branch merged with <span class="string">&#x27;git pull&#x27;</span> <span class="keyword">while</span> on branch master</span><br><span class="line">    master</span><br><span class="line">  New remote <span class="title function_">branches</span> <span class="params">(next fetch will store in remotes/origin)</span></span><br><span class="line">    caching</span><br><span class="line">  Stale tracking <span class="title function_">branches</span> <span class="params">(use <span class="string">&#x27;git remote prune&#x27;</span>)</span></span><br><span class="line">    libwalker</span><br><span class="line">    walker2</span><br><span class="line">  Tracked remote branches</span><br><span class="line">    acl</span><br><span class="line">    apiv2</span><br><span class="line">    dashboard2</span><br><span class="line">    issues</span><br><span class="line">    master</span><br><span class="line">    postgres</span><br><span class="line">  Local branch pushed with <span class="string">&#x27;git push&#x27;</span></span><br><span class="line">    master:master</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*它告诉我们，运行 git push 时缺省推送的分支是什么（译注：最后两行）。*/</span></span><br><span class="line"><span class="comment">/*它还显示了有哪些远端分支还没有同步到本地（译注：第六行的 caching 分支），哪些已同步到本地的远端分支在远端服务器上已被删除（译注：Stale tracking branches下面的两个分支），以及运行 git pull 时将自动合并哪些分支（译注：前四行中列出的 issues 和 master 分支）。*/</span></span><br></pre></td></tr></table></figure><h3 id="远程仓库的删除和重命名"><a href="#远程仓库的删除和重命名" class="headerlink" title="远程仓库的删除和重命名"></a>远程仓库的删除和重命名</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*可以用 git remote rename命令修改某个远程仓库在本地的简称，比如想把 pb 改成 paul，可以这么运行：*/</span></span><br><span class="line"></span><br><span class="line">$ git remote rename pb paul</span><br><span class="line">$ git remote</span><br><span class="line">    </span><br><span class="line">origin</span><br><span class="line">paul</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*注意，对远程仓库的重命名，也会使对应的分支名称发生变化，原来的 pb/master 分支现在成了 paul/master。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*碰到远端仓库服务器迁移，或者原来的克隆镜像不再使用，又或者某个参与者不再贡献代码，那么需要移除对应的远端仓库，可以运行 git remote rm 命令：*/</span></span><br><span class="line"></span><br><span class="line">$ git remote rm paul</span><br><span class="line">$ git remote</span><br><span class="line">    </span><br><span class="line">origin</span><br></pre></td></tr></table></figure><h2 id="Git打标签"><a href="#Git打标签" class="headerlink" title="Git打标签"></a>Git打标签</h2><h3 id="列出已有标签"><a href="#列出已有标签" class="headerlink" title="列出已有标签"></a>列出已有标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line">v0<span class="number">.1</span></span><br><span class="line">v1<span class="number">.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示的标签按字母顺序排列，所以标签的先后并不表示重要程度的轻重。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*我们可以用特定的搜索模式列出符合条件的标签。*/</span></span><br><span class="line"><span class="comment">/*在 Git 自身项目仓库中，有着超过 240 个标签，如果你只对 1.4.2 系列的版本感兴趣，可以运行下面的命令：*/</span></span><br><span class="line"></span><br><span class="line">$ git tag -l <span class="string">&#x27;v1.4.2.*&#x27;</span></span><br><span class="line">    </span><br><span class="line">v1<span class="number">.4</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line">v1<span class="number">.4</span><span class="number">.2</span><span class="number">.2</span></span><br><span class="line">v1<span class="number">.4</span><span class="number">.2</span><span class="number">.3</span></span><br><span class="line">v1<span class="number">.4</span><span class="number">.2</span><span class="number">.4</span></span><br></pre></td></tr></table></figure><h3 id="新建标签"><a href="#新建标签" class="headerlink" title="新建标签"></a>新建标签</h3><p>Git 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。</p><p>轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。</p><p>而含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。</p><p>一般我们都建议使用含附注型的标签，以便保留相关信息；当然，如果只是临时性加注标签，或者不需要旁注额外信息，用轻量级标签也没问题。 </p><h3 id="含附注的标签"><a href="#含附注的标签" class="headerlink" title="含附注的标签"></a>含附注的标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可：*/</span></span><br><span class="line"></span><br><span class="line">$ git tag -a v1<span class="number">.4</span> -m <span class="string">&#x27;my version 1.4&#x27;</span></span><br><span class="line">$ git tag</span><br><span class="line">    </span><br><span class="line">v0<span class="number">.1</span></span><br><span class="line">v1<span class="number">.3</span></span><br><span class="line">v1<span class="number">.4</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*而 -m 选项则指定了对应的标签说明，Git 会将此说明一同保存在标签对象中。如果没有给出该选项，Git 会启动文本编辑软件供你输入标签说明。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*可以使用 git show 命令查看相应标签的版本信息，并连同显示打标签时的提交对象。*/</span></span><br><span class="line"></span><br><span class="line">$ git show v1<span class="number">.4</span></span><br><span class="line">    </span><br><span class="line">tag v1<span class="number">.4</span></span><br><span class="line">Tagger: Scott Chacon &lt;schacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Mon Feb <span class="number">9</span> <span class="number">14</span>:<span class="number">45</span>:<span class="number">11</span> <span class="number">2009</span> -0800</span><br><span class="line"></span><br><span class="line">my version <span class="number">1.4</span></span><br><span class="line"></span><br><span class="line">commit 15027957951b64cf874c3557a0f3547bd83b3ff6</span><br><span class="line">Merge: 4a447f7... a6b4c97...</span><br><span class="line">Author: Scott Chacon &lt;schacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Sun Feb <span class="number">8</span> <span class="number">19</span>:<span class="number">02</span>:<span class="number">46</span> <span class="number">2009</span> -0800</span><br><span class="line"></span><br><span class="line">    Merge branch <span class="string">&#x27;experiment&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*可以看到在提交对象信息上面，列出了此标签的提交者和提交时间，以及相应的标签说明。*/</span></span><br></pre></td></tr></table></figure><h3 id="签署标签"><a href="#签署标签" class="headerlink" title="签署标签"></a>签署标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*如果你有自己的私钥，还可以用 GPG 来签署标签，只需要把之前的 -a 改为 -s（译注： 取 signed 的首字母）即可：*/</span></span><br><span class="line"></span><br><span class="line">$ git tag -s v1<span class="number">.5</span> -m <span class="string">&#x27;my signed 1.5 tag&#x27;</span></span><br><span class="line"></span><br><span class="line">You need a passphrase to unlock the secret key <span class="keyword">for</span></span><br><span class="line">user: <span class="string">&quot;Scott Chacon &lt;schacon@gee-mail.com&gt;&quot;</span></span><br><span class="line"><span class="number">1024</span>-bit DSA key, ID F721C45A, created <span class="number">2009</span>-<span class="number">02</span>-09</span><br><span class="line"></span><br><span class="line"><span class="comment">/*现在再运行 git show 会看到对应的 GPG 签名也附在其内：*/</span></span><br><span class="line"></span><br><span class="line">$ git show v1<span class="number">.5</span></span><br><span class="line"></span><br><span class="line">tag v1<span class="number">.5</span></span><br><span class="line">Tagger: Scott Chacon &lt;schacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Mon Feb <span class="number">9</span> <span class="number">15</span>:<span class="number">22</span>:<span class="number">20</span> <span class="number">2009</span> -0800</span><br><span class="line"></span><br><span class="line">my signed <span class="number">1.5</span> tag</span><br><span class="line">-----BEGIN PGP SIGNATURE-----</span><br><span class="line">Version: GnuPG v1<span class="number">.4</span><span class="number">.8</span> (Darwin)</span><br><span class="line"></span><br><span class="line">iEYEABECAAYFAkmQurIACgkQON3DxfchxFr5cACeIMN+ZxLKggJQf0QYiQBwgySN</span><br><span class="line">Ki0An2JeAVUCAiJ7Ox6ZEtK+NvZAj82/</span><br><span class="line">=WryJ</span><br><span class="line">-----END PGP SIGNATURE-----</span><br><span class="line">commit 15027957951b64cf874c3557a0f3547bd83b3ff6</span><br><span class="line">Merge: 4a447f7... a6b4c97...</span><br><span class="line">Author: Scott Chacon &lt;schacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Sun Feb <span class="number">8</span> <span class="number">19</span>:<span class="number">02</span>:<span class="number">46</span> <span class="number">2009</span> -0800</span><br><span class="line"></span><br><span class="line">    Merge branch <span class="string">&#x27;experiment&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="轻量级标签"><a href="#轻量级标签" class="headerlink" title="轻量级标签"></a>轻量级标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*轻量级标签实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可：*/</span></span><br><span class="line"></span><br><span class="line">$ git tag v1<span class="number">.4</span>-lw</span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line">v0<span class="number">.1</span></span><br><span class="line">v1<span class="number">.3</span></span><br><span class="line">v1<span class="number">.4</span></span><br><span class="line">v1<span class="number">.4</span>-lw</span><br><span class="line">v1<span class="number">.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*现在运行 git show 查看此标签信息，就只有相应的提交对象摘要：*/</span></span><br><span class="line"></span><br><span class="line">$ git show v1<span class="number">.4</span>-lw</span><br><span class="line"></span><br><span class="line">commit 15027957951b64cf874c3557a0f3547bd83b3ff6</span><br><span class="line">Merge: 4a447f7... a6b4c97...</span><br><span class="line">Author: Scott Chacon &lt;schacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Sun Feb <span class="number">8</span> <span class="number">19</span>:<span class="number">02</span>:<span class="number">46</span> <span class="number">2009</span> -0800</span><br><span class="line"></span><br><span class="line">    Merge branch <span class="string">&#x27;experiment&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="验证标签"><a href="#验证标签" class="headerlink" title="验证标签"></a>验证标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*可以使用 git tag -v [tag-name] （译注：取 verify 的首字母）的方式验证已经签署的标签。*/</span></span><br><span class="line"><span class="comment">/*此命令会调用 GPG 来验证签名，所以你需要有签署者的公钥，存放在 keyring 中，才能验证：*/</span></span><br><span class="line"></span><br><span class="line">$ git tag -v v1<span class="number">.4</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">object 883653babd8ee7ea23e6a5c392bb739348b1eb61</span><br><span class="line">type commit</span><br><span class="line">tag v1<span class="number">.4</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line">tagger Junio C Hamano &lt;junkio<span class="meta">@cox</span>.net&gt; <span class="number">1158138501</span> -<span class="number">0700</span></span><br><span class="line"></span><br><span class="line">GIT <span class="number">1.4</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">Minor fixes since <span class="number">1.4</span><span class="number">.2</span>, including git-mv and git-http with alternates.</span><br><span class="line">gpg: Signature made Wed Sep <span class="number">13</span> <span class="number">02</span>:08:<span class="number">25</span> <span class="number">2006</span> PDT using DSA key ID F3119B9A</span><br><span class="line">gpg: Good signature from <span class="string">&quot;Junio C Hamano &lt;junkio@cox.net&gt;&quot;</span></span><br><span class="line">gpg:                 aka <span class="string">&quot;[jpeg image of size 1513]&quot;</span></span><br><span class="line">Primary key fingerprint: <span class="number">3565</span> 2A26 <span class="number">2040</span> E066 C9A7  4A7D C0C6 D9A4 F311 9B9A</span><br><span class="line"></span><br><span class="line"><span class="comment">/*若是没有签署者的公钥，会报告类似下面这样的错误：*/</span></span><br><span class="line"></span><br><span class="line">gpg: Signature made Wed Sep <span class="number">13</span> <span class="number">02</span>:08:<span class="number">25</span> <span class="number">2006</span> PDT using DSA key ID F3119B9A</span><br><span class="line">gpg: Can<span class="string">&#x27;t check signature: public key not found</span></span><br><span class="line"><span class="string">error: could not verify the tag &#x27;</span>v1<span class="number">.4</span><span class="number">.2</span><span class="number">.1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="后期加注标签"><a href="#后期加注标签" class="headerlink" title="后期加注标签"></a>后期加注标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*可以在后期对早先的某次提交加注标签。比如在下面展示的提交历史中：*/</span></span><br><span class="line"></span><br><span class="line">$ git log --pretty=oneline</span><br><span class="line"></span><br><span class="line">15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch <span class="string">&#x27;experiment&#x27;</span></span><br><span class="line">a6b4c97498bd301d84096da251c98a07c7723e65 beginning write support</span><br><span class="line">0d52aaab4479697da7686c15f77a3d64d9165190 one more thing</span><br><span class="line">6d52a271eda8725415634dd79daabbc4d9b6008e Merge branch <span class="string">&#x27;experiment&#x27;</span></span><br><span class="line">0b7434d86859cc7b8c3d5e1dddfed66ff742fcbc added a commit function</span><br><span class="line">4682c3261057305bdd616e23b64b0857d832627b added a todo file</span><br><span class="line">166ae0c4d3f420721acbb115cc33848dfcc2121a started write support</span><br><span class="line">9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile</span><br><span class="line">964f16d36dfccde844893cac5b347e7b3d44abbc commit the todo</span><br><span class="line">8a5cbc430f1a9c3d00faaeffd07798508422908a updated readme</span><br><span class="line"></span><br><span class="line"><span class="comment">/*我们忘了在提交 “updated rakefile” 后为此项目打上版本号 v1.2，没关系，现在也能做。只要在打标签的时候跟上对应提交对象的校验和（或前几位字符）即可：*/</span></span><br><span class="line"></span><br><span class="line">$ git tag -a v1<span class="number">.2</span> 9fceb02</span><br><span class="line"></span><br><span class="line">可以看到我们已经补上了标签：</span><br><span class="line"></span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line">v0<span class="number">.1</span></span><br><span class="line">v1<span class="number">.2</span></span><br><span class="line">v1<span class="number">.3</span></span><br><span class="line">v1<span class="number">.4</span></span><br><span class="line">v1<span class="number">.4</span>-lw</span><br><span class="line">v1<span class="number">.5</span></span><br><span class="line"></span><br><span class="line">$ git show v1<span class="number">.2</span></span><br><span class="line"></span><br><span class="line">tag v1<span class="number">.2</span></span><br><span class="line">Tagger: Scott Chacon &lt;schacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Mon Feb <span class="number">9</span> <span class="number">15</span>:<span class="number">32</span>:<span class="number">16</span> <span class="number">2009</span> -0800</span><br><span class="line"></span><br><span class="line">version <span class="number">1.2</span></span><br><span class="line">commit 9fceb02d0ae598e95dc970b74767f19372d61af8</span><br><span class="line">Author: Magnus Chacon &lt;mchacon<span class="meta">@gee</span>-mail.com&gt;</span><br><span class="line">Date:   Sun Apr <span class="number">27</span> <span class="number">20</span>:<span class="number">43</span>:<span class="number">35</span> <span class="number">2008</span> -<span class="number">0700</span></span><br><span class="line"></span><br><span class="line">    updated rakefile</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="分享标签"><a href="#分享标签" class="headerlink" title="分享标签"></a>分享标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*默认情况下，git push 并不会把标签传送到远端服务器上，只有通过显式命令才能分享标签到远端仓库。*/</span></span><br><span class="line"><span class="comment">/*其命令格式如同推送分支，运行git push origin [tagname]即可：*/</span></span><br><span class="line"></span><br><span class="line">$ git push origin v1<span class="number">.5</span></span><br><span class="line">    </span><br><span class="line">Counting objects: <span class="number">50</span>, done.</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">38</span>/<span class="number">38</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">44</span>/<span class="number">44</span>), <span class="number">4.56</span> KiB, done.</span><br><span class="line">Total <span class="number">44</span> (delta <span class="number">18</span>), reused <span class="number">8</span> (delta <span class="number">1</span>)</span><br><span class="line">To git<span class="meta">@github</span>.com:schacon/simplegit.git</span><br><span class="line">* [<span class="keyword">new</span> <span class="title class_">tag</span>]         v1<span class="number">.5</span> -&gt; v1<span class="number">.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*如果要一次推送所有本地新增的标签上去，可以使用 --tags 选项：*/</span></span><br><span class="line"></span><br><span class="line">$ git push origin --tags</span><br><span class="line">    </span><br><span class="line">Counting objects: <span class="number">50</span>, done.</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">38</span>/<span class="number">38</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">44</span>/<span class="number">44</span>), <span class="number">4.56</span> KiB, done.</span><br><span class="line">Total <span class="number">44</span> (delta <span class="number">18</span>), reused <span class="number">8</span> (delta <span class="number">1</span>)</span><br><span class="line">To git<span class="meta">@github</span>.com:schacon/simplegit.git</span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">tag</span>]         v0<span class="number">.1</span> -&gt; v0<span class="number">.1</span></span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">tag</span>]         v1<span class="number">.2</span> -&gt; v1<span class="number">.2</span></span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">tag</span>]         v1<span class="number">.4</span> -&gt; v1<span class="number">.4</span></span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">tag</span>]         v1<span class="number">.4</span>-lw -&gt; v1<span class="number">.4</span>-lw</span><br><span class="line"> * [<span class="keyword">new</span> <span class="title class_">tag</span>]         v1<span class="number">.5</span> -&gt; v1<span class="number">.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*现在，其他人克隆共享仓库或拉取数据同步后，也会看到这些标签。*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>舜桀的单词表</title>
      <link href="/posts/b0e37f2d3829/"/>
      <url>/posts/b0e37f2d3829/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>这里主要记录我背过的一些单词和喜欢的句子~</p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试面试干货</title>
      <link href="/posts/ecf024466033/"/>
      <url>/posts/ecf024466033/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>测试用例设计的能力</p><p>需求，代码结构</p><p>拆解需求的能力</p><p>经验</p><p>业务变革</p><p>LTC</p><p>12月底薪 + 绩效（0-4个月） +  </p><p>风险分析</p><p>测试用例执行不一致的风险</p><p>代码规范</p><p>自动化工具</p><p>初级提供一些帮助</p><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>尊敬的面试官您好，我是来自北京交通大学软件工程专业的杨顺杰，我想面试是测试工程师的实习，在大学期间我认真学习，在软件测试与质量保障、项目管理等相关课程取得了较好的成绩，在二手交易平台项目中曾使用自动化测试工具selenium对网页进行了简单的测试，了解了selenium元素的定位属性以及鼠标控制，同时作为负责人负责了一项大学生创新创业项目，统筹规划，并最终获评国家级项目，学习之余我也积极参与导师项目，选择测试优化的方向，设计了<strong>DiKlee:一种缺陷预测引导的测试用例生成方法</strong>并撰写了一篇论文目前处于在投状态。这些经历也让我对测试有了一些了解，并产生了很大的兴趣，同时我是一个有耐心、热爱沟通、坚持学习的人，这也和测试这个岗位较为匹配。以上就是我的全部介绍，感谢面试官的聆听。</p><p><img src="/%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%B9%B2%E8%B4%A7.assets/1673839050294.png" alt="1673839050294"></p><h2 id="一、-测试流程"><a href="#一、-测试流程" class="headerlink" title="一、 测试流程"></a><strong>一、 测试流程</strong></h2><h3 id="1-软件测试的基本流程有哪些？"><a href="#1-软件测试的基本流程有哪些？" class="headerlink" title="1.软件测试的基本流程有哪些？"></a><strong>1.软件测试的基本流程有哪些？</strong></h3><p>需求分析、编写测试用例、评审测试用例、搭建环境、等待程序开发包、部署程序开发包、冒烟测试、执行具体的测试用例细节、Bug 跟踪处理回归测试、N 轮之后满足需求，测试结束</p><h3 id="2-测试结束的标准是什么？"><a href="#2-测试结束的标准是什么？" class="headerlink" title="2.测试结束的标准是什么？"></a><strong>2.测试结束的标准是什么？</strong></h3><p>第一类标准：测试超过了预定时间，则停止测试。</p><p>第二类标准：执行了所有的测试用例，但并没有发现故障，则停止测试。</p><p>第三类标准：使用特定的测试用例设计方案作为判断测试停止的基础</p><p>第四类标准：正面指出停止测试的具体要求，即停止测试的标准可定义为查出某一预订数目的故障。</p><p>第五类标准：根据单位时间内查出故障的数量决定是否停止测试</p><h3 id="3-软件测试的原则是什么？"><a href="#3-软件测试的原则是什么？" class="headerlink" title="3.软件测试的原则是什么？"></a><strong>3.软件测试的原则是什么？</strong></h3><ol><li><p>应当把“尽早地和不断地进行软件测试”作为软件开发者的座右铭。</p></li><li><p>测试用例应由测试输入数据和对应的预期输出结果这两部分组成。</p></li><li><p>程序员应避免检查自己的程序。</p></li><li><p>在设计测试用例时，应包括合理的输入条件和不合理的输入条件。</p></li><li><p>软件测试的原则</p></li></ol><p>sum &#x3D; 0</p><p>for i in range(1,101):</p><p>​sum &#x3D; sum + i</p><p>print(sum)</p><ol start="6"><li><p>充分注意测试中的群集现象。 经验表明，测试后程序中残存的错误数目与该程序中已发现的错误数目成正比。</p></li><li><p>严格执行测试计划，排除测试的随意性。</p></li><li><p>应当对每一个测试结果做全面检查。</p></li><li><p>妥善保存测试计划，测试用例，出错统计和最终分析报告，为维护提供方便。</p></li></ol><h2 id="二、-用例设计"><a href="#二、-用例设计" class="headerlink" title="二、 用例设计"></a><strong>二、 用例设计</strong></h2><h3 id="1-什么是测试用例，测试用例的基本要素？"><a href="#1-什么是测试用例，测试用例的基本要素？" class="headerlink" title="1.什么是测试用例，测试用例的基本要素？"></a><strong>1.什么是测试用例，测试用例的基本要素？</strong></h3><p>测试用例是为某个特殊目标而编制的一组测试输入、执行条件以及预期结果，以便测试某个程序路径或核实是否满足某个特定需求。</p><p>测试用例的基本元素： 测试索引，测试环境，测试输入，测试操作，预期结果，评价标准。</p><h3 id="2-描述测试用例设计的完整过程？"><a href="#2-描述测试用例设计的完整过程？" class="headerlink" title="2.描述测试用例设计的完整过程？"></a><strong>2.描述测试用例设计的完整过程？</strong></h3><p>首先根据需求文档、概要设计、测试计划、测试方案细分出各功能模块的测试项</p><p>再根据各测试项，按照概要设计、详细设计以及测试方案中测试的覆盖率细分出测试子项</p><p>最后按照测试子项、根据测试用例的设计方法（因果图、边界值、等价类等的设计方法）书写测试用例。</p><p><strong>注意</strong></p><ul><li>选用适合的用例管理工具（如 word，excel）</li><li>用例一定要及时更新（补充新的想法，删除过时的需求）</li><li>做好用例分级</li><li>做好用例评审，写用例之前可以征询相关人员的意见，如果评审通过可以参考其执行测试，如果未通过， 需要继续修改直到通过为止。</li><li>可以考虑结对编写，这个是不错的主意</li><li>要全面，包括功能、性能、兼容性、安全性、易用性、容错性等等</li><li>注意把握适当的颗粒度</li></ul><h3 id="3-好的测试用例有哪些特点？"><a href="#3-好的测试用例有哪些特点？" class="headerlink" title="3.好的测试用例有哪些特点？"></a><strong>3.好的测试用例有哪些特点？</strong></h3><p>质量属性：</p><ul><li>正确性：确保测试标题描述部分的内容正确性。</li><li>经济性：只为确定需要的目的设计相应的测试步骤。</li><li>可重复性：自我一致性，即不管谁执行此用例，结果一样。</li><li>适应性：既能适应短期需要，又能考虑长远需要。</li><li>可追踪性：用例能追踪到一个具体的需求。</li><li>自我清理性：单个用例不会影响整个测试环境，即用例执行完了可以恢复原有的测试环境。</li></ul><p><strong>结构化和可测试性</strong></p><ul><li>含有规范的测试标题和编号。</li><li>含有一个确定的测试某一个特定需求的目的。</li><li>含有关于测试方法的描述。</li><li>指定条件信息-环境、数据、预置的条件测试、安全入口等。</li><li>含有操作步骤和预期结果。</li><li>陈述任何辅助证据，例如截图报告并确保这些东西妥善保存。</li><li>确保测试环境的干净（即用例不会影响整个环境）。</li><li>描述时使用主动语气结构。</li><li>操作步骤不要超过 15 步。</li><li>确保单个用例测试执行时用时不超过 20 分钟。</li><li>自动化脚本用例添加必要的注释，比如目的、输入和期望结果。</li><li>如果可能，建议提供可选择性的预置条件测试。</li><li>用例之间的先后顺序是否跟业务流程一致，即用例在业务流程中的彼此顺序关系是否合理。</li></ul><p><strong>配置管理：</strong></p><ul><li>采用命名和编号规范归档。</li><li>保存为特定的格式，文件类型。</li><li>用例版本是否与当前被测试软件版本一致（对应）。</li><li>包含用例需要的相应测试对象，如特定数据库。</li><li>存档阅读。</li><li>存档时按角色控制访问方式</li><li>当网络备份时存档。</li><li>离线归档</li></ul><h3 id="4-写测试用例时要注意什么问题"><a href="#4-写测试用例时要注意什么问题" class="headerlink" title="4.写测试用例时要注意什么问题"></a><strong>4.写测试用例时要注意什么问题</strong></h3><p>1、复用率：如果随着产品不停得升级，需要设计的详细些，追求一劳永逸；仅使用一两次，则没有必要设计的过于详细；</p><p>2、项目进展：项目时间如果允许可以设计的详细些，反之则能执行即可；</p><p>3、使用对象：测试用例如果供多人使用，尤其让后参加测试的工程师来执行，则需要设计的详细些。</p><p>4、用例的冗余</p><p>5、操作步骤要细分简明，可执行</p><h3 id="5-如何在有限的情况下提高测试效率，保证产品的上线质量？"><a href="#5-如何在有限的情况下提高测试效率，保证产品的上线质量？" class="headerlink" title="5.如何在有限的情况下提高测试效率，保证产品的上线质量？"></a><strong>5.如何在有限的情况下提高测试效率，保证产品的上线质量？</strong></h3><p>1、一个详细合理的详细的测试计划</p><p>2、测试尽早的介入项目，连接项目的业务需求，做好测试的前期准备</p><p>3、对测试项目前景充满信心，调整最佳心态，保持愉悦的工作心情</p><p>4、提高测试接受的标准，减少测试版本的送测次数</p><h3 id="6-如何降低漏测率"><a href="#6-如何降低漏测率" class="headerlink" title="6.如何降低漏测率"></a><strong>6.如何降低漏测率</strong></h3><p>1、需求评审</p><p>2、梳理需求，尽早与开发人员、需求人员进行需求确认，统一不同角色对需求的认识</p><p>3、用例设计及评审</p><p>4、测试执行</p><p>5、bug 回归</p><p>6、发布前的功能回归</p><h3 id="7-测试用例的基本设计方法"><a href="#7-测试用例的基本设计方法" class="headerlink" title="7.测试用例的基本设计方法"></a><strong>7.测试用例的基本设计方法</strong></h3><p>1、等价类划分法</p><p>2、边界值分析法</p><p>3、错误推断法</p><p>4、因果图判定表法</p><p>5、正交实验法</p><p>6、流程法</p><p>7、场景法</p><h3 id="8-测试为什么要写测试用例"><a href="#8-测试为什么要写测试用例" class="headerlink" title="8.测试为什么要写测试用例"></a><strong>8.测试为什么要写测试用例</strong></h3><p>1、深入了解需求的过程</p><p>2、测试执行的指导</p><p>3、规划测试数据的准备</p><p>4、反应测试进度</p><p>5、举一反三发现隐藏缺陷</p><p>6、分析缺陷标准</p><h2 id="三、-缺陷-bug"><a href="#三、-缺陷-bug" class="headerlink" title="三、 缺陷 bug"></a><strong>三、 缺陷 bug</strong></h2><h3 id="1-什么是缺陷报告，缺陷报告的作用，缺陷报告的要点"><a href="#1-什么是缺陷报告，缺陷报告的作用，缺陷报告的要点" class="headerlink" title="1.什么是缺陷报告，缺陷报告的作用，缺陷报告的要点"></a><strong>1.什么是缺陷报告，缺陷报告的作用，缺陷报告的要点</strong></h3><p>(1)缺陷报告是描述软件缺陷现象和重现步骤的集合。<a href="https://www.zhihu.com/search?q=%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7%E6%8A%A5%E5%91%8A&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">软件缺陷报告</a> Software Bug Report(SBR)或软件问题报告 software Problem Report(SPR)。</p><p>(2)缺陷报告是<a href="https://www.zhihu.com/search?q=%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E4%BA%BA%E5%91%98&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">软件测试人员</a>的工作成果之一，体现软件测试的价值缺陷报告可以把软件存在的缺陷准确的描述</p><p>出来，便于开发人员修正缺陷报告可以反映项目&#x2F;产品当前的质量状态，便于项目整体进度和质量控制软件测试缺陷</p><p>报告是软件测试的输出成果之一，可以衡量测试人员的工作能力。</p><p>(3)标题(Title)简洁、准确、完整、反映缺陷本质、方便查询前缀+标题正文，标题正文采用结果和动作，或者现象和位置的方式表达；步骤(Steps)可复现、完整、简洁、准确按数字编号；实际结果(Actual results)准确、详细描述软件的现象和特征；期望结果(Expected results)准确、丰富、有理有据；平台(Platforms)准确；截图 (Sereenshots)准确反映缺陷特征；注释(Notes)关于缺陷的辅助说明</p><h3 id="2-软件测试缺陷报告的-5C-原则"><a href="#2-软件测试缺陷报告的-5C-原则" class="headerlink" title="2.软件测试缺陷报告的 5C 原则"></a><strong>2.软件测试缺陷报告的 5C 原则</strong></h3><p>Correct（准确）：每个组成部分的描述准确，不会引起误解；</p><p>Clear（清晰）：每个组成部分的描述清晰，易于理解；</p><p>Concise（简洁）：只包含必不可少的信息，不包括任何多余的内容；</p><p>Complete（完整）：包含复现该缺陷的完整步骤和其他本质信息；</p><p>Consistent（一致）：按照一致的格式书写全部缺陷报告。</p><h3 id="3-测试为什么要写测试用例"><a href="#3-测试为什么要写测试用例" class="headerlink" title="3.测试为什么要写测试用例"></a><strong>3.测试为什么要写测试用例</strong></h3><p>1、深入了解需求的过程</p><p>2、测试执行的指导</p><p>3、规划测试数据的准备</p><p>4、反应测试进度</p><p>5、举一反三发现隐藏缺陷</p><p>6、分析缺陷标准</p><h2 id="四、-缺陷-bug"><a href="#四、-缺陷-bug" class="headerlink" title="四、 缺陷 bug"></a><strong>四、 缺陷 bug</strong></h2><h3 id="1-什么是缺陷报告，缺陷报告的作用，缺陷报告的要点-1"><a href="#1-什么是缺陷报告，缺陷报告的作用，缺陷报告的要点-1" class="headerlink" title="1.什么是缺陷报告，缺陷报告的作用，缺陷报告的要点"></a><strong>1.什么是缺陷报告，缺陷报告的作用，缺陷报告的要点</strong></h3><p>(1)缺陷报告是描述软件缺陷现象和重现步骤的集合。软件缺陷报告 Software Bug Report(SBR)或软件问题报</p><p>告 software Problem Report(SPR)。</p><p>(2)缺陷报告是软件测试人员的工作成果之一，体现软件测试的价值缺陷报告可以把软件存在的缺陷准确的描述</p><p>出来，便于开发人员修正缺陷报告可以反映项目&#x2F;产品当前的质量状态，便于项目整体进度和质量控制软件测试缺陷</p><p>报告是软件测试的输出成果之一，可以衡量测试人员的工作能力。</p><p>(3)标题(Title)简洁、准确、完整、反映缺陷本质、方便查询前缀+标题正文，标题正文采用结果和动作，或者</p><p>现象和位置的方式表达；步骤(Steps)可复现、完整、简洁、准确按数字编号；实际结果(Actual results)准确、详</p><p>细描述软件的现象和特征；期望结果(Expected results)准确、丰富、有理有据；平台(Platforms)准确；截图</p><p>(Sereenshots)准确反映缺陷特征；注释(Notes)关于缺陷的辅助说明</p><h3 id="2-软件测试缺陷报告的-5C-原则-1"><a href="#2-软件测试缺陷报告的-5C-原则-1" class="headerlink" title="2.软件测试缺陷报告的 5C 原则"></a><strong>2.软件测试缺陷报告的 5C 原则</strong></h3><p>Correct（准确）：每个组成部分的描述准确，不会引起误解；</p><p>Clear（清晰）：每个组成部分的描述清晰，易于理解；</p><p>Concise（简洁）：只包含必不可少的信息，不包括任何多余的内容；</p><p>Complete（完整）：包含复现该缺陷的完整步骤和其他本质信息；</p><p>Consistent（一致）：按照一致的格式书写全部缺陷报告。</p><h3 id="3-软件缺陷的生命周期？"><a href="#3-软件缺陷的生命周期？" class="headerlink" title="3.软件缺陷的生命周期？"></a><strong>3.软件缺陷的生命周期？</strong></h3><p>![img](data:image&#x2F;svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='722' height='368'></svg>)</p><p>测试人员提交新的 Bug 入库，错误状态为 New。</p><p>高级测试人员验证错误，如果确认是错误，分配给相应的开发人员，设置状态为 Open。如果不是错误，则拒绝，设置为 Declined(拒绝)状态。</p><p>开发人员查询状态为 Open 的 Bug， 如果不是错误，则置状态为 Declined；如果是 Bug 则修复并置状态为 Fixed。不能解决的 Bug，要留下文字说明及保持 Bug 为 Open 状态。对于不能解决和延期解决的 Bug，不能由开发人员自己决定，一般要通过某种会议（评审会）通过才能认可。 测试人员查询状态为 Fixed 的 Bug，然后验证 Bug 是否已解决，如解决置 Bug 的状态为 Closed，如没有解决置状态为 Reopen。</p><h3 id="4-缺陷描述（报告单）中应该包括哪些内容？"><a href="#4-缺陷描述（报告单）中应该包括哪些内容？" class="headerlink" title="4.缺陷描述（报告单）中应该包括哪些内容？"></a><strong>4.缺陷描述（报告单）中应该包括哪些内容？</strong></h3><p>缺陷的标题，简要描述。缺陷的类型。缺陷的详细步骤描述。缺陷的实际结果。期望结果。有的缺陷需要上传</p><p>截图，日志信息。缺陷的等级。缺陷指派给开发同事。（开发主管）</p><h3 id="5-如何提高缺陷的记录质量？"><a href="#5-如何提高缺陷的记录质量？" class="headerlink" title="5.如何提高缺陷的记录质量？"></a><strong>5.如何提高缺陷的记录质量？</strong></h3><p>通用 UI 要统一、准确；尽量使用业界惯用的表达术语和表达方法；使用业界惯用的表达术语和表达方法，保证表达准确，体现专业化；每条缺陷报告只包括一个缺陷；不可重现的缺陷也要报告；明确指明缺陷类型；明确指明缺陷严重等级和优先等级；描述 (Description) ，简洁、准确，完整，揭示缺陷实质，记录缺陷或缺陷出现的位置；</p><p>短行之间使用自动数字序号，使用相同的字体、字号、行间距； 每一个步骤尽量只记录一个操作；确认步骤完整，准确，简短；根据缺陷，可选择是否进行图象捕捉； 检查拼写和语法缺陷；尽量使用短语和短句，避免复杂句型句式；缺陷描述内容。</p><h3 id="6-如果一个缺陷被提交后，开发人员认为不是问题，怎么处理？"><a href="#6-如果一个缺陷被提交后，开发人员认为不是问题，怎么处理？" class="headerlink" title="6.如果一个缺陷被提交后，开发人员认为不是问题，怎么处理？"></a><strong>6.如果一个缺陷被提交后，开发人员认为不是问题，怎么处理？</strong></h3><p>a)首先，将问题提交到缺陷管理库里面进行备案。</p><p>b)然后，要获取判断的依据和标准：</p><ul><li>v.根据需求说明书、产品说明、设计文档等，确认实际结果是否与计划有不一致的地方，提供缺陷是否确认的直接依据；</li><li>vi.如果没有文档依据，可以根据类似软件的一般特性来说明是否存在不一致的地方，来确认是否是缺陷；</li><li>vii.根据用户的一般使用习惯，来确认是否是缺陷；</li><li>viii.与设计人员、开发人员和客户代表等相关人员探讨，确认是否是缺陷；</li></ul><p>c)合理的论述，向测试经理说明自己的判断的理由，注意客观、严谨，不掺杂个人情绪。</p><p>d)等待测试经理做出最终决定，如果仍然存在争议，可以通过公司政策所提供的渠道，向上级反映，并有上级 做出决定。</p><h3 id="7-缺陷的优先级划分和描述"><a href="#7-缺陷的优先级划分和描述" class="headerlink" title="7.缺陷的优先级划分和描述"></a><strong>7.缺陷的优先级划分和描述</strong></h3><p>一般来说按照下面的来分，具体的是由每个公司而定。</p><p>软件缺陷有四种级别，分别为：致命的(Fatal)，严重的(Critical)，一般的(Major)，微小的(Minor)。</p><p>A 类—致命的软件缺陷(Fatal):造成系统或应用程序崩溃、死机、系统挂起，或造成数据丢失，主要功能完全丧失，导致本模块以及相关模块异常等问题。如代码错误，死循环，数据库发生死锁、与数据库连接错误或数据通讯错误， 未考虑异常操作，功能错误等</p><p>B 类—严重错误的软件缺陷（critical）：系统的主要功能部分丧失、数据不能保存，系统的次要功能完全丧失。</p><p>问题局限在本模块，导致模块功能失效或异常退出。如致命的错误声明，程序接口错误，数据库的表、业务规则、 缺省值未加完整性等约束条件</p><p>C 类—一般错误的软件缺陷（major）：次要功能没有完全实现但不影响使用。如提示信息不太准确，或用户界面差，操作时间长，模块功能部分失效等，打印内容、格式错误，删除操作未给出提示，数据库表中有过多的空字段等</p><p>D 类—较小错误的软件缺陷（Minor）</p><p>:使操作者不方便或遇到麻烦，但它不影响功能过的操作和执行，如错别字、 界面不规范（字体大小不统一，文字排列不整齐，可输入区域和只读区域没有明显的区分标志），辅助说明描述不清楚</p><p>E 类- 建议问题的软件缺陷（Enhancemental）：由问题提出人对测试对象的改进意见或测试人员提出的建议、质 疑。</p><h2 id="五、-测试实例"><a href="#五、-测试实例" class="headerlink" title="五、 测试实例"></a><strong>五、 测试实例</strong></h2><p><strong>1.一个有广告的纸杯子，请设计测试用例？</strong></p><p>测试项目：杯子</p><p>需求测试：查看杯子使用说明书</p><p>界面测试：查看杯子外观</p><p>功能度：用水杯装水看漏不漏；水能不能被喝到</p><p>安全性：杯子有没有毒或细菌</p><p>可靠性：杯子从不同高度落下的损坏程度</p><p>可移植性：杯子在不同的地方、温度等环境下是否都可以正常使用</p><p>兼容性：杯子是否能够容纳果汁、白水、酒精、汽油等</p><p>易用性：杯子是否烫手、是否有防滑措施、是否方便饮用</p><p>用户文档：使用手册是否对杯子的用法、限制、使用条件等有详细描述</p><p>疲劳测试：将杯子盛上水（案例一）放 24 小时检查泄漏时间和情况；盛上汽油（案例二）放 24 小时检查泄漏时间和情况等</p><p>压力测试：用根针并在针上面不断加重量，看压强多大时会穿透</p><p>跌落测试: 杯子加包装(有填充物),在多高的情况摔下不破损</p><p>震动测试: 杯子加包装(有填充物),六面震动,检查产品是否能应对恶劣的铁路\公路\航空运输</p><p>基本功能测试（逻辑功能测试）。</p><p>（1）硬度：是否达到设计标准。</p><p>装载能力：在杯子内分别装入少量的、半杯的、满杯的，看其装载量是否达到设计标准。</p><p>装载种类：开水（是否产生异味）、温水、冷水、冰水、咖啡…</p><p>（2）界面测试（UI 测试）。</p><p>看其形状、大小设计是否适合人方便拿起。</p><p>外观是否吸引人（广告嘛），赏心悦目。</p><p>带广告的图案沾水受是否掉色、模糊。</p><p>（3）<a href="https://www.zhihu.com/search?q=%E6%98%93%E7%94%A8%E6%80%A7%E6%B5%8B%E8%AF%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">易用性测试</a>。</p><p>看其形状、大小设计是否适合人方便拿起。</p><p>残疾人士用此杯去喝水的容程度。</p><p>杯子设计是否上大下小，在运输过程中可以套在一起有效利用空间，在使用时也容易拿开。</p><p>（4）稳定性测试（24 X 7 测试）。装入液体后记录其多少以后漏水。</p><p>（5）安全性测试。杯子所用的材料（包括纸基、涂层和广告颜料）是否符合食品卫生标准，在内外温度等环境</p><p>因素下是否会与所盛各种饮料相反应，而产生对人体有害的物质。</p><p>（6）本地化测试。为国际化和本地化的需要，广告图案和文字是否在政治、宗教和文化方面具有广泛的适用性。</p><p>（7）对设计的改进建议。“如果是一次性杯子，能否标示已使用（比如变色）”和“杯子是否有使用者标贴（多 人使用时防止混淆）”。</p><h3 id="3-一个身份证号码输入框，怎么设计用例？"><a href="#3-一个身份证号码输入框，怎么设计用例？" class="headerlink" title="3.一个身份证号码输入框，怎么设计用例？"></a><strong>3.一个身份证号码输入框，怎么设计用例？</strong></h3><p>校验身份证号规则的有效性（包括地址码、生日期码、顺序码和校验码</p><p>校验 15 位身份证号和 18 位身份正好都是可用的</p><p>校验末位是 X 的情况</p><p>校验不足 15 位、16-17 位和大于 18 位的情况</p><p>如果是必输项，校验不输入的时候会不会有正确的提示</p><p>如果不是必输项，则要校验不输入的时候流程能否正常进行</p><p>校验输入非数字的情况，是否会有正确提示信息（包括大小写字母、汉字、特殊字符和标点符号）</p><p>校验输入全角的数字的时候，系统是否会识别（这个得根据需求确定是否可以使用全角的数字）</p><h3 id="3-登录功能怎么设计测试用例？"><a href="#3-登录功能怎么设计测试用例？" class="headerlink" title="3.登录功能怎么设计测试用例？"></a><strong>3.登录功能怎么设计测试用例？</strong></h3><p><strong>具体需求：</strong></p><p>有一个登录页面，有一个账号和一个密码输入框, 一个提交按钮。</p><p><strong>此题的考察目的：</strong></p><p>1、了解需求（测什么都是从了解需求开始）；</p><p>2、是否有设计 Test Case 的能力</p><p>3、是否熟悉各种测试方法；</p><p>4、是否有丰富的 Web 测试经验；</p><p>5、是否了解 Web 开发；</p><p>A B</p><p><strong>了解需求：</strong></p><p>1、登录界面应该是弹出窗口式的，还是直接在网页里面；</p><p>2、账号长度和密码的强度（比如需要多少位、大小写敏感、特殊字符混搭等）；</p><p>3、界面美观是否有特殊要求？（即是否要进行 UI 测试）；</p><p>4、····</p><p><strong>用例设计：</strong></p><p>测试需求分析完成后，开始用例设计，主要可以从以下几个方面考虑：</p><p><strong>功能测试(Function Test)</strong></p><p>1、输入正确的账号和密码，点击提交按钮，验证是否能正确登录。（正常输入）</p><p>2、输入错误的账号或者密码, 验证登录会失败，并且提示相应的错误信息。（错误校验）</p><p>3、登录成功后能否跳转到正确的页面（低）</p><p>4、账号和密码，如果太短或者太长，应该怎么处理（安全性，密码太短时是否有提示）</p><p>5、账号和密码，中有特殊字符（比如空格），和其他非英文的情况（是否做了过滤）</p><p>6、记住账号的功能</p><p>7、登录失败后，不能记录密码的功能</p><p>8、账号和密码前后有空格的处理</p><p>9、密码是否加密显示（星号圆点等）</p><p>10、牵扯到验证码的，还要考虑文字是否扭曲过度导致辨认难度大，考虑颜色（色盲使用者），刷新或换一个按 钮是否好用</p><p>11、登录页面中的注册、忘记密码，登出用另一帐号登录等链接是否正确</p><p>12、输入密码的时候，大写键盘开启的时候要有提示信息。</p><p>13、什么都不输入，点击提交按钮，看提示信息。（非空检查）</p><p><strong>界面测试(UI Test)</strong></p><p>1、布局是否合理，2 个 Testbox 和一个按钮是否对齐</p><p>2、Testbox 和按钮的长度，高度是否符合要求</p><p>3、界面的设计风格是否与 UI 的设计风格统一</p><p>4、界面中的文字简洁易懂，没有错别字。</p><p><strong>性能测试(Performance Test)</strong></p><p>1、打开登录页面，需要几秒</p><p>2 、输入正确的账号和密码后，登录成功跳转到新页面，不超过 5 秒</p><p><strong>安全性测试(Security Test)</strong></p><p>1、登录成功后生成的 Cookie 是否有 HttpOnly(降低脚本盗取风险)</p><p>2、账号和密码是否通过加密的方式，发送给 Web 服务器</p><p>3、账号和密码的验证，应该是用服务器端验证，而不能单单是在客户端用 javaScript 验证</p><p>4、账号和密码的输入框，应该屏蔽 SQL 注入攻击</p><p>5、账号和密码的输入框，应该禁止输入脚本（防止 XSS 攻击）</p><p>6、错误登录的次数限制（防止暴力破解）</p><p>7、考虑是否支持多用户在同一机器上登录；</p><p>8、考虑一用户在多台机器上登录</p><p><strong>可用性测试(Usability Test)</strong></p><p>1、是否可以全用键盘操作，是否有快捷键</p><p>2、输入账号，密码后按回车，是否可以登录</p><p>3、输入框是否可以以 Tab 键切换</p><p><strong>兼容性测试（Compatibility Test）</strong></p><p>1、主流的浏览器下能否显示正常已经功能正常（IE6~11, FireFox, Chrome, Safari 等 ）</p><p>2、不同的平台是否能正常工作，比如 Windows, Mac</p><p>3、移动设备上是否正常工作，比如 iPhone, Android</p><p>4、不同的分辨率</p><p><strong>本地化测试 （Localization Test）</strong></p><p>1、不同语言环境下，页面的显示是否正确。</p><p>软件辅助性测试 （Accessibility Test）</p><p>软件辅助功能测试是指测试软件是否向残疾用户提供足够的辅助功能</p><p>1、高对比度下能否显示正常（视力不好的人使用）</p><h3 id="4-移动端和-web-端测试有什么区别"><a href="#4-移动端和-web-端测试有什么区别" class="headerlink" title="4.移动端和 web 端测试有什么区别"></a><strong>4.移动端和 web 端测试有什么区别</strong></h3><p>单纯从功能测试的层面上来讲的话，APP 测试、web 测试 在流程和功能测试上是没有区别的。</p><p>根据两者载体不一样，则区别如下：</p><p>系统结构方面</p><p>web 项目，b&#x2F;s 架构，基于浏览器的；web 测试只要更新了服务器端，客户端就会同步会更新。</p><p>app 项目，c&#x2F;s 结构的，必须要有客户端；app 修改了服务端，则客户端用户所有核心版本都需要进行回归</p><p>测试一遍。</p><p>性能方面</p><p>web 项目</p><p>需监测 响应时间、CPU、Memory</p><p>app 项目</p><p>除了监测 响应时间、CPU、Memory 外，还需监测 流量、电量等</p><p>兼容方面</p><p>（1）web 项目：</p><p>\1. 浏览器（火狐、谷歌、IE 等）</p><p>\2. 操作系统（Windows7、Windows10、Linux 等）</p><p>（2）app 项目：</p><p>\1. 设备系统:iOS（ipad、iphone）、Android（三星、华为、联想等） 、Windows（Win7、Win8）、 OSX（Mac）</p><p>\2. 手机设备可根据 手机型号、分辨率不同</p><p>相对于 Wed 项目，APP 有专项测试</p><p>\1. 干扰测试：中断，来电，短信，关机，重启等</p><p>\2. 弱<a href="https://www.zhihu.com/search?q=%E7%BD%91%E7%BB%9C%E6%B5%8B%E8%AF%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">网络测试</a>（模拟 2g、3g、4g，wifi 网络状态以及丢包情况）；网络切换测试（网络断开后重连、3g 切换到 4g&#x2F;wifi 等）</p><p>\3. 安装、更新、卸载</p><p>安装：需考虑安装时的中断、弱网、安装后删除安装文件等情况</p><p>卸载：需考虑 卸载后是否删除 app 相关的文件</p><p>更新：分强制更新、非强制更新、增量包更新、断点续传、弱网状态下更新<br>\4. 界面操作：关于手机端测试，需注意手势，横竖屏切换，多点触控，前后台切换</p><p>\5. 安全测试：安装包是否可反编译代码、安装包是否签名、权限设置，例如访问通讯录等</p><p>\6. 边界测试：可用存储空间少、没有 SD 卡&#x2F;双 SD 卡、飞行模式、系统时间有误、第三方依赖（QQ、微信 登录）等</p><p>\7. 权限测试：设置某个 App 是否可以获取该权限，例如是否可访问通讯录、相册、照相机等</p><p>测试工具方面</p><p>自动化工具：APP 一般使用 Appium; Web 一般使用 Selenium</p><p>性能测试工具：APP 一般使用 JMeter; Web 一般使用 LR、JMeter</p><h3 id="5-测试一个-C-x2F-S-客户端时，需要考虑的因素"><a href="#5-测试一个-C-x2F-S-客户端时，需要考虑的因素" class="headerlink" title="5.测试一个 C&#x2F;S 客户端时，需要考虑的因素"></a><strong>5.测试一个 C&#x2F;S 客户端时，需要考虑的因素</strong></h3><p>客户端安装测试</p><p>客户端升级测试</p><p>客户端可维护性测试</p><p>（1）个体的<a href="https://www.zhihu.com/search?q=%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">客户端应用</a>以“分离的”模式被测试——不考虑服务器和底层网络的运行；</p><p>（2）客户端软件和关联的服务器端应用被一起测试，但网络运行不被明显的考虑；</p><p>（3）完整的 C&#x2F;S 体系结构，包括网络运行和性能被测试。</p><p>应用功能测试——客户端应用被独立地执行，以揭示在其运行中的错误。</p><p>服务器测试——测试服务器的协调和数据管理功能，也考虑服务器性能（整体反映时间和数据吞吐量）。</p><p><a href="https://www.zhihu.com/search?q=%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B5%8B%E8%AF%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">数据库测试</a>——测试服务器存储的数据的精确性和完整性，检查客户端应用提交的事务，以保证数据被正确地 存储、更新和检索。</p><p>事务测试——创建一系列的测试以保证每类事务被按照需求处理。测试着重于处理的正确性，也关注性能问题。</p><p>网络通信测试——这些测试验证网络节点间的通信正常地发生，并且消息传递、事务和相关的网络交通无错的 发生</p><h3 id="6-测试电梯，请详细描述"><a href="#6-测试电梯，请详细描述" class="headerlink" title="6.测试电梯，请详细描述"></a><strong>6.测试电梯，请详细描述</strong></h3><p><strong>如果给你一台电梯，请问你如何测试它，分析如下：</strong></p><p>1.功能：上升、下降、停止、开门、关门、梯内电话、灯光、指示灯等；</p><p>2.性能：速度、反应时间、关门时间等；</p><p>3.压力：超载、尖锐物碰撞电梯壁等；</p><p>4.安全：停电、报警装置、轿箱停靠位置、有人扒门时的情况等；</p><p>5.可用性：按键高度、操作是否方便、舒适程度等；</p><p>6.UI：美观程度、光滑程度、形状、质感等；</p><p>7.稳定性：长时间运行情况等；</p><p>8.兼容性：不同电压是否可工作、不同类型电话是否可安装等。其实在简单分析的过程中，发现许多东西根本</p><p>测试不全，比如电话、灯光、材质、调度程序、可维修性等，当发现在一个用例中无法说清楚时，这些应该拆分开</p><p>来分别测试。可以告诉主考官，你需要模块化地测试电话、灯光等。再有在一起的组装测试。</p><p><strong>下面是详细的测试点：</strong></p><p>需求测试：查看电梯使用说明书、安全说明书等</p><p>界面测试：查看电梯外观</p><p>功能测试：1.测试电梯能否实现正常的上升和下降功能。</p><p>2.电梯的按钮是否都可以使用。</p><p>3.电梯门的打开，关闭是否正常。</p><p>4.报警装置是否可用。</p><p>5.与其他电梯之间是否协作良好。</p><p>6.通风状况如何。</p><p>7.突然停电时的情况。</p><p>8.上升途中的响应。<br>1）电梯本来在 1 楼，如果有人按 18 楼，那么电梯在上升到 5 楼的时候，有人按了 10 楼， 这时候是否会在 10 楼先停下来</p><p>2）电梯下降到 10 层时显示满员，此时若 8 层有人等待电梯，是否在 8 层停。</p><p>9.是否有手机信号</p><p>可靠性测试：</p><p>1.门关上的一刹那出现障碍物。</p><p>2.同时按关门和开门按钮。</p><p>3.点击当前楼层号码</p><p>4.多次点击同一楼层号码</p><p>5.同时按上键和下键</p><p>易用性：电梯的按钮的设计符合一般人的习惯吗</p><p>用户文档：使用手册是否对电梯的用法、限制、使用条件等有详细的描述</p><p>压力测试：1.看电梯的最大承重量，在负载过重时报警装置是否有提醒</p><p>稳定性测试：看垫底在最大负载下平行运行的最长时间</p><h3 id="7-对一只圆珠笔进行测试"><a href="#7-对一只圆珠笔进行测试" class="headerlink" title="7.对一只圆珠笔进行测试"></a><strong>7.对一只圆珠笔进行测试</strong></h3><p>1.界面测试，无论我们做那类软件（嵌入式别提），只要给用户有看到的东西，从测试的角度，就要考虑界面测试，这个呢，现在针对微软的产品，某公司开发了一套界面检查表，我这里有一份，想要可以找我</p><p>界面测试测什么，怎么测呢？针对这个问题我是这样回答的，印刷在产品上的图片，文字，这可能涉及不同的 东西，有圆珠笔厂家的信息，也有针对不同用户的信息（譬如小孩子喜欢颜色搭配多一点的，而成人用稳重的产品 等），可能涉及的还有人的审美观，你圆珠笔色彩搭配之类的</p><p>2.功能测试，这是我们测试的重点，也是客户针对某家公司产品给出满意度的参考点，圆珠笔功能主要是书写， 这里面涉及一个功用方面的焦点——书写的快慢程度，也就是流利不流利的问题（这涉及笔芯的材质问题） 针对这方面的测试，个人认为应从以下几点</p><p>a.材质问题，这涉及程序员和用户之间的关系，两者利益均有，程序员考虑成本问题，用户考虑污染问题，也 就是说制作圆珠笔的材料与环境的问题，厂商考虑价格因素，用户考虑环境因素以及安全性因素 这就把安全性测试给说出来了，大的方面因为笔油材质的问题，和使用者之间的健康问题有联系， 要测小的方面，笔油的速率，以及书写后是否马上可以涂抹，可否修改，这都涉及安全性的问题</p><p>b.性能问题，温度，湿度，气压对笔芯产生不同的影响</p><p>3.安全性问题</p><p>测试不同的高度，笔身做自由落体损坏程度</p><p>4.兼容性问题</p><p>不同的笔筒和笔芯之间的互相兼容</p><p>5.强度测试</p><p>弹簧在不同的压力之下，承受变形的程度</p><p>6.在金山面试时候，考官特意问我针对笔芯那个米珠如何测试</p><p>或者</p><p>1、界面测试</p><p>界面测试也就是对其外表先进行判断。</p><p>尺寸是否适合用户使用？用户需要的是什么样的尺寸，小孩和成年人使用的尺寸是有区别的；</p><p>色彩搭配是否合理？形状是否美观？</p><p>是否方便携带和存放？</p><p>笔芯颜色是否与客户要求一致？</p><p>笔身印的 logo 或者文字是否这么正确</p><p>2、功能测试</p><p>笔筒开合；</p><p>笔芯替换；</p><p>出墨快慢；</p><p>笔头出墨粗细；</p><p>是不是可操作性签字笔；</p><p>3、性能测试</p><p>笔芯的寿命；</p><p>笔墨的气味；</p><p>写过的字用纸水浸透后，笔墨是否会晕开</p><p>压力测试：笔尖在多大压力范围内可以正常写字，不能正常出墨，太重损坏笔尖或纸张；</p><p>笔壳能在多大压力范围内正常使用？成人用力太重掰断笔壳，掉到地上易摔，能在纸上写出清晰的字</p><p>4、性能测试</p><p>握笔的地方纹路是否会硌手或太滑；</p><p>书写的流畅度；</p><p>写出的墨水多久能干；</p><p>高温和低温环境对笔芯出墨和笔壳的影响；</p><p>长时间不盖笔套，或笔盖盖多长时间不用，会不会对笔下次写字有影响</p><p>5、安全测试</p><p>笔墨是否有易燃性；</p><p>笔墨是否对皮肤有害；</p><p>笔杆折断，材质是否容易刮伤手；</p><p>误食笔芯是否会引起中毒（有小孩或者有人喜欢咬笔头）</p><p>6、兼容性测试</p><p>笔壳和笔芯是否能够很好的适应主流签字笔尺寸；</p><p>这个笔芯的笔尖如果损坏，换上其他的笔芯的笔尖是否能用；</p><p>这个笔芯的笔墨如果用完，换上其他笔芯的笔墨是否可以使用；</p><p>笔的笔墨如果在其他笔的笔墨上写字是否可以成功覆盖</p><p>7、其他测试</p><p>（1）比较测试</p><p>与其他品牌签字笔比较，优劣在哪些地方？</p><p>（2）场景测试</p><p>笔从高处摔到地上，笔尖是否会摔坏；</p><p>倒着写，是否可以写出很多字来；</p><p>扔到水里，笔墨会不会一直晕开；</p><p>笔在粗糙的纸上是否能写出字…</p><h3 id="8-请以微信点赞，功能点进行测试"><a href="#8-请以微信点赞，功能点进行测试" class="headerlink" title="8.请以微信点赞，功能点进行测试"></a><strong>8.请以微信点赞，功能点进行测试</strong></h3><p>\1. 功能测试</p><p>考虑功能是否符合预期</p><p>\2. 接口</p><p>考虑各内部和外部的接口，比如朋友圈客户端和服务端的交互接口的功能。朋友圈点赞功能和消息提示功能的</p><p>接口（点了赞之后对应的朋友收到提示信息）</p><p>\3. 平台</p><p>手机版 pad 版 web 版</p><p>\4. 用户操作场景</p><p>测试用户常用场景，比如：用户打开微信看到十条消息提示，点击后进入朋友圈界面显示了“谁谁谁点了赞”</p><p>\5. 速度、延迟</p><p>\6. 性能测试</p><p>模拟一些多用户并发操作的场景</p><p>\7. 安全</p><p>功能 易用 效率 可靠性 可维护性</p><h2 id="六、-Linux-基础"><a href="#六、-Linux-基础" class="headerlink" title="六、 Linux 基础"></a>六、 <strong>Linux 基础</strong></h2><h3 id="1-查看占用-CPU-使用率最高的进程？"><a href="#1-查看占用-CPU-使用率最高的进程？" class="headerlink" title="1.查看占用 CPU 使用率最高的进程？"></a><strong>1.查看占用 CPU 使用率最高的进程？</strong></h3><p>ps -aux | sort -k3nr | head -K</p><h3 id="2-如何查看一个文件的末尾-50-行？"><a href="#2-如何查看一个文件的末尾-50-行？" class="headerlink" title="2.如何查看一个文件的末尾 50 行？"></a><strong>2.如何查看一个文件的末尾 50 行？</strong></h3><p>查看&#x2F;etc&#x2F;profile 的前 10 行内容，应该是：</p><p># head -n 10 &#x2F;etc&#x2F;profile</p><p>查看&#x2F;etc&#x2F;profile 的最后 50 行内容，应该是：</p><p># tail -n 50 &#x2F;etc&#x2F;profile</p><h3 id="3-如何过滤文件内容中包含”ERROR“的行？"><a href="#3-如何过滤文件内容中包含”ERROR“的行？" class="headerlink" title="3.如何过滤文件内容中包含”ERROR“的行？"></a><strong>3.如何过滤文件内容中包含”ERROR“的行？</strong></h3><p>grep “ERROR” file_name</p><p>cat file_name | grep “ERROR”</p><h3 id="4-查看某端口号？"><a href="#4-查看某端口号？" class="headerlink" title="4.查看某端口号？"></a><strong>4.查看某端口号？</strong></h3><p>netstat -anp | grep port_number</p><h3 id="5-查看某进程号？"><a href="#5-查看某进程号？" class="headerlink" title="5.查看某进程号？"></a><strong>5.查看某进程号？</strong></h3><p>ps -ef | grep ps_name</p><p>ps -ef | grep ps_number</p><h3 id="3-rep-和-find-的区别？grep-都有哪些用法？"><a href="#3-rep-和-find-的区别？grep-都有哪些用法？" class="headerlink" title="3.rep 和 find 的区别？grep 都有哪些用法？"></a><strong>3.rep 和 find 的区别？grep 都有哪些用法？</strong></h3><h3 id="4-查看-IP-地址？"><a href="#4-查看-IP-地址？" class="headerlink" title="4.查看 IP 地址？"></a><strong>4.查看 IP 地址？</strong></h3><p>ifconfig</p><h3 id="5-创建和删除一个多级目录？"><a href="#5-创建和删除一个多级目录？" class="headerlink" title="5.创建和删除一个多级目录？"></a><strong>5.创建和删除一个多级目录？</strong></h3><p>mkdir -p .&#x2F;a&#x2F;b</p><p>rm -rf .&#x2F;a</p><h3 id="6-在当前用户家目录中查找-haha-txt-文件？"><a href="#6-在当前用户家目录中查找-haha-txt-文件？" class="headerlink" title="6.在当前用户家目录中查找 haha.txt 文件？"></a><strong>6.在当前用户家目录中查找 haha.txt 文件？</strong></h3><p>find ~&#x2F; -name haha.txt</p><h3 id="7-如何查询出-tomcat-的进程并杀掉这个进程，写出-linux-命令？"><a href="#7-如何查询出-tomcat-的进程并杀掉这个进程，写出-linux-命令？" class="headerlink" title="7.如何查询出 tomcat 的进程并杀掉这个进程，写出 linux 命令？"></a><strong>7.如何查询出 tomcat 的进程并杀掉这个进程，写出 linux 命令？</strong></h3><p>ps -ef | grep tomcat</p><p>kill -9 tomcat_port</p><h3 id="8-动态查看日志文件？"><a href="#8-动态查看日志文件？" class="headerlink" title="8.动态查看日志文件？"></a><strong>8.动态查看日志文件？</strong></h3><p>tail -f log_file</p><h3 id="9-查看系统硬盘空间的命令？"><a href="#9-查看系统硬盘空间的命令？" class="headerlink" title="9.查看系统硬盘空间的命令？"></a><strong>9.查看系统硬盘空间的命令？</strong></h3><p>df -aTh</p><h3 id="10-查看当前机器-listen-的所有端口？"><a href="#10-查看当前机器-listen-的所有端口？" class="headerlink" title="10.查看当前机器 listen 的所有端口？"></a><strong>10.查看当前机器 listen 的所有端口？</strong></h3><p>netstat -tlnp</p><h3 id="11-把一个文件夹打包压缩成-tar-gz-的命令，以及解压拆包-tar-gz-的命令？"><a href="#11-把一个文件夹打包压缩成-tar-gz-的命令，以及解压拆包-tar-gz-的命令？" class="headerlink" title="11.把一个文件夹打包压缩成.tar.gz 的命令，以及解压拆包.tar.gz 的命令？"></a><strong>11.把一个文件夹打包压缩成.tar.gz 的命令，以及解压拆包.tar.gz 的命令？</strong></h3><p>tar zcvf xxx.tar.gz file tar zxvf xxx.tar.gz</p><h3 id="12-Xshell-工具如果想要实现从服务器上传或者下载文件的话-可以在服务器上安装什么包？"><a href="#12-Xshell-工具如果想要实现从服务器上传或者下载文件的话-可以在服务器上安装什么包？" class="headerlink" title="12.Xshell 工具如果想要实现从服务器上传或者下载文件的话,可以在服务器上安装什么包？"></a><strong>12.Xshell 工具如果想要实现从服务器上传或者下载文件的话,可以在服务器上安装什么包？</strong></h3><p>lrzsz</p><h3 id="13-以-x2F-etc-x2F-passwd-的前五行内容为例，提取用户名？"><a href="#13-以-x2F-etc-x2F-passwd-的前五行内容为例，提取用户名？" class="headerlink" title="13.以&#x2F;etc&#x2F;passwd 的前五行内容为例，提取用户名？"></a><strong>13.以&#x2F;etc&#x2F;passwd 的前五行内容为例，提取用户名？</strong></h3><p>cat &#x2F;etc&#x2F;passwd | head -n 5 | cut -d : -f 1</p><h3 id="14-在-linux-中-find-和-grep-的区别？"><a href="#14-在-linux-中-find-和-grep-的区别？" class="headerlink" title="14.在 linux 中 find 和 grep 的区别？"></a><strong>14.在 linux 中 find 和 grep 的区别？</strong></h3><p>Linux 系统中 grep 命令是一种强大的<a href="https://www.zhihu.com/search?q=%E6%96%87%E6%9C%AC%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">文本搜索工具</a>，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p><p>grep 全称是 Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</p><p>linux 下的 find：</p><p>功能：在目录结构中搜索文件，并执行指定的操作。此命令提供了相当多的查找条件，功能很强大。</p><p>语法：find 起始目录寻找条件操作说明：find 命令从指定的起始目录开始，递归地搜索其各个子目录，查找满 足寻找条件的文件并对之采取相关的操作。</p><p>简单点说说，grep 是查找匹配条件的行，find 是搜索匹配条件的文件。</p><h2 id="七、-Mysql-基础"><a href="#七、-Mysql-基础" class="headerlink" title="七、 Mysql 基础"></a>七、 <strong>Mysql 基础</strong></h2><p><strong>一、 基础知识</strong></p><h3 id="1-什么是数据库？"><a href="#1-什么是数据库？" class="headerlink" title="1. 什么是数据库？"></a><strong>1. 什么是数据库？</strong></h3><p>数据库(Database)是按照数据结构来组织、存储和管理数据的仓库</p><h3 id="2-什么是关系型数据库，主键，外键，索引分别是什么？"><a href="#2-什么是关系型数据库，主键，外键，索引分别是什么？" class="headerlink" title="2. 什么是关系型数据库，主键，外键，索引分别是什么？"></a><strong>2. 什么是关系型数据库，主键，外键，索引分别是什么？</strong></h3><p>关系型数据库是由多张能互相联接的二维行列表格组成的数据库</p><p>主关键字(primary key)是表中的一个或多个字段，它的值用于唯一地标识表中的某一条记录外键表示了两个关系之间的相关联系。以另一个关系的外键作主关键字的表被称为主表，具有此外键的表被称 为主表的从表。外键又称作外关键字</p><p>在关系数据库中，索引是一种单独的、物理的对数据库表中一列或多列的值进行排序的一种存储结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单</p><h3 id="3-表的连接查询方式有哪些，有什么区别？"><a href="#3-表的连接查询方式有哪些，有什么区别？" class="headerlink" title="3. 表的连接查询方式有哪些，有什么区别？"></a><strong>3. 表的<a href="https://www.zhihu.com/search?q=%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">连接查询</a>方式有哪些，有什么区别？</strong></h3><p>交叉连接即笛卡儿乘积，是指两个关系中所有元组的任意组合使用内连接时，如果两个表的相关字段满足连接条件，就从这两个表中提取数据并组合成新的记录 自连接是一种特殊的内连接，它是指相互连接的表在物理上为同一张表，但可以在逻辑上分为两张表 外连接是只限制一张表中的数据必须满足连接条件，而另一张表中的数据可以不满足连接条件的连接方式</p><h3 id="4-SQL-的-select-语句完整的执行顺序？"><a href="#4-SQL-的-select-语句完整的执行顺序？" class="headerlink" title="4. SQL 的 select 语句完整的执行顺序？"></a><strong>4. SQL 的 select 语句完整的执行顺序？</strong></h3><p>1、from 子句组装来自不同数据源的数据；</p><p>2、where 子句基于指定的条件对记录行进行筛选；</p><p>3、group by 子句将数据划分为多个分组；</p><p>4、使用聚集函数进行计算；</p><p>5、使用 having 子句筛选分组；</p><p>6、计算所有的表达式；</p><p>7、select 的字段；</p><p>8、使用 order by 对结果集进行排序。</p><h3 id="5-说一下-Mysql-数据库存储的原理？"><a href="#5-说一下-Mysql-数据库存储的原理？" class="headerlink" title="5. 说一下 Mysql 数据库存储的原理？"></a><strong>5. 说一下 Mysql 数据库存储的原理？</strong></h3><p>储存过程是一个可编程的函数，它在数据库中创建并保存。它可以有 SQL 语句和一些特殊的控制结构组成。当 希望在不同的应用程序或平台上执行相同的函数，或者封装特定功能时，存储过程是非常有用的。数据库中的存储 过程可以看做是对编程中面向对象方法的模拟。它允许控制数据的访问方式。存储过程通常有以下优点：</p><p>1、存储过程能实现较快的执行速度</p><p>2、存储过程允许标准组件是编程。</p><p>3、存储过程可以用流程控制语句编写，有很强的灵活性，可以完成复杂的判断和较复杂的运算。</p><p>4、存储过程可被作为一种安全机制来充分利用。</p><p>5、存储过程能够减少网络流量</p><h3 id="6-事务的特性？"><a href="#6-事务的特性？" class="headerlink" title="6. 事务的特性？"></a><strong>6. 事务的特性？</strong></h3><p>1、原子性(Atomicity)：事务中的全部操作在数据库中是不可分割的，要么全部完成，要么均不执行。</p><p>2、一致性(Consistency)：几个并行执行的事务，其执行结果必须与按某一顺序串行执行的结果相一致。</p><p>3、隔离性(Isolation)：事务的执行不受其他事务的干扰，事务执行的中间结果对其他事务必须是透明的。</p><p>4、持久性(Durability)：对于任意已提交事务，系统必须保证该事务对数据库的改变不被丢失，即使数据库出现故障</p><p><strong>7. 数据库索引？</strong></p><p>数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。索引的实现通常使用 B_TREE。B_TREE 索引加速了数据访问，因为存储引擎不会再去扫描整张表得到需要的数据；相反，它从根节点开始，根节点保存了子节点的指针，存储引擎会根据指针快速寻找数据。</p><h3 id="8-数据库怎么优化查询效率？"><a href="#8-数据库怎么优化查询效率？" class="headerlink" title="8. 数据库怎么优化查询效率？"></a><strong>8. 数据库怎么优化查询效率？</strong></h3><p>1、储存引擎选择：如果数据表需要事务处理，应该考虑使用 InnoDB，因为它完全符合 ACID 特性。如果不需要事务处理，使用默认存储引擎 MyISAM 是比较明智的</p><p>2、分表分库，主从。</p><p>3、对查询进行优化，要尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引</p><p>4、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描</p><p>5、应尽量避免在 where 子句中使用!&#x3D; 或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描</p><p>6、应尽量避免在 where 子句中使用 or 来连接条件，如果一个字段有索引，一个字段没有索引，将导致引擎放弃使用索引而进行全表扫描</p><p>7、Update 语句，如果只更改 1、2 个字段，不要 Update 全部字段，否则频繁调用会引起明显的性能消耗，同时带来大量日志</p><p>8、对于多张大数据量（这里几百条就算大了）的表 JOIN，要先分页再 JOIN，否则逻辑读会很高，性能很差。</p><h3 id="9-你用的-Mysql-是哪个引擎，各引擎之间有什么区别？"><a href="#9-你用的-Mysql-是哪个引擎，各引擎之间有什么区别？" class="headerlink" title="9. 你用的 Mysql 是哪个引擎，各引擎之间有什么区别？"></a><strong>9. 你用的 Mysql 是哪个引擎，各引擎之间有什么区别？</strong></h3><p>主要 MyISAM 与 InnoDB 两个引擎，其主要区别如下：InnoDB 支持事务，MyISAM 不支持，这一点是非常之重要。事务是一种高级的处理方式，如在一些列增删改中只要哪个出错还可以回滚还原，而 MyISAM 就不可以了；</p><p>MyISAM 适合查询以及插入为主的应用，InnoDB 适合频繁修改以及涉及到安全性较高的应用；</p><p>InnoDB 支持外键，MyISAM 不支持；</p><p>MyISAM 是默认引擎，InnoDB 需要指定；</p><p>InnoDB 不支持 FULLTEXT 类型的索引；</p><p>InnoDB 中不保存表的行数，如 select count() from table 时，InnoDB；需要扫描一遍整个表来计算有多少行，但</p><p>是 MyISAM 只要简单的读出保存好的行数即可。注意的是，当 count()语句包含 where 条件时 MyISAM 也需要扫描整个表；</p><p>对于自增长的字段，InnoDB 中必须包含只有该字段的索引，但是在 MyISAM 表中可以和其他字</p><p>段一起建立联合索引；清空整个表时，InnoDB 是一行一行的删除，效率非常慢。MyISAM 则会重建表；</p><p>InnoDB 支持行锁（某些情况下还是锁整表，如 update table set a&#x3D;1 where user like ‘%lee%’</p><h3 id="10-如何对查询命令进行优化？"><a href="#10-如何对查询命令进行优化？" class="headerlink" title="10.如何对查询命令进行优化？"></a><strong>10.如何对查询命令进行优化？</strong></h3><p>a. 应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索。</p><p>b. 应尽量避免在 where 子句中对字段进行 null 值判断，避免使用!&#x3D;或&lt;&gt;操作符，避免使用 or</p><p>连接条件，或在 where 子句中使用参数、对字段进行表达式或函数操作，否则会导致权标扫描</p><p>c. 不要在 where 子句中的“&#x3D;”左边进行函数、算术运算或其他表达式运算，否则系统将可能无</p><p>法正确使用索引。</p><p>d. 使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为</p><p>条件时才能保证系统使用该索引，否则该索引将不会被使用。</p><p>e. 很多时候可考虑用 exists 代替 in。</p><p>f. 尽量使用数字型字段。</p><p>g. 尽可能的使用 varchar&#x2F;nvarchar 代替 char&#x2F;nchar。</p><p>h. 任何地方都不要使用 select from t ，用具体的字段列表代替“”，不要返回用不到的任何字段。</p><p>i. 尽量使用表变量来代替临时表。</p><p>j. 避免频繁创建和删除临时表，以减少系统表资源的消耗。</p><p>k. 尽量避免使用游标，因为游标的效率较差</p><p>l. 在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SETNOCOUNT OFF。</p><p>m. 尽量避免大事务操作，提高系统并发能力。</p><p>n. 尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</p><h3 id="11-数据库的优化？"><a href="#11-数据库的优化？" class="headerlink" title="11.数据库的优化？"></a><strong>11.数据库的优化？</strong></h3><p>1.优化索引、SQL 语句、分析慢查询；</p><p>2.设计表的时候严格根据数据库的设计范式来设计数据库；</p><p>3.使用缓存，把经常访问到的数据而且不需要经常变化的数据放在缓存中，能节约磁盘 IO</p><p>4.优化硬件；采用 SSD，使用磁盘队列技术(RAID0,RAID1,RDID5)等</p><p>5.采用 MySQL 内部自带的表分区技术，把数据分层不同的文件，能够提高磁盘的读取效率；</p><p>6.垂直分表；把一些不经常读的数据放在一张表里，节约磁盘 I&#x2F;O；</p><p>7.主从分离读写；采用主从复制把数据库的读操作和写入操作分离开来；</p><p>8.分库分表分机器（数据量特别大），主要的原理就是数据路由；</p><p>9.选择合适的表引擎，参数上的优化</p><p>10.进行架构级别的缓存，静态化和分布式；</p><p>11.不采用全文索引；</p><p>12.采用更快的存储方式，例如 NoSQL 存储经常访问的数据。</p><h3 id="12-Sql-注入是如何产生的，如何防止？"><a href="#12-Sql-注入是如何产生的，如何防止？" class="headerlink" title="12.Sql 注入是如何产生的，如何防止？"></a><strong>12.Sql 注入是如何产生的，如何防止？</strong></h3><p>程序开发过程中不注意规范书写 sql 语句和对特殊字符进行过滤，导致客户端可以通过全局变量 POST 和 GET</p><p>提交一些 sql 语句正常执行。产生 Sql 注入。下面是防止办法：</p><p>a. 过滤掉一些常见的数据库操作关键字，或者通过系统函数来进行过滤。</p><p>b. 在 PHP 配置文件中将 Register_globals&#x3D;off;设置为关闭状态</p><p>c. SQL 语句书写的时候尽量不要省略小引号(tab 键上面那个)和单引号</p><p>d. 提高数据库命名技巧，对于一些重要的字段根据程序的特点命名，取不易被猜到的</p><p>e. 对于常用的方法加以封装，避免直接暴漏 SQL 语句</p><p>f. 开启 PHP 安全模式：Safe_mode&#x3D;on;</p><p>g. 打开 magic_quotes_gpc 来防止 SQL 注入</p><p>h. 控制错误信息：关闭错误提示信息，将错误信息写到<a href="https://www.zhihu.com/search?q=%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">系统日志</a>。</p><p>i. 使用 mysqli 或 pdo 预处理。</p><h3 id="13-NoSQL-和关系数据库的区别？"><a href="#13-NoSQL-和关系数据库的区别？" class="headerlink" title="13.NoSQL 和关系数据库的区别？"></a><strong>13.NoSQL 和关系数据库的区别？</strong></h3><p>a. SQL 数据存在特定结构的表中；而 NoSQL 则更加灵活和可扩展，存储方式可以省是 JSON 文档、哈希表或其他方式。</p><p>b. 在 SQL 中，必须定义好表和字段结构后才能添加数据，例如定义表的主键(primary key)，索引(index),触发器</p><p>(trigger),存储过程(stored procedure)等。表结构可以在被定义之后更新，但是如果有比较大的结构变更的话就会变得比较复杂。在 NoSQL 中，数据可以在任何时候任何地方添加，不需要先定义表。</p><p>c. SQL 中如果需要增加外部关联数据的话，规范化做法是在原表中增加一个外键，关联外部数据表。而在 NoSQL 中除了这种规范化的外部数据表做法以外，我们还能用如下的非规范化方式把外部数据直接放到原数据集中，以提高查询效率。缺点也比较明显，更新审核人数据的时候将会比较麻烦。</p><p>d. SQL 中可以使用 JOIN 表链接方式将多个关系数据表中的数据用一条简单的查询语句查询出来。</p><p>NoSQL 暂未提供类似 JOIN 的查询方式对多个数据集中的数据做查询。所以大部分 NoSQL 使用非规范化的数据存储方式存储数据。</p><p>e. SQL 中不允许删除已经被使用的外部数据，而 NoSQL 中则没有这种强耦合的概念，可以随时删除任何数据。</p><p>f. SQL 中如果多张表数据需要同批次被更新，即如果其中一张表更新失败的话其他表也不能更新成</p><p>功。这种场景可以通过事务来控制，可以在所有命令完成后再统一提交事务。而 NoSQL 中没有事务这个概念，每一个数据集的操作都是原子级的。</p><p>g. 在相同水平的系统设计的前提下，因为 NoSQL 中省略了 JOIN 查询的消耗，故理论上性能上是优于 SQL 的。</p><h3 id="14-MySQL-与-MongoDB-本质之间最基本的差别是什么"><a href="#14-MySQL-与-MongoDB-本质之间最基本的差别是什么" class="headerlink" title="14.MySQL 与 MongoDB 本质之间最基本的差别是什么"></a><strong>14.MySQL 与 MongoDB 本质之间最基本的差别是什么</strong></h3><p>差别在多方面，例如：数据的表示、查询、关系、事务、模式的设计和定义、速度和性能。MongoDB 是由 C++ 语言编写的，是一个基于分布式文件存储的开源数据库系统。在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key&#x3D;&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><p>MongoDB 是一个面向文档的数据库，目前由 10gen 开发并维护，它的功能丰富齐全，所以完全可以替代 MySQL。</p><p>与 MySQL 等关系型数据库相比，MongoDB 的优点如下：</p><p>①弱一致性，更能保证用户的访问速度。</p><p>②文档结构的存储方式，能够更便捷的获取数据。</p><p>③内置 GridFS，支持大容量的存储。</p><p>④内置 Sharding。</p><p>⑤第三方支持丰富。(这是与其他的 NoSQL 相比，MongoDB 也具有的优势)</p><p>⑥性能优越：</p><p>MongoDB 本身它还算比较年轻的一个产品，所以它的问题，就是成熟度肯定没有传统 MySQL 那么成熟稳定。</p><p>所以在使用的时候： 尽量使用稳定版，不要在线上使用开发版，这是一个大原则；</p><p>另外一点，备份很重要，MongoDB 如果出现一些异常情况，备份一定是要能跟上。除了通过传统的复制的方式 来做备份，离线备份也还是要有，不管你是用什么方式，都要有一个完整的离线备份。往往最后出现了特殊情况，它能帮助到你；另外，MongoDB 性能的一个关键点就是索引，索引是不是能有比较好的使用效率，索引是不是能够放在内存中，这样能够提升随机读写的性能。如果你的索引不能完全放在内存中，一旦出现随机读写比较高的时候， 它就会频繁地进行磁盘交换，这个时候，MongoDB 的性能就会急剧下降，会出现波动。</p><p>另外，MongoDB 还有一个最大的缺点，就是它占用的空间很大，因为它属于典型空间换时间原则的类型。那么 它的磁盘空间比普通数据库会浪费一些，而且到目前为止它还没有实现在线压缩功能，在 MongoDB 中频繁的进行数据增删改时，如果记录变了，例如数据大小发生了变化，这时候容易产生一些数据碎片，出现碎片引发的结果， 一个是索引会出现性能问题。另外一个就是在一定的时间后，所占空间会莫名其妙地增大，所以要定期把数据库做修复，定期重新做索引， 这样会提升 MongoDB 的稳定性和效率。在最新的版本里，它已经在实现在线压缩，估计应该在 2.0 版左右，应该能够实现在线压缩，可以在后台执行现在 repair DataBase 的一些操作。 如果那样，就解决了目前困扰我们的大问题。</p><h3 id="15-Mysql-数据库中怎么实现分页？"><a href="#15-Mysql-数据库中怎么实现分页？" class="headerlink" title="15.Mysql 数据库中怎么实现分页？"></a><strong>15.Mysql 数据库中怎么实现分页？</strong></h3><p>select * from table limit (start-1)*limit,limit; 其中 start 是页码，limit 是每页显示的条数。</p><h3 id="16-提取数据库中倒数-10-条数据？"><a href="#16-提取数据库中倒数-10-条数据？" class="headerlink" title="16.提取数据库中倒数 10 条数据？"></a><strong>16.提取数据库中倒数 10 条数据？</strong></h3><p>Select * from 表名 order by 主键 desc limit 10</p><h3 id="17-优化数据库？提高数据库的性能？"><a href="#17-优化数据库？提高数据库的性能？" class="headerlink" title="17.优化数据库？提高数据库的性能？"></a><strong>17.优化数据库？提高数据库的性能？</strong></h3><p>1.对语句的优化</p><p>①用程序中，保证在实现功能的基础上，尽量减少对数据库的访问次数；通过搜索参数，尽量减少对表的访问行数,最小化结果集，从而减轻网络负担；</p><p>②能够分开的操作尽量分开处理，提高每次的响应速度；在数据窗口使用 SQL 时，尽量把使用的索引放在选择的首列；算法的结构尽量简单；</p><p>③在查询时，不要过多地使用通配符如 SELECT * FROM T1 语句，要用到几列就选择几列如：SELECT COL1,COL2 FROM T1；</p><p>④在可能的情况下尽量限制尽量结果集行数如：SELECT TOP 300 COL1,COL2,COL3 FROMT1,因为某些情况下用户是不需要那么多的数据的。</p><p>⑤不要在应用中使用数据库游标，游标是非常有用的工具，但比使用常规的、面向集的 SQL 语句需要更大的开销；按照特定顺序提取数据的查找。</p><p>\2. 避免使用不兼容的数据类型</p><p>例如 float 和 int、char 和 varchar、binary 和 varbinary 是不兼容的。</p><p>数据类型的不兼容可能使优化器无法执行一些本来可以进行的优化操作。</p><p>例如:</p><p>SELECT name FROM employee WHERE salary ＞ 60000</p><p>在这条语句中,如 salary 字段是 money 型的,则优化器很难对其进行优化,因为 60000 是个整型数。我们应当在编程时将整型转化成为钱币型,而不要等到运行时转化。若在查询时强制转换，查询速度会明显减慢。</p><p>3.避免在 WHERE 子句中对字段进行函数或表达式操作<strong>。</strong></p><p>若进行函数或表达式操作，将导致引擎放弃使用索引而进行全表扫描。</p><p>4.避免使用!&#x3D;或＜＞、IS NULL 或 IS NOT NULL、IN ，NOT IN 等这样的操作符</p><p>5.尽量使用数字型字段</p><p>6.合理使用 EXISTS,NOT EXISTS 子句。</p><p>7.尽量避免在索引过的字符数据中，使用非打头字母搜索。</p><p>8.分利用连接条件</p><p>9.消除对大型表行数据的顺序存取</p><p>\10. 避免困难的正规表达式</p><p>\11. 使用视图加速查询</p><p>\12. 能够用 BETWEEN 的就不要用 IN</p><p>\13. DISTINCT 的就不用 GROUP BY</p><p>\14. 部分利用索引</p><p>\15. 能用 UNION ALL 就不要用 UNION</p><p>\16. 不要写一些不做任何事的查询</p><p>\17. 尽量不要用 SELECT INTO 语句</p><p>\18. 必要时强制<a href="https://www.zhihu.com/search?q=%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">查询优化器</a>使用某个索引</p><p>\19. 虽然 UPDATE、DELETE 语句的写法基本固定，但是还是对 UPDATE 语句给点建议：</p><p>a) 尽量不要修改主键字段。</p><p>b) 当修改 VARCHAR 型字段时，尽量使用相同长度内容的值代替。</p><p>c) 尽量最小化对于含有 UPDATE 触发器的表的 UPDATE 操作。</p><p>d) 避免 UPDATE 将要复制到其他数据库的列。</p><p>e) 避免 UPDATE 建有很多索引的列。</p><p>f) 避免 UPDATE 在 WHERE 子句条件中的列。</p><h3 id="18-存储过程和函数的区别"><a href="#18-存储过程和函数的区别" class="headerlink" title="18.存储过程和函数的区别?"></a><strong>18.存储过程和函数的区别?</strong></h3><p>相同点：存储过程和函数都是为了可重复的执行操作数据库的 sql 语句的集合。</p><p>1）存储过程和函数都是一次编译，就会被缓存起来，下次使用就直接命中已经编译好的 sql 语句，不需要重复使用。减少网络交互，减少网络访问流量。</p><p>不同点：标识符不同，函数的标识符是 function，存储过程是 proceduce。</p><p>1）函数中有返回值，且必须有返回值，而过程没有返回值，但是可以通过设置参数类型（in,out)来实现多个参数或者返回值。</p><p>2）存储函数使用 select 调用，存储过程需要使用 call 调用。</p><p>3）select 语句可以在存储过程中调用，但是除了 select..into 之外的 select 语句都不能在函数中使用。</p><p>4）通过 in out 参数，过程相关函数更加灵活，可以返回多个结果。</p><h3 id="19-Mysql-开启-General-log-日志"><a href="#19-Mysql-开启-General-log-日志" class="headerlink" title="19.Mysql 开启 General-log 日志?"></a><strong>19.Mysql 开启 General-log 日志?</strong></h3><p>Show variables like ‘general%’;</p><p>Set global general_log&#x3D;1;</p><p>Set global general_log&#x3D;0;</p><h3 id="20-Student-Sourse-SC-Teacher-表关系如下："><a href="#20-Student-Sourse-SC-Teacher-表关系如下：" class="headerlink" title="20.Student-Sourse-SC-Teacher 表关系如下："></a><strong>20.Student-Sourse-SC-Teacher 表关系如下：</strong></h3><ul><li>Student（sid，Sname，Sage，Ssex）学生表</li><li>Course（cid，Cname，tid）课程表</li><li>SC（sid，cid，score）成绩表</li><li>Teacher（tid，Tname）教师表</li></ul><p>写出 sql 语句：</p><ul><li> 查询课程“001“课程比”002“课程成绩高的所有学生的学号</li><li> 修改学号为 20131201 的语文成绩为 100‘</li><li> 插入一条名为“李四”的教师记录</li><li> 删除学习“叶平”老师课程的 sc 表记录</li></ul><h2 id="八、-Web-测试"><a href="#八、-Web-测试" class="headerlink" title="八、 Web 测试"></a>八、 <strong>Web 测试</strong></h2><h3 id="1-描述用浏览器访问-http-www-baidu-com-的过程？"><a href="#1-描述用浏览器访问-http-www-baidu-com-的过程？" class="headerlink" title="1. 描述用浏览器访问 http://www.baidu.com 的过程？"></a><strong>1. 描述用浏览器访问 <a href="https://link.zhihu.com/?target=http://www.baidu.com">http://www.baidu.com</a> 的过程？</strong></h3><p>先要解析出 <a href="https://link.zhihu.com/?target=http://baidu.com">http://baidu.com</a> 对应的 ip 地址：</p><p> 要先使用 arp 获取默认网关的 mac 地址</p><p> 组织数据发送给默认网关(ip 还是 dns 服务器的 ip，但是 mac 地址是默认网关的 mac 地址)</p><p> 默认网关拥有转发数据的能力，把数据转发给路由器</p><p> 路由器根据自己的路由协议，来选择一个合适的较快的路径转发数据给目的网关</p><p> 目的网关(dns 服务器所在的网关)，把数据转发给 dns 服务</p><p> dns 服务器查询解析出 <a href="https://link.zhihu.com/?target=http://baidu.com">http://baidu.com</a> 对应的 ip 地址，并原路返回请求这个域名的 client 得到了 <a href="https://link.zhihu.com/?target=http://baidu.com">http://baidu.com</a> 对应的 ip 地址之后，会发送 tcp 的 3 次握手，进行连接</p><p> 使用 http 协议发送请求数据给 web 服务器</p><p> web 服务器收到数据请求之后，通过查询自己的服务器得到相应的结果，原路返回给浏览器</p><p> 浏览器接收到数据之后通过浏览器自己的渲染功能来显示这个网页</p><p> 浏览器关闭 tcp 连接，即 4 次挥手结束，完成整个访问过程</p><h3 id="2-了解的常用浏览器有哪些？"><a href="#2-了解的常用浏览器有哪些？" class="headerlink" title="2. 了解的常用浏览器有哪些？"></a><strong>2. 了解的常用浏览器有哪些？</strong></h3><p>IE，Chrome，Safari，Firefox，Opera</p><h3 id="3-什么是-sql-注入，什么是跨站脚本，什么是跨站请求伪造？"><a href="#3-什么是-sql-注入，什么是跨站脚本，什么是跨站请求伪造？" class="headerlink" title="3. 什么是 sql 注入，什么是跨站脚本，什么是跨站请求伪造？"></a><strong>3. 什么是 sql 注入，什么是跨站脚本，什么是跨站请求伪造？</strong></h3><p>SQL 注入攻击是注入攻击最常见的形式（此外还有 OS 注入攻击（Struts 2 的高危漏洞就是通过 OGNL 实施 OS 注入攻击导致的）），当服务器使用请求参数构造 SQL 语句时，恶意的 SQL 被嵌入到 SQL 中交给数据库执行。SQL 注入攻击需要攻击者对数据库结构有所了解才能进行，攻击者想要获得表结构有多种方式：</p><p>（1）如果使用开源系统搭建网站，数据库结构也是公开的（目前有很多现成的系统可以直接搭建论坛，电商网站，虽然方便快捷但是风险是必须要认真评估的）；</p><p>（2）错误回显（如果将服务器的错误信息直接显示在页面上，攻击者可以通过非法参数引发页面错误从而通过错误信息了解数据库结构，Web 应用应当设置友好的错误页，一方面符合最小惊讶原则，一方面屏蔽掉可能给系统带来危险的错误回显信息）；</p><p>（3）盲注。防范 SQL 注入攻击也可以采用消毒的方式，通过正则表达式对请求参数进行验证，此外，参数绑定也是很好的手段，这样恶意的 SQL 会被当做 SQL 的参数而不是命令被执行，JDBC 中的 PreparedStatement 就是支持参数绑定的语句对象，从性能和安全性上都明显优于 Statement。</p><p>XSS（Cross Site Script，<a href="https://www.zhihu.com/search?q=%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">跨站脚本攻击</a>）是向网页中注入恶意脚本在用户浏览网页时在用户浏览器中执行恶意脚本的攻击方式。</p><p>跨站脚本攻击分有两种形式： 反射型攻击（诱使用户点击一个嵌入恶意脚本的链接以达到攻击的目标，目前有很多攻击者利用论坛、微博发 布含有恶意脚本的 URL 就属于这种方式）</p><p>持久型攻击（将恶意脚本提交到被攻击网站的数据库中，用户浏览网页时，恶意脚本从数据库中被加载到页面执行，QQ 邮箱的早期版本就曾经被利用作为持久型跨站脚本攻击的平台）。</p><p>CSRF 攻击（Cross Site Request Forgery，跨站请求伪造）是攻击者通过跨站请求，以合法的用户身份进行非法操作（如转账或发帖等）。CSRF 的原理是利用浏览器的 Cookie 或服务器的 Session，盗取用户身份，其原理如下图所示。</p><p>防范 CSRF 的主要手段是识别请求者的身份，主要有以下几种方式：</p><p>（1）在表单中添加令牌（token）；</p><p>（2）验证码；</p><p>（3）检查请求头中的 Referer（前面提到防图片盗链接也是用的这种方式）。</p><p>令牌和验证都具有一次消费性的特征，因此在原理上一致的，但是验证码是一种糟糕的用户体验，不是必要的情况下不要轻易使用验证码，目前很多网站的做法是如果在短时间内多次提交一个表单未获得成功后才要求提供验 证码，这样会获得较好的用户体验。</p><h3 id="9-nginx-tomcat-apache-都是什么？"><a href="#9-nginx-tomcat-apache-都是什么？" class="headerlink" title="9. nginx,tomcat,apache 都是什么？"></a><strong>9. nginx,tomcat,apache 都是什么？</strong></h3><p>Nginx (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP&#x2F;POP3&#x2F;SMTP 服务器。</p><p>Apache HTTP Server 是一个模块化的服务器，源于 NCSAhttpd 服务器</p><p>Tomcat 服务器是一个免费的开放源代码的 Web 应用服务器，属于轻量级应用服务器，是开发和调试 JSP 程序 的首选。</p><h3 id="10-apache-和-nginx-的区别？"><a href="#10-apache-和-nginx-的区别？" class="headerlink" title="10.apache 和 nginx 的区别？"></a><strong>10.apache 和 nginx 的区别？</strong></h3><p><strong>Nginx 相对 Apache 的优点：</strong></p><p>轻量级，同样起 web 服务，比 apache 占用更少的内存及资源；</p><p>抗并发，nginx 处理请求是异步非阻塞的，支持更多的并发连接，而 apache 则是阻塞型的，在高并发下 nginx 能</p><p>保持低资源低消耗高性能；</p><p>配置简洁；</p><p>高度模块化的设计，编写模块相对简单；</p><p>社区活跃。</p><p><strong>Apache 相对 Nginx 的优点：</strong></p><p>rewrite ，比 nginx 的 rewrite 强大；</p><p>模块超多，基本想到的都可以找到；</p><p>少 bug ，nginx 的 bug 相对较多；</p><p>超稳定</p><h2 id="九、-API-测试"><a href="#九、-API-测试" class="headerlink" title="九、 API 测试"></a>九、 <strong>API 测试</strong></h2><h3 id="1-接口类型有哪些？"><a href="#1-接口类型有哪些？" class="headerlink" title="1. 接口类型有哪些？"></a><strong>1. 接口类型有哪些？</strong></h3><p>接口是指外部系统与系统之间以及内部各子系统之间的交互点。</p><p>包括外部接口、内部接口，内部接口又包括：上层服务与下层服务接口、同级接口。</p><h3 id="2-如果模块请求-http-改为了-https，测试方案应该如何制定，修改？"><a href="#2-如果模块请求-http-改为了-https，测试方案应该如何制定，修改？" class="headerlink" title="2. 如果模块请求 http 改为了 https，测试方案应该如何制定，修改？"></a><strong>2. 如果模块请求 http 改为了 https，测试方案应该如何制定，修改？</strong></h3><p>分别用 http 还有 https 登录试试。如果用 https 可以正常登录，地址栏显示一把锁头，那么这个网站是有部署 SSL的。如果 http 和 https 都能够正常登录，进一步说明该网站没有设置强制 https 登录，或者说没有设置 http 链接自动跳转 https 链接；相反如果用 http 登录，结果跳转到 https 页面，说明网站部署了 SSL，而且设置了 http 自动跳转 https。</p><h2 id="十、-App-测试"><a href="#十、-App-测试" class="headerlink" title="十、 App 测试"></a>十、 <strong>App 测试</strong></h2><h3 id="1-APP-测试的内容主要包括哪些，如何开展？"><a href="#1-APP-测试的内容主要包括哪些，如何开展？" class="headerlink" title="1. APP 测试的内容主要包括哪些，如何开展？"></a><strong>1. APP 测试的内容主要包括哪些，如何开展？</strong></h3><p><strong>功能测试：</strong></p><p>1.业务逻辑正确性测试：依据：产品文档-&gt;测试用例编写</p><p>兼容性测试：</p><p>1.系统版本：Android:官方版本,定制版本;IOS：官方提供版本</p><p>2.分辨率：720 * 1280 1080* 1920</p><p>3.网络情况:2g 3g 4g 5g Wi-Fi</p><p><strong>异常测试</strong></p><p>1.热启动应用:应用在后台长时间待机;应用在后台待机过程中，手机重启</p><p>2.网络切换和中断恢复:网络切换;中断恢复：</p><p>3.电话信息中断恢复</p><p><strong>升级，安装，卸载测试</strong></p><p>1.升级测试：临近版本升级(1.0-&gt;1.1);跨版本(1.0-&gt;….-&gt;2.2)</p><p>2.安装测试：首次安装;覆盖安装(同版本，不同版本覆盖);卸载后安装</p><p>3.卸载测试：首次卸载;卸载安装后在卸载</p><p><strong>健壮性测试</strong></p><p>1.手机资源消耗：cpu，内存</p><p>2.流量消耗：图片，数据，视频</p><p>3.电量测试</p><p>4.崩溃恢复</p><h3 id="2-Android-的兼容性测试都考虑哪些内容？"><a href="#2-Android-的兼容性测试都考虑哪些内容？" class="headerlink" title="2. Android 的兼容性测试都考虑哪些内容？"></a><strong>2. Android 的兼容性测试都考虑哪些内容？</strong></h3><p>品牌机型兼容：根据市场占有率、发布时间等指标对主流、最新机型进行重点兼容</p><p>ROM 兼容：需兼容原生的 ROM（2.1、2.2、2.3、4.0、4.1、4.2）；第三方 ROM（小米、百度易、点心、魅族、 阿里云……）</p><p>屏幕兼容：需兼容 HVGA、VGA、WVGA、FWVGA、720p、1080p 屏幕分辨率，并考虑不同 PPI 的情况</p><p>软件兼容：安全类软件（百度手机管家、360 优化大师、360 安全卫士、QQ 手机管家、安卓优化大师、网秦、 LBE），输入法软件（系统自带、Sogou、百度）</p><p>版本兼容：服务器端需要兼容产品早期版本所需的 API 接口</p><p>网络兼容：WiFi、3 大运营商的 2G,3G,4G 网络，需区分 WAP 和 NET 接入</p><h3 id="3-针对-App-的安装功能，写出测试点？"><a href="#3-针对-App-的安装功能，写出测试点？" class="headerlink" title="3. 针对 App 的安装功能，写出测试点？"></a><strong>3. 针对 App 的安装功能，写出测试点？</strong></h3><p> 安装</p><p>1.正常安装测试，检查是否安装成功。</p><p>2.APP 版本覆盖测试。例如：先安装一个 1.0 版本的 APP,再安装一个高版本(1.1 版本)的 APP，检查是否被覆盖。</p><p>3.回退版本测试。例如：先装一个 2.0 版本的 APP,再安装一个 1.0 版本的 APP,正常情况下版本是可以回退的。</p><p>4.安装时内存不足，弹出提示。</p><p>5.根据安装手册操作，是否正确安装。</p><p>6.安装过程中的意外情况（强行断电、断网、来电话了、查看信息）等等，检查会发生的情况。</p><p>7.通过‘<a href="https://www.zhihu.com/search?q=%E5%90%8C%E6%AD%A5%E8%BD%AF%E4%BB%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">同步软件</a>’，检查安装时是否同步安装了一些文件。</p><p>8.在不同型号、系统、屏幕大小、分辨率上的手机进行安装。</p><p>9.安装时是否识别有 SD 卡，并默认安装到 sd 卡中。</p><p>10.安装完成后，能否正常启动应用程序。</p><p>11.安装完成后，重启手机能否正常启动应用程序。</p><p>12.安装完成后，是否对其他应用程序造成影响。</p><p>13.安装完成后，能否添加快捷方式。</p><p>14.安装完成后，杀毒软件是否会对其当做病毒处理。</p><p>15.多进程进行安装，是否安装成功。</p><p>16.在安装过程中，所有的提示信息必须是英文或者中文，提示信息中不能出现代码、符号、乱码等。</p><p>17.安装之后，是否自动启动程序。</p><p>18.是否支持第三方安装。</p><p>19.在安装中点击取消。</p><p> 卸载</p><p>1.用自己的卸载程序进行卸载，检查是否卸载干净。</p><p>2.用第三方工具，检查是否卸载干净。</p><p>3.在卸载过程中，点击取消按钮，看是否正常退出卸载程序，检查软件是否还能继续正常使用。</p><p>4.卸载过程中，出现意外（比如手机关机，没电，查看信息，接打电话），程序是否还能运行。</p><p>5.在卸载过程中，突然重启设备，再次访问程序，是否还能运行。</p><p>6.在没用使用程序时，删除目录文件，看程序是否能运行。</p><p>7.在使用过程中，直接删除目录文件，程序是否还能运行。</p><p>8.不同系统、硬件环境、网络环境下进行卸载。</p><p>9.卸载成功后，是否对其他程序有影响。</p><p>10.卸载后再次安装，是否正常使用。</p><p>11.在卸载过程中，所有的提示信息必须是英文或者中文，提示信息中不能出现代码、符号、乱码等。</p><p> 更新</p><p>1.当客户端有新版本时，提示更新。</p><p>2.非强制更新，可以取消更新，旧版本正常使用，下次使用软件时，仍然会出现更新提示。</p><p>3.强制更新，强制更新而用户没有更新时，退出客户端，下次启动，依然提示更新。</p><p>4.不卸载更新，检查是否可以更新。</p><p>5.不卸载更新，检查资源同名文件如图片等是否更新成最新版本。</p><p>6.非 wifi 网络下，提示是否更新，取消就加入待下载，wifi 下自动更新。</p><h3 id="4-常用的-ADB-命令？"><a href="#4-常用的-ADB-命令？" class="headerlink" title="4. 常用的 ADB 命令？"></a><strong>4. 常用的 ADB 命令？</strong></h3><p>adb –help &#x2F; adb :看见帮助信息</p><p>adb start-server:启动 adb 服务</p><p>adb kill-server:关闭 adb 服务</p><p>adb devices:查看手机设备号</p><p>adb shell getprop ro.build.version.release:获取系统版本</p><p>adb push 电脑 手机</p><p>adb pull 手机 电脑</p><p>adb logcat | grep(unix) 包名</p><p>adb logcat | findstr(win) 包名</p><p>adb shell :进入 shell 命令行，可以操作 Linux 命令</p><p>adb shell dumpsys window windows | grep mFocusedApp:获取包名 启动名(win：adb shell dumpsys window</p><p>windows | findstr mFocusedApp)</p><p>adb install 路径&#x2F;apk 文件:安装 apk 到手机上</p><p>adb uninstall 包名:卸载 app 从手机上</p><p>adb shell am start -W 包名&#x2F;启动名:app 启动时间</p><h3 id="5-在查看-logcat-命令日志时候怎么内容保存到本地文件？"><a href="#5-在查看-logcat-命令日志时候怎么内容保存到本地文件？" class="headerlink" title="5. 在查看 logcat 命令日志时候怎么内容保存到本地文件？"></a><strong>5. 在查看 logcat 命令日志时候怎么内容保存到本地文件？</strong></h3><p>输出重定向：logcat &gt;&gt; log_file_name</p><h3 id="6-App-崩溃（闪退），可能是什么原因导致的？"><a href="#6-App-崩溃（闪退），可能是什么原因导致的？" class="headerlink" title="6. App 崩溃（闪退），可能是什么原因导致的？"></a><strong>6. App 崩溃（闪退），可能是什么原因导致的？</strong></h3><ul><li>缓存垃圾过多：由于安卓系统的特性,如果长时间不清理垃圾文件.会导致越来越卡.也会出现闪退情况.</li><li>运行的程序过多,导致内存不足</li><li>应用版本兼容问题：如果应用版本太低，会导致不兼容，造成闪退。此外，有些新版本在调试中，也会造成应</li><li>用闪退。解决方法：如果是版本太旧，更新为新版本即可；如果是新版本闪退，可能是应用在改版调试，可卸载后</li><li>安装旧版。</li><li>检查 APP 中访问网络的地方，组件中的 ImageView 是否可以正常的下载并显示到 app 页面上。</li><li>检查 APP 的 sdk 和手机的系统是否兼容。</li><li>在一些特定情况下的闪退,比如播放视频,在 Android5.0 升级到 Android6.0 的时候,有些系统 API 老版本有,新版本没有,到时回去对象的时候失败,报空,系统就会出现闪退问题.</li></ul><h3 id="7-弱网测试怎么测"><a href="#7-弱网测试怎么测" class="headerlink" title="7.弱网测试怎么测"></a><strong>7.弱网测试怎么测</strong></h3><p>弱网环境测试主要依赖于弱网环境的模拟。环境搭建方式一般有两种：软件方式和硬件方式。软件方式的成本低，主要就是通过模拟网络参数来配置弱网环境，通常来讲可以达到测试目的.一般可通过热点共享设置。在各类<a href="https://www.zhihu.com/search?q=%E7%BD%91%E7%BB%9C%E8%BD%AF%E4%BB%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2528417467%7D">网络软件</a>中，主要就是对带宽、丢包、延时等进行模拟弱网环境。如果要求更接近弱网环境，比如现在很多的专项测试，会更倾向于通过硬件方式来协助测试，但这种方式相对会麻烦很多，一般会由网维协助搭建。当然，对于有些无法模拟的情况，只能靠人工移动到例如电梯、地铁等信号比较弱的地方</p><h2 id="软件测试加油站"><a href="#软件测试加油站" class="headerlink" title="软件测试加油站"></a>软件测试加油站</h2><p><strong>功能测试</strong><br><strong>软件测试基础入门：</strong><a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1TP4y1J7BD">最新软件测试视频教程，软件测试基础入门到项目实战（涵盖软件测试基础+黑马头条项目实战）</a><br>Linux系统2天快速入门：<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV11t411M7uZ">Linux系统操作教程2天快速入门linux项目搭建</a><br>MySQL数据库:<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1M541147Cn">软件测试工程师必备MySQL数据库，mysql系统精讲+课后练习</a><br>Python自动测试教程 ：<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1av411q7dT">Python自动测试教程，python从基础到UnitTest框架管理测试用例</a></p><p><strong>自动化测试</strong><br><strong>Web自动化:</strong> <a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1QJ41137gj">软件测试web自动化测试，Web自动化流程精讲和移动自动化测试环境</a><br><strong>Appium框架视频 :</strong> <a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1B441197rZ">零基础入门移动自动化测试——Appium框架</a><br><strong>Appium进行IOS真机自动化测试 :</strong> <a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1yE411r7WU">轻松教你使用Appium进行IOS真机自动化测试</a><br><strong>接口测试:</strong> <a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1LJ41137b5">4天玩转接口测试，接口重点全解析+传智健康项目实战（包含requests库，集成UnitTes，Dubbo等诸多工具）</a><br><strong>性能测试:</strong><a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1wC4y1Y7yX">性能测试全套教程，4天快速入门性能测试+项目商城实战（含JMeter工具等）</a></p><p><strong>综合项目强化</strong></p><p><strong>微信小程序自动化测试:</strong> <a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV11J41137jE">软件测试微信小程序自动化测试实战</a></p><p><strong>金融项目功能测试:</strong><a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1EV411S7zB">软件测试4天快速搞定金融项目功能测试实战教程</a></p>]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试记录</title>
      <link href="/posts/3521423e0c10/"/>
      <url>/posts/3521423e0c10/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b4097029efa201a408f0c1ca29ba1bb83f03f52adb01c417498aaecb6e688a69">05f36028e34e215a20bb6ed2e9c75247b73eda1df43f74c2013d1bcb7ffb11e3dcc321d37937843be1d450e75a2c15d8f9a3201c5196ef20732e4b7a1f1f82f4c2b19f70db56a2451ea32b0168295afbeb1328ae7dd199b829e6b0d43044c4697effd4dbf00808d966beee93e923162e8e86b9fe28f802dd010dd1aebbc22092715076196ee5c8bfa5b7b926fcb47717ec91e795aa603e8ef365983a37a1fe0a95cbe47acd60032d11ac4edf2794310c064686b7cd9d3cc5dfdeed0fb6fef4d7719e5c47d01557e845b0b5f329f362264f14a475cea5631b2b9205e5ba7880f8d4233a3240096525224ace83f14fad91f8e7aff68aa0b86dcf02c6c43ea6a8f649230c1f5ab191d9fcf88941361f691139da997b4881277541095ac354242261325ecc16d65aea005a85158006fbd84b1cee69d822921104af417e8f5f47fdde03d63e51d03250bc39a05d148e8158c62c7686ea2d4c1f70271390fcc664b7518053bd61740b3ee64979e8a48fa428a41f522d84747212032f88d3676af1a1783f94c2c494a164c780da3999ce995c0a58d3c734478b408eb839d33235bfe2f77d83e4408a47f55e371c79257ac0d7847d91aadabf400e7a9cac4e7f6738ba0ae52164bc4cfe64f3fa3a9cbcd4767eb5721de0d6b5c0f0d9e27dbae309634b1d607a20d55cd91ccd46fcee062033a7f1ca267d9c7bbe04c79026af8e1caad549d14e62f77071484c48cf6d51f3246448f88b414f8a0641f26e97ec12e844cb1b7a76b876c09a3dc4fa53422f7a3dc663764efe1708bd50c150bb16dfd9efc65204d3e3a2f1454a34d6f56ce62431efec857f9e6d056be08f9208f4811802771dcd4fb24886596489309922a2a3eefef1f5b0ea5cc9f17cbf2c535604833ddef087f6e8dd1f800c5d4372981fc053b9a0640d21dfaff6c92e09e8d5d5ed2e9b9d4d5ba85b1f5a007f9090114ebbc03b1593f54840eb06ba813c33976f050c12d8c4631d1fee17b37bedd3d03711455dd7120e4d160893b89fd7fbda9678b88dddc4dfb720b070fc3b07b630faf987621491857f51da4c256abaebb67e687a26d6a75a4214a4daea9bbb56541d28bed7a6a0b6c012be43499e53c337335644765e6f700684d6ca4cddb1cfa1e3ea93efdecb57a3195b93ea28aa99280f104fc4a2c28add42768835c43374a13530b07d682c85d11b63964d8c6b96fc4ceb234f6eeaf9302ff1c767805efe35d4928a8654b0728c15c22c082d7454baeee74156b76c5dedade557a4754dcc7c1f81d2679e2a9f8e9800a350df26cff880507ebc94a75bebcf6dec99004b97d4cf6352286b849c5a9167f88e30e377b827eef1ea864e68932e2ebdbf5cf5d1f77d19fc6d6dfbff81da28165783f56d9038839ad7a55a398afff388a594678badbc133c0baf23c9f796691f21f0c482fcfb4e34fa28a5e840b8577e65d3fa0a6287a19c8b70922293ae3a3ca51f4c9c3a2a1a15d8fe204c74a905c5704bf4a8b27b0a272bafbe9ab79bbed292479f9012d1802899b3e954c3684e4d2b3755cea03b84d2cb22109734a514f6f541ef2668a85d93c1e5fbe83e826a61490ec71130e80f01bc0c7f8a989e8f0315d3c590eec9cde3e2db769472a3cfa772d41ac7029bb522d07e5d18d99b920fbe8873654bd7e5dc8eb31de0c4c343ff8f5aa496fb61d093aef48aec83fadf02682d1e91a79c3a8904f02fbf3445c57a2d787bf9bdb217482fe9b99bf446f7e38eb6836140545404d331834f82c91dd384b382bdb3d7f49e5db98cc865951cfbae56650487a10a193d4c1f74899a46dbf0501cec75a908208c193d7b948f31450e6f048cce6f5bf94b449d4205da8665b401cd37e82e352c2c018f67368d39f15a711db3b3609af2981393116c131d58b37f117751e80ef8117a8d80e87736fc1f0555bab216e53a144cc5ac86a68f53f33f343942526d4f7b7f24e052c3a2be19ac3445e397d33fc6f229bd911a0d8c15d9471f78e1a886f7adbe841474bcae5bbbadcf8a514976ec7b3073fc4e75d52d7b47bab8d367dce16cb0c5bfcee6324f5025ec8f3fe1f23be77c234ed43e302ccce0008f266c973c68ef54ecaa6cdde6c5e78ef06f0b32ba952ef61771afde08b97b95e4ea853093a5cafec57d677be8ec6c26eb7b6bbc2f5795e078237bf76fb7233deed58e4968a68a183fe82ca32ffac4e0186f720fb68e3c58462d55d085c834778dbb67291beaa38cc069523e493bce61039e9b6f5ab2ebc00e7e589d827346e6d127c5dc33a23cd26ea7546729581140f4b23ef0a80d05c94cebd949afca7af00ec2e24d11ff5c65a265d10c4be0e2715498da05ff93b4e66e4f8028e8715b87b2da7db675370ee2e3ce1e8f9e99f0f0e402357712b6f3b45f4b505c10928adc1158665573a4946137fa9137ac2dae989829df03724ad59dc38b08898e7b6a4db2ccd9807c3ab73b9db7a8d800de5dc31ff590e770b66276c1f8ed7b5feb1a34a061b4bdf16b8516506acb327fce82477fedd8b7159e66cfaefbb09727402b44f886d0de4063</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码！！！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试资料汇总</title>
      <link href="/posts/e1befbaf572f/"/>
      <url>/posts/e1befbaf572f/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="34377ae7f8da6cd7bc365d70694070fab305aa849f418baf94e0c3ec07f9c91d">05f36028e34e215a20bb6ed2e9c75247b73eda1df43f74c2013d1bcb7ffb11e3dcc321d37937843be1d450e75a2c15d8f9a3201c5196ef20732e4b7a1f1f82f4c2b19f70db56a2451ea32b0168295afbeb1328ae7dd199b829e6b0d43044c4697effd4dbf00808d966beee93e923162e8e86b9fe28f802dd010dd1aebbc22092715076196ee5c8bfa5b7b926fcb47717ec91e795aa603e8ef365983a37a1fe0a95cbe47acd60032d11ac4edf2794310c064686b7cd9d3cc5dfdeed0fb6fef4d7719e5c47d01557e845b0b5f329f362264f14a475cea5631b2b9205e5ba7880f8d4233a3240096525224ace83f14fad91f8e7aff68aa0b86dcf02c6c43ea6a8f649230c1f5ab191d9fcf88941361f6911ad098fb58bf6fac12ba3cd956102a4b732337ee639377de838215178ff6a2f6742992e5b61e6ff700283e74769b9b73a0ebf836a10f3ca78e2ba29211fba2b2d19c3ee5dbf3bbe284a04aea666632a274c870bb9c214eb7bd31310b26b3a8bf8e1e767cff665f17f655122cf35934773b01718051b6189fa0ca77a968c7ace00c95b25b4d171c6069da4554cff07f02be2c7ee452b0a80fd42916eb89d28ce63bc457a80d573d42ab10caf5d95db65db0f2056a344ee35504907ca8e05c6f6d070d5b56eae53f888141c25279a31c414bc41ce213d2c0467fc835122be4757f49937ecc9c2ee1783640defd74db46f9cae82a167a7ba9e2df38f846bdcc80ea0931777204b47c98de6006048f1a49af6abd495f1222cc53c3000bca5a11e3ccf9d84510d6e7c5a4e18267bec8de1344e6deb6aef354e597870f5235bd3d5f21f4e283c8b9e8fc0aa2dfed4ce946178ad83d6d270632e8c5a5b6e482d8d50ec13c0f762b670c234e67af272276842327f22eba083e09e4fa34827bdf969515344e52f09598b1b5ae8047a5b81b8085508d2463fc825ffc333bb959959e7cad24760cd10c5c42fdfcee07e781479190a88d34429915783cf2baac9befb3d9f9a2097202c622f7312ddff227cb893e2b508ec6ba37daeafeeb2e2b0049f04a8d8730e1a14daa70048c1a1671a7265ced085eb923b62a38eaba2acdfbfb65be3cacb4a004631153b92bc159204d7f5fe8aaa000d57c08aca9fb77897876fa22d53aa1a28635016964cfd895e3a91c6c9efd24ab0a3fed68160aa6d53b248141cbef7c1ea4d2bbe399ae70114382eb164c76f62ac39f3e88b4b07e67bcfd60ee3f8f00a24158aa4b3cb99be88875a1aaf850ed0f8c9b8ba8b4dde69ce0d0e19b3d20dddcea9ceaa20fab539cbd8e315645338973f4cf270f9ec7091c2cd47d898586ad19d1b47efabca3fdf5d6d789481c1ff417d1cc21c7e36cb4344b8445da2590605fec5aef31e8978793b27b30f643c2b8f1e111fa9619d1ff1d1656f9b59382b9137807f70a9ead82701e6b72ab147d753ae77d2f8611ad94a65adf62dba05393f376952d7caddd358b322dd4b57266b71aea9a29936a88979b1c53436129686ff7a239c5c53db7bbe3308e618bed77b07b8ea732ad56eae296a40bec0505edaf254482731e54e31e050075cb91d44333ba635ce860c24ca8e10b8bd815493e1842592c645d277fae620ca6c5c80854f5737659dbb7a33bedc6a12fd106636f0582b4ea4c3e37ff19cb8210f04758eaa0eab0a16741581854c044ac973177097457c8c2f90a1ad918b4cc5c657d7757e893037997342e6d9585bc4b24a33f149df58cc7f6296b6722f129c425eeca6d6d00969cafe5efa2012e16940db537a655bbd611f3928a2c150d2cc2481c7a73451833ea3e129c8165a409f1bc3e1fc96e68602df6f519ad82660784078b99794b4b64c1faa084a2da2a0b39f2f278f56d2019e455aaf584212975f27f01625584975f24a02d73f02756d18d55a527294b447defbf5be9c54e6a71a5f6f2ea8bbd646e2d6f4d18e96c0f296d0736c4a68af15b5c3859e643c6d4de5dfebf452cb0ccc96707305889e5a63e0f316ab9064a5659bc58ce952ac10569b673a29f98b51a4eed3f3d86953ead169dc8878d8f4a06286a173ab4e4259adaa28debe4a405a186722d86b1eaa23930c6a00085c6801c05c93fcd7fb39d53802aaf25a198db3e12063ee639d9de831f8615fc086de27c680ca0bde6284332c4abba3b84ea2e2b3bab3e8c9616b15963d5fe5e278ff09a626ab4628b37586b8a73b3bcced2a3af2f8d08da133de832a584af20a1f8cd3507606deaa828d1fc9d710419da5bdd5b6b6c4209e65af9e82de45f1af2dd28445c082c24894ec976b6586f375daeba73155fdbde9129d5c3e074bdf0ec871caddce477c2d331adf83f08017bd754479e53f9144f2e20aa9508a5051306e2a3005034f0c7d61bedaf62a9ef227df9341110fb292cbb3aca3dde6229f1e00a8b76a462c08e39032037bbfc1abfb5eb0c6519a9efad44ba6f0270ad0d2b50b00109d1a0dad54127fd858d0ba5cd11663f4b9cbd3b488920297549bf61be2f3776b6093e1aa5dcfd939535d4d418ffad0954427d1b264b866c1e34a01577b196664761edf95659a9b3a351a3c1b10400f5251d4c239f4bd350dddb6b43bfcf4983f333ebe09c170b90d8e2d7077ef0a10f8c02c5f49bd87ab53f68f80ef35e5590709ffc13486abecd3fb58044a4820336cb217b17c34bc8e0d59d0cfc77762b59bb8a8326efb69641be30fee3e34d0f78aede3d49594574efcab91c8feeb0914edf0c15cdcf564f4f34be455a4a0b2154b314af60a60eaf1fa48045655109492c9cdb63f38318a290046f1022936e64280068d23bba13ecd58b6c29f435439652bcc550edfe2c6e213e7be84891b57df1a51f8a3ddfc07568baf9932c93dd1053f351eed67d589461c8ab4d7b73f3c0d8c9e8a69dec2517fed830a9fba10e5160fc8cfb9fed998943863c9446e46ed4be70144364b3aae7d7b9d4a51acd891898c63028ef58e9c2350eca9228646a05f181dc430543f3c020e2d28927a5b27e8c7c9713cd6de52684c4708f355cb6758c5f179106b2ac2f651ecf463d24bf4c5638c264c827bd542d6c55ccb89a95ae703217a53276e41b8ba9e4c94884359d692baeec87a3f6edb2d2dd373dc49a179a5b1c6df7cc484c63915c1214df7e99403e399f51ee741da72b30e5380ce147f27c0d02363e9b62fb1f07407e1f01461fc8fe5a3d6ac3507a4b7d41199fa3fe48e9d27e471fe27a8637679f56e28d75c0cd2ac3d7b28f59a293207e6295155a0528c867858587130260791542024986f4dabecfcebe0a0661c983c9cd0bf173f79162da7a49160c7f68103fbb3058963f090fdc3f0c699997ce04342e06ad232b31f393d41fe2f237cb9f26898ad3c4b9c305af11b76bb91537a1d963361c3a60eb877ce98a00129cc837a3224c875ec20151015dd6e6438a6f97c0cd738b4d50e5f5283dffbd996b44506d8fc528e3b53bc86626a11de0a178b80a0e930277a12c6d28746f9403b5da613f1e07fe2f3e9e78c4aa22ef123794c63e410966563fd21ebc5b5a40548658f8d332591aca3f710c758eb40a2cc676a181b5c1176ed6162c051ce6f09af7ac412c52910c2fb2e3eff0a4edba9e8586c50f2f519e1726c9eec63fb45ade4c5af1bba7aa85a7b4771d1cf6bb4f9a8b803948ab2cee9a157402852b46d362d4ba39dd9d116006a786ee2c663ed85d8ec5872114d8d82c26f61f537e46a453f955e117b0414008828323fd357cd5bb90becf7ee380f0c02072ddf35787d25608ed0f86ff54212b5bdee84c9da5875766f8674e71eec9504aa3008ebd86ad5ce86ca7388cd9dd5bd03427c31aefcde37f4a54c84b3d27b2c50e7eff7a508c805b27ebae7cd3150f172df264aeb80561df14da5008ea8789716d25caabd059132dc3c474b734b9adbf56dbc7c2be09882a91c5980e615a8018b6e233ba1adf6cb2bc9e2fb225922cbd25ced5bc37370b3b082f6a1ee7c9387ff73cd7cf1625a5f8058b577b29fdb603a154736e977f44c6bf43056da408fc1e272a2f044bbf3d5d1b351ae67617dda7eb2d261ee5cdf6a741aa92e24b8bb6c3cbd16f78a606249fb4a44a13da70689a1d6c4a383ac3871e2904d3d8030559ea8bf68742b0774ef5e8cc707390e06ab93dd44f5410278715ba47c26c8f40146dad94dcd7b8fdb769a03599ba092544d97f7e68f77ee7ca515d5a4e6dc08beb7f22b2adfbc3f740934326bbda9b5c4affdb93808fd224fb4d687482c10c3787e6f69df266c902fae1eccb2972a3ec1aceaf984e1b11065d3fb5acd77cb4b9fd45d3b086570ad836ac3d0ab8f1c48ca8261da3816d6ed9fe3e20399a67ce7777ca0f55254756f90fe89aaa21ac3bdc8c75258767edad98dc71254d4a3ca025ee7bda6ee3d3df2b9317e9ce0f2775cf656cf5a8d2662dbba046147ab8574e67d5c2b49af0909e4d74a4cf5e188954eafe6714fee3f5f0327dce6b865bf1982daa01711d4f1ad6cbb64b4a57f1fd7395af99fafd86147377c4a75573dd2a91de3fe9d548a1f5369763b516acc2569797b4c4b6879c424115151b5b913f57c04e9d9e456b1afee891e423b673d91ff7326acb8744b5cfe9005b73b49fbce6d6a05921aeb24c84f40eafbd9beb969b239f8a4b73a3d0d97d2a71c42cdbc6984872540026514befeece20a3b8a12a01b142406780c50b7df82b0c40115ff9abba5764474fba8d3858ee7cef33d01dd26ba7117254a643f8b8fa3f4c9b4f4b953296a59d59c87cb4380b0311ce87cba48c8e9158ba4187448abc95700307d56d6f05cf6d2de4a47dee00a47964043493fe6272eca1acc061b56fc97e1d5d3234996529f2c37f6a2accfbff2d5435ef1f84fd6a8adbabdbcec7b86080e8147eaafef0651ed9e2bea409667644ec8ab9ab7ee7aa5b4dfad2c56b620568ab55dd2e97fae2ab4138197ea00b3dbb37e943c6276398cbbf8ce79da659544fc4ef1db12f129e5783202974d7604c5ae23a29eca8758311e8e738cc1f8692393970863f1e0ec2311082268582f48b5fd2d2b60a5d6ead5149cfe66114e5f8d8e0a19f3c91f22af55aafb04df9dbd26b3caeb870d69d2df3f430a1b2cfda4505f993ccc2d548a37be9cce57ecbfca0782f7759242776cf39c3fc344ece6f049251cfbace0cd1d8c8da8a4bd320692a18b12f43bbd93d7ed8222e153e836e08ea4bff9dad6fb6f709e0a31bb52b18cdc0445c23dba5536b8ed78860ea1517de00e69b53f6b03b88d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码！！！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试理论与基础</title>
      <link href="/posts/f4b1e50edde1/"/>
      <url>/posts/f4b1e50edde1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="1-阐述软件生命周期都有哪些阶段？常见的软件生命周期模型有哪些？"><a href="#1-阐述软件生命周期都有哪些阶段？常见的软件生命周期模型有哪些？" class="headerlink" title="1.阐述软件生命周期都有哪些阶段？常见的软件生命周期模型有哪些？"></a>1.阐述软件生命周期都有哪些阶段？常见的软件生命周期模型有哪些？</h2><p><strong>答：</strong>软件生命周期是指一个计算机软件从功能确定、设计，到开发成功投入使用，并在使用中不断地修改、增补和完善，直到停止该软件的使用的全过程。</p><p>生命周期从收到应用软件开始算起，到该软件不再使用为止。它有如下各方面的内容：初始构思、需求分析、功能设计、内部设计、文档计划、测试计划、文档准备、集成、测试、维护、升级、再测试、逐步淘汰等等。</p><p>常见的软件生命周期模型：瀑布模型、迭代模型、快速原型模型、螺旋模型。</p><h2 id="2-什么是版本控制，常见的版本控制系统有哪些？"><a href="#2-什么是版本控制，常见的版本控制系统有哪些？" class="headerlink" title="2.什么是版本控制，常见的版本控制系统有哪些？"></a>2.什么是版本控制，常见的版本控制系统有哪些？</h2><h2 id="3-简述软件测试与软件开发之间的关系？"><a href="#3-简述软件测试与软件开发之间的关系？" class="headerlink" title="3.简述软件测试与软件开发之间的关系？"></a>3.简述软件测试与软件开发之间的关系？</h2><h2 id="4-常见的测试模型有哪些？"><a href="#4-常见的测试模型有哪些？" class="headerlink" title="4.常见的测试模型有哪些？"></a>4.常见的测试模型有哪些？</h2><h2 id="5-请根据V模型分别概述测试人员在软件的需求定义阶段、设计阶段、编码阶段、系统集成阶段的工作任务及其相应生成的文档？"><a href="#5-请根据V模型分别概述测试人员在软件的需求定义阶段、设计阶段、编码阶段、系统集成阶段的工作任务及其相应生成的文档？" class="headerlink" title="5.请根据V模型分别概述测试人员在软件的需求定义阶段、设计阶段、编码阶段、系统集成阶段的工作任务及其相应生成的文档？"></a>5.请根据V模型分别概述测试人员在软件的需求定义阶段、设计阶段、编码阶段、系统集成阶段的工作任务及其相应生成的文档？</h2><h2 id="6-W模型的描述"><a href="#6-W模型的描述" class="headerlink" title="6.W模型的描述"></a>6.W模型的描述</h2><h2 id="7-编写测试计划的目的是？"><a href="#7-编写测试计划的目的是？" class="headerlink" title="7.编写测试计划的目的是？"></a>7.编写测试计划的目的是？</h2><p><strong>答：</strong>使测试工作顺利进行，使项目参与人员沟通更舒畅；使测试工作更加系统化。</p><h2 id="8-测试计划编写的六要素？"><a href="#8-测试计划编写的六要素？" class="headerlink" title="8.测试计划编写的六要素？"></a>8.测试计划编写的六要素？</h2><p><strong>答：</strong>why-为什么要进行这些测试</p><p>what-测试哪些方面，不同阶段的工作内容</p><p>when-测试不同阶段的起始时间</p><p>where-相应文档，缺陷的存放位置，测试环境等</p><p>who-项目有关人员组成，安排哪些测试人员进行测试</p><p>how-如何去做，使用哪些测试工具以及测试方法进行测试</p><h2 id="9-项目版本执行过程中，测试人员如何把控测试进度？"><a href="#9-项目版本执行过程中，测试人员如何把控测试进度？" class="headerlink" title="9.项目版本执行过程中，测试人员如何把控测试进度？"></a>9.项目版本执行过程中，测试人员如何把控测试进度？</h2><h2 id="10-测试人员在软件开发过程中的任务是什么？"><a href="#10-测试人员在软件开发过程中的任务是什么？" class="headerlink" title="10.测试人员在软件开发过程中的任务是什么？"></a>10.测试人员在软件开发过程中的任务是什么？</h2><p><strong>答：</strong>寻找Bug；避免软件开发过程中的缺陷；衡量软件的品质；关注用户的需求。总的目标就是：确保软件的质量。</p><h2 id="11-请列出你所知道的软件测试种类，至少五种？"><a href="#11-请列出你所知道的软件测试种类，至少五种？" class="headerlink" title="11.请列出你所知道的软件测试种类，至少五种？"></a>11.请列出你所知道的软件测试种类，至少五种？</h2><h2 id="12-黑盒测试、白盒测试、单元测试、集成测试、系统测试、验收测试的区别与联系？"><a href="#12-黑盒测试、白盒测试、单元测试、集成测试、系统测试、验收测试的区别与联系？" class="headerlink" title="12.黑盒测试、白盒测试、单元测试、集成测试、系统测试、验收测试的区别与联系？"></a>12.黑盒测试、白盒测试、单元测试、集成测试、系统测试、验收测试的区别与联系？</h2><h2 id="13-简述常用的Bug管理或者用例管理工具，并且描述其中一个工作流程？"><a href="#13-简述常用的Bug管理或者用例管理工具，并且描述其中一个工作流程？" class="headerlink" title="13.简述常用的Bug管理或者用例管理工具，并且描述其中一个工作流程？"></a>13.简述常用的Bug管理或者用例管理工具，并且描述其中一个工作流程？</h2><h2 id="14-禅道和qc的区别？"><a href="#14-禅道和qc的区别？" class="headerlink" title="14.禅道和qc的区别？"></a>14.禅道和qc的区别？</h2><h2 id="15-黑盒测试和白盒测试常用的测试方法有哪些，举个例子？"><a href="#15-黑盒测试和白盒测试常用的测试方法有哪些，举个例子？" class="headerlink" title="15.黑盒测试和白盒测试常用的测试方法有哪些，举个例子？"></a>15.黑盒测试和白盒测试常用的测试方法有哪些，举个例子？</h2><h2 id="16-简述黑盒测试和白盒测试的优缺点？"><a href="#16-简述黑盒测试和白盒测试的优缺点？" class="headerlink" title="16.简述黑盒测试和白盒测试的优缺点？"></a>16.简述黑盒测试和白盒测试的优缺点？</h2><h2 id="17-在没有产品说明书和需求文档的情况下能够进行黑盒测试的设计吗？"><a href="#17-在没有产品说明书和需求文档的情况下能够进行黑盒测试的设计吗？" class="headerlink" title="17.在没有产品说明书和需求文档的情况下能够进行黑盒测试的设计吗？"></a>17.在没有产品说明书和需求文档的情况下能够进行黑盒测试的设计吗？</h2><h2 id="18-单元测试的策略有哪些，主要内容有哪些？"><a href="#18-单元测试的策略有哪些，主要内容有哪些？" class="headerlink" title="18.单元测试的策略有哪些，主要内容有哪些？"></a>18.单元测试的策略有哪些，主要内容有哪些？</h2><h2 id="19-白盒测试逻辑覆盖有哪几种覆盖标准，覆盖率最高的是什么？"><a href="#19-白盒测试逻辑覆盖有哪几种覆盖标准，覆盖率最高的是什么？" class="headerlink" title="19.白盒测试逻辑覆盖有哪几种覆盖标准，覆盖率最高的是什么？"></a>19.白盒测试逻辑覆盖有哪几种覆盖标准，覆盖率最高的是什么？</h2><h2 id="20-Beta测试和Alpha测试有什么区别？"><a href="#20-Beta测试和Alpha测试有什么区别？" class="headerlink" title="20.Beta测试和Alpha测试有什么区别？"></a>20.Beta测试和Alpha测试有什么区别？</h2>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件体系结构-设计原则</title>
      <link href="/posts/4135ea6587e3/"/>
      <url>/posts/4135ea6587e3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script> <div class="row">    <embed src="../../../../pdfFile/软件体系结构六大原则.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件体系结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高数需熟记内容</title>
      <link href="/posts/c3e2e27c9995/"/>
      <url>/posts/c3e2e27c9995/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="260e8885d601d46cf10361a108897367e25063808d6fec63ab0092ae8fce0f8c">05f36028e34e215a20bb6ed2e9c75247b73eda1df43f74c2013d1bcb7ffb11e3dcc321d37937843be1d450e75a2c15d8f9a3201c5196ef20732e4b7a1f1f82f4c2b19f70db56a2451ea32b0168295afbeb1328ae7dd199b829e6b0d43044c4697effd4dbf00808d966beee93e923162e8e86b9fe28f802dd010dd1aebbc22092715076196ee5c8bfa5b7b926fcb47717ec91e795aa603e8ef365983a37a1fe0a95cbe47acd60032d11ac4edf2794310c064686b7cd9d3cc5dfdeed0fb6fef4d7719e5c47d01557e845b0b5f329f362264f14a475cea5631b2b9205e5ba7880f8d4233a3240096525224ace83f14fad91f8e7aff68aa0b86dcf02c6c43ea6a8f649230c1f5ab191d9fcf88941361f6911f3ea5c2c20e54051cd551729d391eb06d3f2375c6e89137c02a0acc2f8cbcb222d69b9f8538723e98b8481bf95a9b90aaa8f66005bd501363bfcb773da278cd9ad0a934416b0522f676759eb6bd42197046ab51ccfaf38ed3c0975ee806d0cf86c1c0b348c6b396fc1d4810dab7e3de61ff575b1bd4543cc2e125a3094ab4e09fdd9dc69c0400392f0ae765294f2f90679f3b56b1ef6b42553f56b495d5f42349203ba9b7fad49a55b91ac10bfc64c4ea9a21ec4e05c409665f9653de2da0aa10695771494a88ad9b21bcf44e54f68a4a749fdf6670faa4ad437e7fea9d0b113db23225ee8a9def49bc96b3bcd5adf0ec6a459f89eb42cbb59a530674bd8e493ea7ce73b477b2771089eef401cbd353f23fb817ebb57288d3f38b53d80ed0cb1209dd34ab58fb5bfedb9946ba16f13f2daf6eedf5b7c32462ef61c51e072f0d66309f1774df16d342fc7e7cc477e03333a3b5c73b292312b777816497fb6235242287b101bff4362c5fcf093c8dc3328fdefcfaa2872cb2a124183308bfd6b2547ade1bde6e52762691b3ac7421cd9b9a61b2b5f825823c198bdfea1ce13159f3f34f213799fd4adbc0d270eb6545e6b0beec1e9f876b5974490eab94674ff04afcce049950c4e0859ecd974e8e9cb34a4c56ca099e086aa2b7531e8ed0cab22bdd0aa84e509e557dcfcda85ba2c5a754c2a0cc78b568b880e85a266782cbb918843e93511f37e8a021504709a6f40db0e681d79876159922c0c5db8ec93efd56090d7262e7c73fa8a211e3da232fdb29c561a51285f2d6fc07a9903b9c19dad782f009b5a8e10ab3729e1a305a4754086b84b85752902cacb51f2cbbb16febfd40aeddfa5208e0dc06d53a51ba4e6ad8c5609a158903304d83a925e7e88d71b1d814b68e8e18eb2294262ef797872079da5734b48978e7cac79b2d007f610e94852398d14195db134546375478e42ea5f21efea98ae1339977cc90ecadf193b4d648fa847e26476d101f7e81766ea1352ae2928de3b583a09bf302132f7e29903ff559ccffd739a023b6ab68c5271c536f2298c7a87cb23cffb90d4d544b0ee66738785cff54bec359589fa06078f2812e46c1970a21b87493021f5a1749637613376ac0e2e64db6c408d63f90a9eed8e9e451ac037946d7dc18a823e8796c08be35cf97e8193af5a310a56e62500a315324c065d9275ed7f1bf9baa7abb9686c112f46806b5ce92a6d99fb5ab6e1d2586accb35b2777e54af80157e12c64c9fde2f8fabb37d4e49629415b2afbfcd1f429113b0721efb151abeb210743ebc9b8167f3dd3bbee57f84fdadecf7e7d68d5b35211efcbcf7592f68f190c4062c5b7f96a17235b85497ce61a65bc9ad752aae38ebcd2bcf0dfffecb191bbbb385135bc040868c77cdbd7ca608e1d7cd0e9678fee8671e47aa681c223098fb64a639f36b3aac3215ad4b9e7c484935ce2e619eacc95137274d7315675c46af3961eda6b8c6c74a00a81bd555b3ba4d6aee304800b89350649496af35c75ca99c6760964ee1963217c70da40f27ec3362da3731d82ee0edb07214d2d1bcf5cc863b540489ea8ee2477e5b1a5ddf673a59e363f52ca115f461636e9ab2a05f5300372a1af982215f2d4afbfdb3adc242b5c12c17a01af049bd824755b1b60cddc14549d1e82847a5767a2914eacd440195344ecabfdc06caf09a710035fef99ff294eb694e3982540fa5389bdcab9a87d8c01fe319144562a0185efdec3ded036f017970a9512eb685d2a4f81380bb7f905b50d2ee3c9eb3af95d2aa15ac3440f2ea23fb6b0695f27e28efa2794277ba1525e9c91ecb825d4b3f34e09b4be809a2894240c20dab56a3b6555c75e8319e647681bc8b5a554faede790a20d18cba1bad32f44a70b168a96e9612d42ba363e4e58b3ce8376cc7d9a597b26d854d700734947bf63c297a375252f52b3b339f474abc59b68d051664904b2356cce1e220637d89b085090e0f64df19c18afe2ed6c8ae3ed3529125b7e9c86fa9f303761982a39d8ae6753f558248e0401eb7e25b5dbc0bba4b7bf6d5b45c7f40343160bc38de22afb64516bf654ce100961d40766203f03b963b273a5bfaf6fbede9a474cd636c7b5ee493218b0d8f3e4c86b54652266fd76bb07979424da81b1587d768d51940dd9a00ec0ff13bb984c7cd6d29b440d7f6567ddb9635201c96decb32f5265fb5615d7586af2b72d038ab491c30508503a324358a2a3530aa81a7746b68c09f0385d3fadea1aa42e57f8998202d6feb8847f792991283f38c50e455f89c666d373f786786ea6a4ef2a04d8de8ea2e05d6e230e572c7fa2f4265dec4032e7d2129d829f4a904dfc8a0a94c6e177d0853d1a6b7f85963bcd02037d80489bef4001eef6c1c43e81192b7a9183a25353749119f820f48d8222a304a1af0a0e130dcd6a0d91335914b28e268cea2e8afb37216ec6c073dbf0e6541144900aac9964ae6b3576fc58521b0b8645d1843e45af49a7359abca51b3b6992826d9c95a30e4dc38bb846c8d436bd8cf418ece70448fd7c59eea4ffe8a957e2c7c1d4e48ea5c19f2c08ddfa8b4f275906cd1854c761914e2676cd18f71817b945a49d3e3b35ab6acc6adb1761faeb90fa977739f81338b421e9a796ba59184dbc0456a9fd47bdee8bdb91897f60378f467a5b42c79b798328263f93a2bc56f6d2f713ec37976af57430e262ee254f23abcfe2dc157dde838641ba7b87f48041118e236109f2f0b7390e53940039d5bebf8e5c0b2c42075a16b0ac0a6b9dbe16276dd4e509389b6167d95aff630b2120e195dfdd394e3fd44875a3fc7f2edbd9cdf5b6d3475024b60c812b19d94e54b4c875b544726d3f9f26f8ba7ebe3d4ccf1a11192049a2689cb9d186767b32dc69411af74b1c7ad0c24e2b865926c931a3080a58c4b8fc6d3d7ad3659df13a013c97dbdb37ff5ad68e60c854866a85c90675138c63ea0e2351e7fad1b7f3586cf50595d2cdd6fd1a4036c88a2966d5fd11a6bc46c484687a1102979ac24b2289231f3b6003f2b0ee5e988779861edf5441414f391831bc677b7a20172501ab3d1bbd0d4889d38e3729c8b798f973f3aa675093c1e0b424011319f2c1f2e02e984f116f8531a68fdee88bfb76db926a01f4e81466ea5c2867344adecbe870a7881e5307829d1cf678fd8b18fc3fd0177c0e960f856f9df681b9a2299c3cceeceaf3180a279cef3999c62ee1749521d61936ffbf08b8a7cac4242994e542234bb78e3fdc7e90eff813af84f06fb626340d475247786f9039fc8bc62843bbc24bb73de5d49e5632758aa8f3f6509dc36dc05ccfddd6a1617e2595bf3b2b6a798bfc57461865e821c8cb680dbe4748fec51962468ba94e221fd2a3f97798c808f25af1337374c0c916</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码！！！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高数复习笔记</title>
      <link href="/posts/5280956c0654/"/>
      <url>/posts/5280956c0654/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="046ac740e13c1ea25613765ad532cc8f926d31bdf4856ee104450a1b6ad5cdeb">05f36028e34e215a20bb6ed2e9c75247b73eda1df43f74c2013d1bcb7ffb11e3dcc321d37937843be1d450e75a2c15d8f9a3201c5196ef20732e4b7a1f1f82f4c2b19f70db56a2451ea32b0168295afbeb1328ae7dd199b829e6b0d43044c4697effd4dbf00808d966beee93e923162e8e86b9fe28f802dd010dd1aebbc22092715076196ee5c8bfa5b7b926fcb47717ec91e795aa603e8ef365983a37a1fe0a95cbe47acd60032d11ac4edf2794310c064686b7cd9d3cc5dfdeed0fb6fef4d7719e5c47d01557e845b0b5f329f362264f14a475cea5631b2b9205e5ba7880f8d4233a3240096525224ace83f14fad91f8e7aff68aa0b86dcf02c6c43ea6a8f649230c1f5ab191d9fcf88941361f6911f3ea5c2c20e54051cd551729d391eb0640ff06a693f834d8bb5c0e3eaf6d9c38771202fe4fbfea67ffae0cac12ff1b5a0f8a858cfa4bf19e635d9752014f2f327df6716517d9119c025f9e98753a6ec54495ed1a408a225653c72aaa6ba4a87f262d26772d38c85aa088a9a5c57ef0543958709d0789b806fc81f7ae61c030aa48d3fe338d0c4a7566fdf39245fb57316b78f7cb8c75480db45a51237cfe6c90043c7fb9b61f6b99dcf20660b06b2ef92eed9b45c130b399a1e760e9f48ace6c0de51678ee05065ec49ae26784b849939e16346e8acbdcc0f3edd9e461a0ea02ba9406436549449553f9f1730a79c77449e6db52d5643f0aa3f137830a1e76bf6173ab99dbb50ac6d09e52e6cf80272e7dbe6e2a8416ef7d80a367b43d5fc894b833157d440e486b4a6b88ca71c5077421a38fe5110b0f399cc40498418f5405127fbda3be817c658a753deb31cc66d0745ad837c43f9243a785625762a0c23241b687d9c9556d1db75b4b2321a5d9eaf2e52b91910b1d75601416de6be8c076e715ae29432cc841e186225e4fddc50d4a2140e70408e4f3c48191fb30875802754846650bbbe17e2bf3177d47b36a102c40be0a59996cd63f6e3f8aabc1b7f6e1b7a2e27c897d67a2f5f34939eed89d4a75c578022f9f4b94087626f04fac5061a1713ab17ba749e7c1891d5c98c17c09865a1a221d66061b4f967406617b0c027e383651ba6192dc236cd2da84530373482be062451d00f77e555a88b128baeb4fd10566f862aceb71be810588bc521a53d19a794570cf18e50ab0e548d241dfe275a9147345b9a1c41e3407a63d619d97cda8bca08c5bda1526324fe2bfc4c4e31b9db57a5b8e5bb0da6fa7695aa5899cb758ba179578ece1084e0e4025957c9278b75358f871245705429266c5c8d0684ef1079e0013aea7a7ec269c4efda4d4c30b8fb998148dd8055b2f5852b0a4d6bd2b9694c7b42d0b74abb4b1451955c47d3917051bfcb7962c2b8c84abae8efca4be2bae42e7b24b156ca182cc9f9c5a739e3f735691071ddae17b2820db21bc78a52a7942ae4da24b7299d8528a4b86e6a24447b741a071553a7397f6b4e346966626eb2a29fa6d6ec50da849fd1ee72c10ddb5faedfc72032691959b375818c265642da747aa78f83dc257f9699ef3db8bf958c6642da4b9a1107876b075e3bac27c1594305a4eda436c25d419b8a030d6288a94dd9d6a8dcb1e8446cd18caa69de1fda9fcaad793959d04f2b207bef90a2d965c4d9c83b07a36f553effb425fb6efb6bd27b43c16ed8e160ddfa75aa810161fe3c099be55af7b92f2c5504ef4a3a330151723a268cc0c246447a9992330e2c18a02894bc6320fd4c5e736074562bb6392f738496afd5d8ebff8cfe552a603b94c599caa7a9f8c3fa1e8bc5260dd0281304018208ca7a54ee9308166ee12a67dcb791ddc7cbfc6fc338840fed8aac2305e666e7fe996f9782ec2852e89b3889eb54e8f399fcfa4af77cf095d48bf9b35cb54d779bb0cf45d344f56a29befcf9343559ca4c0e311d01705b9d760ffc364ccf7417c254f8149a9ea0c973bbbc91212d9aeb6282ccdcd58e9b27b17f89d48433fac35c44952db3cc41542814417500d21d931b2caa79348614c8e65a68660319118e6dda65e641f27701fad7abf4e12a606708a14b27b1c5611f4e6d762c092d51f82db8615fdb24731bfcc1075affefd038076751f5e9ba0c573cb5e0f72962f408cfc06476ab9b7deeee6f49f948ed5274aa5c0f04afba7ea9f24d64299f795cff7bf291445a8932156b5a91f76a8772390e258389a808551d3d2abe835a43fe52c36dfa087b2c727adb0f5cbf19e5ef1fed6bfc96bc5602d7df40622f918a147ba292e234c5bd55a59ef285922762f85a39dcb839fa7b496eb382a229486e09be5168530ec7c1031795c8b205417173120b7cb603abc81e6b9265d734dba3d09adf01a8eecc7f11b890f53ae8cfb94f88913207c88d67a6d4fb8f3419e3723996f0a5786e18038f9b52086cfdee2d148076c5715b7ec880fa7a6912eb927ebbc38456aaf8e3824043089ac17efd163e8b2cc89bc45331b26e40b8d387e46d9ae20f11babc6b2c77074d0619caed8a1cb6f5ac7cd47827c24343ed46a1fa4f49ff50a854983c432456758fe41351cc21688872cfb8c073f2429f2a2bf738cea95fff9078409c9f7f9791614878e970958e436d653127cdc357a92174453b134293f1a7018859f29ed04c67e2eb6e778113e05cb379e576489aaca26f07cabeeae6b844d2f8b19c6776425ebabb31a317f3b093a3180b52c71ae05e1410b12d2dfb3efe3b7c9bedf5c836223933529d17fad82bc9bf91edfa277b46be1fa655f78330350a83aec6f80f0bf6245dd7f18866d4006840cde2e5e6b04674962b375d81051d148a68a6ae17ee99f897ff9636d55189782b5c4c1f70dc180f20c0a11f674cd058e80bbe45749c2315c9cdf811b30dba7190ef27ab9bfc433b13d1a722504550005d3e84c5b278ed5f4daf9c25365a7d9be56a0e3c67451d7ea03e399678dc37033a26c77</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码！！！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5月总结</title>
      <link href="/posts/5537e9325ef7/"/>
      <url>/posts/5537e9325ef7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><img src="https://s3.bmp.ovh/imgs/2022/05/16/e5404ce657de463a.png" />]]></content>
      
      
      <categories>
          
          <category> 复盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客更新日志及踩坑经验总结</title>
      <link href="/posts/6033a1afd5e7/"/>
      <url>/posts/6033a1afd5e7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Hexo博客更新日志及踩坑经验总结"><a href="#Hexo博客更新日志及踩坑经验总结" class="headerlink" title="Hexo博客更新日志及踩坑经验总结"></a>Hexo博客更新日志及踩坑经验总结</h1><h2 id="博客功能"><a href="#博客功能" class="headerlink" title="博客功能"></a>博客功能</h2><ul><li><input checked="" disabled="" type="checkbox"> 基本的Blog文章更新</li><li><input checked="" disabled="" type="checkbox"> 博客文章的分类、标签、归档</li><li><input checked="" disabled="" type="checkbox"> Blog界面优化</li><li><input checked="" disabled="" type="checkbox"> 本地搜索博客功能</li><li><input checked="" disabled="" type="checkbox"> 留言功能（有点问题QAQ待完善）</li><li><input checked="" disabled="" type="checkbox"> 侧边栏时钟</li><li><input checked="" disabled="" type="checkbox"> 音乐🎵功能，可以播放网易云的歌单啦</li><li><input checked="" disabled="" type="checkbox"> 解决上线后icon不显示的问题</li><li><input checked="" disabled="" type="checkbox"> 增加了看板娘（其实是可爱的小男生）</li><li><input disabled="" type="checkbox"> SEO优化</li><li><input disabled="" type="checkbox"> 页脚徽标</li><li><input disabled="" type="checkbox"> 字体样式修改</li><li><input disabled="" type="checkbox"> 滚动的副标题</li></ul><h2 id="一些于我有用的博主文章"><a href="#一些于我有用的博主文章" class="headerlink" title="一些于我有用的博主文章"></a>一些于我有用的博主文章</h2><p> <a href="https://guole.fun/posts/butterfly-custom/">我的Blog美化日记——Hexo+Butterfly | Guo Le’s Blog</a> </p><p> <a href="https://blog.csdn.net/qq_46435629/article/details/106295515?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-106295515-blog-123481948.pc_relevant_antiscanv2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-106295515-blog-123481948.pc_relevant_antiscanv2&utm_relevant_index=6">如何在Hexo博客Butterfly主题开启Aplayer和“音乐”页面</a> </p><p> <a href="https://www.yyyzyyyz.cn/posts/2d51c9bd3490/">hexo-butterfly魔改记录大全 | Black Flies (yyyzyyyz.cn)</a> </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园二手交易平台-可行性分析报告</title>
      <link href="/posts/ca23de82c4bf/"/>
      <url>/posts/ca23de82c4bf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="校园二手交易平台-可行性分析报告"><a href="#校园二手交易平台-可行性分析报告" class="headerlink" title="校园二手交易平台-可行性分析报告"></a><strong>校园二手交易平台</strong>-可行性分析报告</h1><p><strong>编写人员：杨顺杰、魏泽弘、高时玉、赵任生、龚云基、杨笑千</strong></p><p><strong>指导老师：张大林</strong></p><p><strong>编写日期：2022.3.21</strong></p><p><strong>本说明书版权与一切解释权归蓝瞳团队所有</strong></p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h2><h3 id="1-1-编写目的"><a href="#1-1-编写目的" class="headerlink" title="1.1 编写目的"></a>1.1 编写目的</h3><p>通过对校园二手物品交易系统项目进行一系列的详细调查研究，明确了该系统项目的实现在技术、经济和社会因素方面的可行性，阐述为了合理地达到项目目标的实现报告，对软件开发中将要面临的问题及其解决方案进行可行性分析；本报告经审核后，交由项目负责人审查。</p><h3 id="1-2-背景"><a href="#1-2-背景" class="headerlink" title="1.2 背景"></a>1.2 背景</h3><h4 id="1-2-1项目名称："><a href="#1-2-1项目名称：" class="headerlink" title="1.2.1项目名称："></a>1.2.1项目名称：</h4><p>校园二手物品交易系统</p><h4 id="1-2-2项目提出者："><a href="#1-2-2项目提出者：" class="headerlink" title="1.2.2项目提出者："></a>1.2.2项目提出者：</h4><p>北交二手交易平台开发小组</p><h4 id="1-2-3用户："><a href="#1-2-3用户：" class="headerlink" title="1.2.3用户："></a>1.2.3用户：</h4><p>北交学生、教职工等</p><h4 id="1-2-4项目说明："><a href="#1-2-4项目说明：" class="headerlink" title="1.2.4项目说明："></a>1.2.4项目说明：</h4><p>目前，随着人们生活水平的提高，人们的生活物质更新速度也在不断地加快。 对于大学生群体，闲置物品繁多，很多大学生买了一件商品，但是只是使用一段时间就被闲置了，着实令人感到可惜，这些物品丢之可惜，藏之无用；但这些东西往往又是另一些学生需要用的物品。就我们的经验和调查发现，大家通常是加一些qq群、或者通过朋友圈了解到相关信息，在这样的前提下，受到互联网思维的影响，我们针对这一现状进行了分析和总结，设计了校园闲置网站，在这里，不仅可以让闲置的物品流通起来，产生价值，还可以发布信息、共享交流。项目的意义在于，支持勤俭节约；倡导互惠互利；开展爱心义卖；践行低碳环保；做到物尽其用；支持以物换物；实现智能管理（机器学习、人工智能）；达到安全平稳。</p><h3 id="1-3-定义"><a href="#1-3-定义" class="headerlink" title="1.3 定义"></a>1.3 定义</h3><p>校园二手物品交易系统：帮助大学生、教职工等有需要的群体进行二手交易的系统。</p><p>技术可行性：使用现有的技术能实现这个系统吗？</p><p>经济可行性：这个系统的经济效益能超过它的开发成本吗？</p><p>操作可行性：用户会使用系统吗？开发的时间够吗？</p><p>社会因素可行性：系统开发过程中是否设计各种合同、侵权、责任等与法律、法规吻合或抵触的问题？</p><h3 id="1-4-参考资料"><a href="#1-4-参考资料" class="headerlink" title="1.4 参考资料"></a>1.4 参考资料</h3><p>​[1]高美珍，洪家平.高校二手物品交易系统的设计与实现[J].湖北师范大学学报（自然科学版），2018，38（04）：65-69.</p><p>​[2]曲蕴慧.校园二手交易平台的构建与实现[J].电子设计工程，2014，22（06）：70-72.</p><p>​[3]庄彦，未培.基于校园网的二手交易平台构建与实践[J].集宁师范学院学报，2016，38（02）：40-43.</p><h2 id="2-可行性研究的前提"><a href="#2-可行性研究的前提" class="headerlink" title="2 可行性研究的前提"></a>2 可行性研究的前提</h2><h3 id="2-1-要求"><a href="#2-1-要求" class="headerlink" title="2.1 要求"></a>2.1 要求</h3><h4 id="2-1-1-功能要求"><a href="#2-1-1-功能要求" class="headerlink" title="2.1.1 功能要求"></a>2.1.1 功能要求</h4><p>此系统需要完成的功能主要有：用户个人信息管理、二手交易平台（发布信息，修改信息，删除信息，浏览信息，搜索信息等）、用户交流功能（发表留言，查看留言，删除留言等）、用户指南（添加二手指南，查看二手指南，修改二手指南，删除二手指南）、智能推荐。</p><h4 id="2-1-2-性能要求"><a href="#2-1-2-性能要求" class="headerlink" title="2.1.2 性能要求"></a>2.1.2 性能要求</h4><p>为了能够为用户提供充足的物品信息和快捷的处理手段，用户使用时系统要保证运行稳定、效率高，能够快速做出响应，迅速处理各项数据、信息，显示出所需信息，所以要有一定的可扩展性和灵活性，当毕业生处理闲置物品高峰期等大量人员操作时，做到节省录入时间、提高交易效率和安全性，系统要保证操作简便、快捷。</p><h4 id="2-1-3-输入要求"><a href="#2-1-3-输入要求" class="headerlink" title="2.1.3 输入要求"></a>2.1.3 输入要求</h4><p>对于卖家，需要上传物品的类型、价格、图片、完好程度等信息；对于买家，可以在物品或者卖家评论区发布自己的意见和建议。</p><h4 id="2-1-4-输出要求"><a href="#2-1-4-输出要求" class="headerlink" title="2.1.4 输出要求"></a>2.1.4 输出要求</h4><p>卖家上传的物品信息会在系统展示出来供用户挑选。界面做到简洁明了，易于操作。</p><h4 id="2-1-5-安全与保密要求"><a href="#2-1-5-安全与保密要求" class="headerlink" title="2.1.5 安全与保密要求"></a>2.1.5 安全与保密要求</h4><p>由于校园二手交易系统涉及到学生利益问题，所以系统的安全性一定是不容忽视的，系统要做到用户交易过程公平公正，并且用户的购买信息、浏览记录和个人信息等隐私可以自由选择保密，不对任何人公布。</p><h4 id="2-1-6-完成期限"><a href="#2-1-6-完成期限" class="headerlink" title="2.1.6 完成期限"></a>2.1.6 完成期限</h4><table><thead><tr><th>模块</th><th>完成期限</th></tr></thead><tbody><tr><td>用户信息模块</td><td>2022-03-27</td></tr><tr><td>交易模块</td><td>2022-04-05</td></tr><tr><td>社区模块</td><td>2022-04-06</td></tr><tr><td>展示模块</td><td>2022-04-10</td></tr><tr><td>活动模块</td><td>2022-04-28</td></tr></tbody></table><h3 id="2-2-目标"><a href="#2-2-目标" class="headerlink" title="2.2 目标"></a>2.2 目标</h3><p>（1）使用最新开发工具开发，运行稳定、效率高</p><p>（2）可扩展性和灵活性强，用户随时可以上传物品信息或者进行交易</p><p>（3）操作简便、快捷，操作逻辑缜密，明了</p><p>（4）易于维护，尽可能减轻系统维护与升级的成本和工作量</p><h3 id="2-3-条件、假定和限制"><a href="#2-3-条件、假定和限制" class="headerlink" title="2.3 条件、假定和限制"></a>2.3 条件、假定和限制</h3><p>假定开发的软件运行的最短寿命为5年，开发期和运行期各一个月；经费来源于项目小组，限制在1000元以内；硬件条件：普通PC机即可，运行环境：windows系列，数据库：MYSQL；建议软件投入使用的最迟时间是2022年6月。</p><h3 id="2-4-进行可行性研究的方法"><a href="#2-4-进行可行性研究的方法" class="headerlink" title="2.4 进行可行性研究的方法"></a>2.4 进行可行性研究的方法</h3><p>采用问卷调查的方法：经过针对性的对该项目制定出调查问卷并在相关学校进行相关调查；在调查过程中，项目组分别与学生进行了深入的交流与统计，发现他们对系统的功能等方面可能会存在的问题有很多顾虑。所以，问卷调查之后，经过小组网上会议组及时总结了调查对象的需求，提出了系统的结构分析，最后确定了解决方案。</p><h3 id="2-5-评价尺度"><a href="#2-5-评价尺度" class="headerlink" title="2.5 评价尺度"></a>2.5 评价尺度</h3><p>本项目对系统进行评价时所使用的主要尺度就是调查对象的满意程度。根据用户提出的要求，总结归纳出系统应该具有以下几点：一、系统安全性要高；二、系统运行稳定且速度要快；三、简易的操作；四、实现网络化的管理系统。</p><h2 id="3-对现有系统的分析"><a href="#3-对现有系统的分析" class="headerlink" title="3 对现有系统的分析"></a>3 对现有系统的分析</h2><h3 id="3-1-数据流程和处理流程"><a href="#3-1-数据流程和处理流程" class="headerlink" title="3.1 数据流程和处理流程"></a>3.1 数据流程和处理流程</h3><p><img src="/%E5%8F%AF%E8%A1%8C%E6%80%A7%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.assets/1647483591126.png" alt="1647483591126"></p><p><img src="/%E5%8F%AF%E8%A1%8C%E6%80%A7%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.assets/1647483600024.png" alt="1647483600024"></p><p><img src="/%E5%8F%AF%E8%A1%8C%E6%80%A7%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.assets/1647483620846.png" alt="1647483620846"></p><p><img src="/%E5%8F%AF%E8%A1%8C%E6%80%A7%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.assets/1647483630850.png" alt="1647483630850"></p><h3 id="3-2-工作负荷"><a href="#3-2-工作负荷" class="headerlink" title="3.2 工作负荷"></a>3.2 工作负荷</h3><p>1.要实现一个完备的平台开发是一个漫长的过程，这个过程包含着产品的完整开发周期，产品测试，和后期的维护，面对如此大的工作量，我们将面对着人手不够，资金短缺等难题。</p><p>2.系统开发完成后，如何进行推广是一个很大的问题，如今市场上有着很多的相似的产品，如何让我们的产品脱颖而出是一个难题，我们决定从校园出发，在各大高校的微信群和QQ群出发进行推广，这也是一个巨大的工作量。</p><h3 id="3-3-费用开支"><a href="#3-3-费用开支" class="headerlink" title="3.3 费用开支"></a>3.3 费用开支</h3><table><thead><tr><th>开发活动</th><th>预计费用</th></tr></thead><tbody><tr><td>平台开发</td><td>100元</td></tr><tr><td>团队学习</td><td>100元</td></tr><tr><td>开发工具</td><td>100元</td></tr><tr><td>平台推广</td><td>200元</td></tr><tr><td>团队人员补贴</td><td>600元（100&#x2F;人）</td></tr></tbody></table><h3 id="3-4-人员"><a href="#3-4-人员" class="headerlink" title="3.4 人员"></a>3.4 人员</h3><table><thead><tr><th>项目模块</th><th>开发人员</th><th>实现功能</th></tr></thead><tbody><tr><td>用户信息模块</td><td>高时玉</td><td>搜索信息、浏览信息、删除信息、修改信息、发布消息</td></tr><tr><td>交易模块</td><td>杨顺杰、魏泽弘</td><td>用户注册、用户登录、用户密码管理、平台搭建、支付组件</td></tr><tr><td>活动模块</td><td>赵任生</td><td>以物易物、二手物品捐赠、义卖活动</td></tr><tr><td>展示模块</td><td>杨笑千</td><td>智能推荐、视频展示、独家活动、用户指南</td></tr><tr><td>社区模块</td><td>龚云基</td><td>留言管理、动态管理、社交群聊、评论管理</td></tr></tbody></table><h3 id="3-5-设备"><a href="#3-5-设备" class="headerlink" title="3.5 设备"></a>3.5 设备</h3><p>我们的系统准备开发成web端，因此需要用户拥有可以进行访问的设备，当然这在学生群体中是很简单实现的。</p><p>目前我们的开发设备有六台笔记本电脑，配有专业的开发软件，可以实现系统的开发、测试、维护。</p><p>但是在开发的后期可能会缺乏一些其他的开发或者推广的设备。</p><h3 id="3-6-局限性"><a href="#3-6-局限性" class="headerlink" title="3.6 局限性"></a>3.6 局限性</h3><table><thead><tr><th>局限</th><th>原因</th><th>解决方案</th></tr></thead><tbody><tr><td>web端过于单一，不利于推广</td><td>大学生们习惯于使用手机，更愿意使用APP</td><td>将我们的产品开发成多种形式</td></tr><tr><td>功能不够全面</td><td>开发时间短，开发人手不够</td><td>适当地延长开发周期</td></tr><tr><td>推广十分困难</td><td>市场存在相似产品，产品优势不够大</td><td>尽量让产品具有竞争性</td></tr><tr><td>开发资金短缺</td><td>开发团队为6名在校大学生</td><td>寻求赞助</td></tr></tbody></table><h2 id="4-所建议的系统"><a href="#4-所建议的系统" class="headerlink" title="4 所建议的系统"></a>4 所建议的系统</h2><h3 id="4-1-对所建议系统的说明"><a href="#4-1-对所建议系统的说明" class="headerlink" title="4.1 对所建议系统的说明"></a>4.1 对所建议系统的说明</h3><h4 id="4-1-1产品及服务"><a href="#4-1-1产品及服务" class="headerlink" title="4.1.1产品及服务"></a>4.1.1产品及服务</h4><p>​通过校园二手物品交易网站满足学生对二手物品的买卖需求，方便学生的日常生活。校园二手交易平台提供一个买卖双方对物品交易的协商平台。</p><h4 id="4-1-2开发交友平台"><a href="#4-1-2开发交友平台" class="headerlink" title="4.1.2开发交友平台"></a>4.1.2开发交友平台</h4><p>​具备发布信息，浏览信息，买卖双方交流，系统管理员整合信息功能。</p><h4 id="4-1-3-系统管理"><a href="#4-1-3-系统管理" class="headerlink" title="4.1.3.系统管理"></a>4.1.3.系统管理</h4><p>​管理员可以对物品信息和用户进行管理，可以发布公告，更新用户信息。同时对长久未能出售的物品进行清除。</p><h4 id="4-1-4-用户使用"><a href="#4-1-4-用户使用" class="headerlink" title="4.1.4.用户使用"></a>4.1.4.用户使用</h4><p>​学生每人可以用手机号注册一个账号，登陆进入个人界面，管理自己的出售和购入信息。卖家对自己的产品进行描述，发布出售信息。</p><h4 id="4-1-5-目标市场"><a href="#4-1-5-目标市场" class="headerlink" title="4.1.5.目标市场"></a>4.1.5.目标市场</h4><table><thead><tr><th align="left">目标市场</th><th>市场需求</th></tr></thead><tbody><tr><td align="left">大学生</td><td>随着年级的更换，积留一些无用而又占用空间的课本、笔记</td></tr><tr><td align="left">大学生</td><td>即将毕业的大学生需要处理一些无用的生活用品</td></tr><tr><td align="left">大学生</td><td>剁手族在狂欢后常常发现所买物品不符合自身需求</td></tr><tr><td align="left">大学生</td><td>平时的一些小创意希望出手</td></tr><tr><td align="left">大学生</td><td>希望通过交换账号，体验游戏的新装备</td></tr><tr><td align="left">教师及其家属</td><td>对一些普通的生活用品有需求</td></tr></tbody></table><h3 id="4-2-数据流程和处理流程"><a href="#4-2-数据流程和处理流程" class="headerlink" title="4.2 数据流程和处理流程"></a>4.2 数据流程和处理流程</h3><h3 id="4-3-改进之处"><a href="#4-3-改进之处" class="headerlink" title="4.3 改进之处"></a>4.3 改进之处</h3><p>系统被开发成Web端、APP端、小程序端，但是三者极具有相似度，并不能很好地体现出每个形式的优势，应当针对不同的形式进行改进，发挥出每个形式的优势。</p><h3 id="4-4-影响"><a href="#4-4-影响" class="headerlink" title="4.4 影响"></a>4.4 影响</h3><p>通过我们的二手交易平台，学生们的闲置二手物品可以得到很好的利用，不仅响应的国家的绿色的政策，也有利于学生们的生活，不仅仅使自己的物品得到了再次利用，也降低了自己的生活成本，一举两得。</p><h3 id="4-5-局限性"><a href="#4-5-局限性" class="headerlink" title="4.5 局限性"></a>4.5 局限性</h3><p>随着对系统的改进，让我们的工作量增加了许多，所以依旧有着以下的局限性。</p><table><thead><tr><th>局限</th><th>原因</th><th>解决方案</th></tr></thead><tbody><tr><td>推广十分困难</td><td>市场存在相似产品，产品优势不够大</td><td>尽量让产品具有竞争性</td></tr><tr><td>开发资金短缺</td><td>开发团队为6名在校大学生</td><td>寻求赞助</td></tr><tr><td>开发难度大</td><td>系统完善后工作量增加</td><td>适当地延长开发周期</td></tr></tbody></table><h3 id="4-6-技术条件方面的可行性"><a href="#4-6-技术条件方面的可行性" class="headerlink" title="4.6 技术条件方面的可行性"></a>4.6 技术条件方面的可行性</h3><p>1.我们的团队是具有相关的软件开发知识的，且具有相关的开发设备，具有开发这个系统的能力。</p><p>2.线下的推广，我们会有专门的人员去负责二手商品信息的收集，然后将它们进行整合、分类。将它们统一摆放在一个地方方便购买者前去购买，线上的推广，主要是以QQ群、微信公众号，人人网，新浪微博，贴吧等网络媒体的介入，发布我们整合的二手商品的信息，通过这些网络媒体工具进行发布。</p><h4 id="推荐系统（基于用户画像的商品推荐系统）"><a href="#推荐系统（基于用户画像的商品推荐系统）" class="headerlink" title="推荐系统（基于用户画像的商品推荐系统）"></a>推荐系统（基于用户画像的商品推荐系统）</h4><p>基于物品本身属性的推荐，与个性化是没有确定关系，推荐候选集只跟物品主体有关。</p><p>而基于用户画像（基于用户标签）的推荐，则更大程度上依赖于用户的画像属性来推荐，这就体现了用户偏好信息，根据偏好信息来选择候选集</p><p> 业务处理的逻辑是，先根据行为数据，抽取用户浏览的新闻，然后根据做浏览的新闻的标签，映射到用户，进行用户画像的构建，最后根据新闻标签结合用户画像为用户进行信息推荐。注意，这里与之前的实例不同的是，我们是基于用户进行推荐的，而上个实例是在浏览某个内容的时候，进行相关内容推荐，这里以及进化到了根据人进行推荐了。 </p><p>市面上已经有很成熟的基于用户画像的推荐系统。</p><h4 id="用户管理系统"><a href="#用户管理系统" class="headerlink" title="用户管理系统"></a>用户管理系统</h4><p>该项目采用mysql数据库存储用户，物品信息，并且实现与后端的实时交互， Mysql功能强大，支持事务、视图、存储过程、触发器等 ，并且可以跨平台使用，满足至少20种以上的开发平台，同时还支持多种语言，其数据库存储容量大， 可以轻松处理拥有上千万条记录。</p><h2 id="6-经济可行性分析"><a href="#6-经济可行性分析" class="headerlink" title="6 经济可行性分析"></a>6 经济可行性分析</h2><h3 id="6-1-支出"><a href="#6-1-支出" class="headerlink" title="6.1 支出"></a>6.1 支出</h3><p>  二手交易平台项目着重于软件的开发，成本主要表现为人力消耗，具体体现在前期软件代码的编写以及后期对平台的维护费用，由于项目复杂程度不高，代码的编写费用与后期的维护费用也不会太高。除此之外，作为一个交易平台需要系统持续运作，所以成本还应包括系统持续运行所需的费用。</p><h3 id="6-2-收益"><a href="#6-2-收益" class="headerlink" title="6.2 收益"></a>6.2 收益</h3><p>  二手交易平台的推行将使交易更加便捷，支持以物易物的方式将更加有效且环保地利用资源。同时由于其便捷、实用的属性，该平台将吸引更多学生来购买或换取自己需要的物件，极大的提升了平台竞争力。</p><p>  平台通过每单成功的交易抽取一定的手续费来持续获取非一次性收益，同时可以通过帮助个人或企业刊登相关帖子或广告来抽取一部分收益。</p><h3 id="6-3-收益-x2F-投资比"><a href="#6-3-收益-x2F-投资比" class="headerlink" title="6.3 收益&#x2F;投资比"></a>6.3 收益&#x2F;投资比</h3><p>  整个系统生命期的收益&#x2F;投资比：8&#x2F;3</p><h3 id="6-4-投资回收周期"><a href="#6-4-投资回收周期" class="headerlink" title="6.4 投资回收周期"></a>6.4 投资回收周期</h3><p> 大约3个月收益将超过支出。</p><h3 id="6-5-敏感性分析"><a href="#6-5-敏感性分析" class="headerlink" title="6.5 敏感性分析"></a>6.5 敏感性分析</h3><p>  该二手交易平台可供约100笔交易同时进行，订单数量过多，又可能造成网络拥堵。</p><h2 id="7-技术可行性分析"><a href="#7-技术可行性分析" class="headerlink" title="7 技术可行性分析"></a>7 技术可行性分析</h2><p>tip：评价技术可行性需回答下面问题：<br>系统规划所选用的技术路线及其方案是否具有可行性与合理性？<br>组织机构或开发公司是否拥有系统解决方案所需技术？<br>组织机构或开发公司是否拥有所需的技术专家？</p><h3 id="7-1主要技术路线"><a href="#7-1主要技术路线" class="headerlink" title="7.1主要技术路线"></a>7.1主要技术路线</h3><p><img src="/%E5%8F%AF%E8%A1%8C%E6%80%A7%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.assets/1647411792576.png" alt="1647411792576"></p><h3 id="7-2技术可行性分析"><a href="#7-2技术可行性分析" class="headerlink" title="7.2技术可行性分析"></a>7.2技术可行性分析</h3><h4 id="7-2-1-开发风险分析"><a href="#7-2-1-开发风险分析" class="headerlink" title="7.2.1 开发风险分析"></a>7.2.1 开发风险分析</h4><p>​    由于疫情的影响，线下交易变得难以实现，更加便捷且支持以物换物的线上二手交易平台将更具有竞争力，风险性极小。</p><h4 id="7-2-2-资源分析"><a href="#7-2-2-资源分析" class="headerlink" title="7.2.2 资源分析"></a>7.2.2 资源分析</h4><p>​    二手交易平台项目着重于软件的开发，几乎只消耗人力资源，而项目体量不大，组内成员已满足人力资源需要，主要负责项目初期的代码编写以及后期的维护和优化。在规定期限内，能够完成该平台的开发。</p><h4 id="7-2-3-相关技术应用"><a href="#7-2-3-相关技术应用" class="headerlink" title="7.2.3 相关技术应用"></a>7.2.3 相关技术应用</h4><p>​    该项目主要利用 html，CSS 和 JavaScript 技术开发，并运用了SQL sever语言。</p><h2 id="8-进度可行性分析"><a href="#8-进度可行性分析" class="headerlink" title="8 进度可行性分析"></a>8 进度可行性分析</h2><h3 id="8-1项目工期评估"><a href="#8-1项目工期评估" class="headerlink" title="8.1项目工期评估"></a>8.1项目工期评估</h3><p>​项目工期评估具体如下图所示：</p><p><img src="/%E5%8F%AF%E8%A1%8C%E6%80%A7%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A.assets/1647426444568.png" alt="1647426444568"></p><h3 id="8-2项目进度可行性分析"><a href="#8-2项目进度可行性分析" class="headerlink" title="8.2项目进度可行性分析"></a>8.2项目进度可行性分析</h3><p>我们在安排本项目总进度计划时，考虑用时55天完成计划进度内的所有项目任务，我们同时亦对各节点进度完成时间提出了较高的要求，进行了细致的划分，具体到每一个小任务，最后在进行汇总整合，根据我们团队以往同类型项目的工作经验，在这些节点进度时间内团队成员完成各自的分配任务是完全可能并且肯定可以完成的。</p><h2 id="9-社会可行性分析"><a href="#9-社会可行性分析" class="headerlink" title="9 社会可行性分析"></a>9 社会可行性分析</h2><h3 id="9-1社会法律政策可行性"><a href="#9-1社会法律政策可行性" class="headerlink" title="9.1社会法律政策可行性"></a>9.1社会法律政策可行性</h3><p>​该系统规划所建设信息系统与投入运行完全符合国家政策与法律，通过信息加密，后台储存等手段确保信息系统的使用可以很好地保护组织机构的信息安全与用户隐私保护，没有如合同责任、侵犯专利权、侵犯版权等方面的非法违法行为。</p><h3 id="9-2社会公共环境可行性"><a href="#9-2社会公共环境可行性" class="headerlink" title="9.2社会公共环境可行性"></a>9.2社会公共环境可行性</h3><p>​该系统从行政管理、工作制度等方面来看，社会大众都能够使用该软件系统，从工作人员的素质来看，能满足使用该软件系统的社会安全要求，同时该信息系统的使用严格遵从工程伦理道德规范，确保全心全意服务社会，为社会进步保驾护航。</p><h3 id="9-3操作可行性"><a href="#9-3操作可行性" class="headerlink" title="9.3操作可行性"></a>9.3操作可行性</h3><p>​该信息系统聚焦于校园二手物品的交易，需求量很大，需要一个合格规范的平台系统去合理安全地组织二手物品的交易活动，可以在用户实际业务处理中方便的、有效的解决领域问题。</p><p>​该信息系统将校园内二手物品的交易统计在一起，方便买家对比，选择更合心意的物品，同时便于卖家放心交易二手物品，可以有效提高用户的工作效率，提升二手交易活动的质量和服务质量。</p><p>​该信息系统具有很好的操作可行性，后续可以推广到其他校园或者社区，可以在组织机构不同部门广泛应用和行业推广。</p><h2 id="10-结论"><a href="#10-结论" class="headerlink" title="10 结论"></a>10 结论</h2><h3 id="10-1可行性结论"><a href="#10-1可行性结论" class="headerlink" title="10.1可行性结论"></a>10.1可行性结论</h3><p>  通过上述分析，该项目可以开始执行。</p><h3 id="10-2结论的解释"><a href="#10-2结论的解释" class="headerlink" title="10.2结论的解释"></a>10.2结论的解释</h3><p>  经济方面，该项目建设所需开销的经费不高，将在3个月左右被系统投入运行后所产生的经济效益所补充；技术方面，项目开发风险小，资源足够支持项目开发，且小组成员已能熟练应用项目开发所需的语言以及技术；同时该项目进度安排合理，时间充裕，符合各类法律法规。综上，该项目具有很好的可行性。</p>]]></content>
      
      
      <categories>
          
          <category> 软件系统构思综合训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园二手交易平台-项目开发计划</title>
      <link href="/posts/2e6a2d0c4fcd/"/>
      <url>/posts/2e6a2d0c4fcd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="校园二手交易平台-项目开发计划"><a href="#校园二手交易平台-项目开发计划" class="headerlink" title="校园二手交易平台-项目开发计划"></a><strong>校园二手交易平台</strong>-项目开发计划</h1><p><strong>编写人员：杨顺杰、魏泽弘、高时玉、赵任生、龚云基、杨笑千</strong></p><p><strong>指导老师：张大林</strong></p><p><strong>编写日期：2022.3.10</strong></p><p><strong>本说明书版权与一切解释权归蓝瞳团队所有</strong></p><h2 id="具体项目"><a href="#具体项目" class="headerlink" title="具体项目"></a>具体项目</h2><p>项目名称：校园二手物品交易系统（校园在线跳蚤市场）<br>项目目的和意义：支持勤俭节约；倡导互惠互利；开展爱心义卖；践行低碳环保；做到物尽其用；支持以物换物；实现智能管理（机器学习、人工智能）；达到安全平稳。</p><h2 id="1、引言"><a href="#1、引言" class="headerlink" title="1、引言"></a>1、引言</h2><h3 id="1-1编写目的"><a href="#1-1编写目的" class="headerlink" title="1.1编写目的"></a>1.1编写目的</h3><p>​    此项目开发计划书的编写主要是为“校园二手物品交易系统”做主要的规划和整合，在开发过程中起到引导作用，保证项目团队按时保质地完成项目目标，便于项目团队成员更好地了解项目情况，使项目工作开展的各个过程合理有序，以文件化的形式，把对于在项目生存周期内的工作任务范围、各项工作的任务分解、项目团队组织结构、各团队成员的工作责任、团队内外沟通协作方式、开发进度、风险对策等内容做出的安排以书面的方式，作为项目团队成员以及项目干系人之间的共识与约定，它又是项目生命周期内的所有项目活动的行动基础、项目团队开展和检查项目工作的依据。</p><h3 id="1-2背景"><a href="#1-2背景" class="headerlink" title="1.2背景"></a>1.2背景</h3><p>​随着网络技术的不断更新，网上交易在现代人的生活中越来越常见，我们生活环境的变化与人们日益增长的需求不断推动着电子商务的发展。现在学生闲置的物品种类繁多，有些东西闲置在宿舍很占空间，丢掉的话却又是对资源的一种浪费，中不乏书籍资料、电子设备、生活用品这些高度重复利用的物品，并且高校学生有很强的流动性，使得高校二手市场有着庞大的需求。所以我们决定借助于方便快捷并且成本低的网络开发一个校园闲置资源交换交易信息平台，这个平台不仅能解决同学们闲置物品的交换同时也支持专业技能和学习资料信息之间的交换。并且这个平台也可以作为一个栏目挂放在学校首页上，这样不仅解决了同学们闲置物品的交换和购物需求，也加强了各个专业同学之间的交流。近年来，我国经济快速发展，人民生活水平有了很大的提高，大学生的生活费也有所提高，每月可支配资金普遍可达到1500元以上，但是物价也随之上涨了，除去每个月的固定生活必需品支出，也所剩无几。<br>​据中国考试网（<a href="http://www.chinazhaokao.com)报告频道为大家整理的《大学生消费水平分析》所知大学生一个月的消费水平分析,每月消费550元900元以及900元1400元的占大多数,仅有少数大学生每月消费为1400元以上.可见,现在大学生一个月的生活费还是比较宽裕的,但不足以支撑他们强大的消费需求,一些较为贵重的物品还是无法靠自己的生活费来承担的./">www.chinazhaokao.com）报告频道为大家整理的《大学生消费水平分析》所知大学生一个月的消费水平分析，每月消费550元900元以及900元1400元的占大多数，仅有少数大学生每月消费为1400元以上。可见，现在大学生一个月的生活费还是比较宽裕的，但不足以支撑他们强大的消费需求，一些较为贵重的物品还是无法靠自己的生活费来承担的。</a><br>​很多大学生买了一件商品，但是只是使用一段时间就被闲置了，着实令人感到可惜，这些物品丢之可惜，藏之无用；但这些东西往往又是另一些学生需要用的物品。我们针对这一现状进行了分析和总结，设计了校园闲置网站，在这里，不仅可以让闲置的物品流通起来，产生价值，还可以发布信息、共享交流。<br>​目前主流的闲置物品交易平台有闲鱼、拍拍，但这些平台的用户群体很大且复杂，信息审核不够严格，所以就经常会发生用户到手的实物与卖家所描述的不相符，更严重的有买到假货，从而引发纠纷，踏上漫长的维权路。而我们的目标客户群体为在校大学生，用户交易范围最大也只到学校，这样方便我们管理，同时利用学校已经备案的学生信息，还有我们每一次交易双方都会确认自动生成的交易合同，能够更好的保障学生之前的闲置交易，避免了很多不必要的纠纷。</p><p>1.待开发系统名称：校园二手物品交易系统</p><p>2.本项目的任务提出者、开发者、用户：</p><p>​①任务提出者：张老师</p><p>​②开发者：杨顺杰，魏泽弘，杨笑千，龚云基，赵任生，高时玉</p><p>​③用户：校园内的所有人员</p><p>3.该软件与其他系统或机构的关系：该系统的应用十分广泛，我们会考虑到其与其他系统或机构的兼容性问题</p><h3 id="1-3定义"><a href="#1-3定义" class="headerlink" title="1.3定义"></a>1.3定义</h3><p>暂无，待后续补充</p><h3 id="1-4参考资料"><a href="#1-4参考资料" class="headerlink" title="1.4参考资料"></a>1.4参考资料</h3><p>​[1]高美珍，洪家平.高校二手物品交易系统的设计与实现[J].湖北师范大学学报（自然科学版），2018，38（04）：65-69.</p><p>​[2]曲蕴慧.校园二手交易平台的构建与实现[J].电子设计工程，2014，22（06）：70-72.</p><p>​[3]庄彦，未培.基于校园网的二手交易平台构建与实践[J].集宁师范学院学报，2016，38（02）：40-43.</p><h2 id="2、项目概述"><a href="#2、项目概述" class="headerlink" title="2、项目概述"></a>2、项目概述</h2><h3 id="2-1-项目目标"><a href="#2-1-项目目标" class="headerlink" title="2.1 项目目标"></a>2.1 项目目标</h3><p><strong>总体目标:</strong>   我们主要提供一个校园二手物品交易平台。我们可以将收集的需要出售的二手物品，进行整合、分类以供需要购买二手物品的同学方便购买。校园二手物品交易平台为在校学生提供一个供需平台,学生可以将自己不用的东西放到我们这里也可在固定的地方找到自己需要的东西物美价廉,达到双赢。我们的宗旨是全心全意服务学生、方便学生。诚待在校学生积极参与，帮助自己，帮助他人。</p><p><strong>我们的项目将实现以下部分：</strong></p><table><thead><tr><th>项目模块</th><th>实现功能</th><th>预期结果</th></tr></thead><tbody><tr><td>信息展示模块</td><td>平台首页展示现有的二手物品</td><td>平台二手物品首页可以完整的具有一定美观的展示二手物品</td></tr><tr><td>信息收集模块</td><td>可以让用户进行二手物品信息的发布</td><td>用户可以便捷地发布自己想要出售的二手物品</td></tr><tr><td>用户交流模块</td><td>可以让买方和卖方进行交流</td><td>买卖双方可以围绕想要交易的二手物品进行交流，并且有效的保护双方的隐私</td></tr><tr><td>购物交易模块</td><td>买卖双方进行交易</td><td>买卖双方可以安全地进行交易，支付方式可以结合微信支付与支付宝支付等支付方式</td></tr><tr><td>用户管理模块</td><td>用户对自己的信息进行管理</td><td>用户可以进行注册，登录，和对自己的基本信息进行修改等</td></tr></tbody></table><h3 id="2-2项目范围"><a href="#2-2项目范围" class="headerlink" title="2.2项目范围"></a>2.2项目范围</h3><table><thead><tr><th>项目目标</th><th>项目任务</th><th>所需工时</th></tr></thead><tbody><tr><td>校园二手平台的搭建</td><td>设计一个美观实用的校园二手平台的网页端</td><td>一周</td></tr><tr><td>支付安全的保护</td><td>采取微信支付和支付宝的支付方式等安全支付方式</td><td>一天至两天</td></tr><tr><td>用户的隐私保护</td><td>采取一定的措施来保护用户的信息以确定用户的隐私不被暴露</td><td>一天至两天</td></tr><tr><td>项目的推广</td><td>在各大高校的微信群与QQ群里进行推广，或者与各大高校进行合作推广</td><td>贯穿整个开发过程</td></tr></tbody></table><h3 id="2-3假设和约束"><a href="#2-3假设和约束" class="headerlink" title="2.3假设和约束"></a>2.3假设和约束</h3><table><thead><tr><th>约束</th><th>具体内容</th></tr></thead><tbody><tr><td>时间约束</td><td>本次项目的开发需要在课程要求提交的时间之前完成并加以完善</td></tr><tr><td>人员约束</td><td>需要由六名组员分工合作，独立完成</td></tr><tr><td>财力约束</td><td>本次项目的开发的预算和后续资源的经济来源是由六名组员共同承担，花费需要在组员承受范围之内</td></tr><tr><td>设备约束</td><td>项目需要在装有Window10系统的笔记本电脑上完成</td></tr><tr><td>建议开发软件运行的最短寿命</td><td>两年</td></tr><tr><td>建议开发软件投入使用的最迟时间</td><td>开发完成后试运行1个月</td></tr><tr><td>进行系统方案选择比较的时间</td><td>一个月</td></tr><tr><td>可利用的信息和资源</td><td>各大平台的二手交易信息，包括微信群、QQ群等</td></tr></tbody></table><h3 id="2-4应交付的成果"><a href="#2-4应交付的成果" class="headerlink" title="2.4应交付的成果"></a>2.4应交付的成果</h3><h4 id="2-4-1程序：列出程序名称，编程语言，存储形式"><a href="#2-4-1程序：列出程序名称，编程语言，存储形式" class="headerlink" title="2.4.1程序：列出程序名称，编程语言，存储形式"></a>2.4.1程序：列出程序名称，编程语言，存储形式</h4><table><thead><tr><th>程序名称</th><th>编程语言</th><th>存储形式</th></tr></thead><tbody><tr><td>北交跳蚤市场智能平台</td><td>html、css、JavaScript</td><td>mysql存储用户账户密码，以及操作历史</td></tr></tbody></table><h4 id="2-4-2文档"><a href="#2-4-2文档" class="headerlink" title="2.4.2文档"></a>2.4.2文档</h4><table><thead><tr><th><span style="display:inline-block;width: 120px"> 文档 </span></th><th><span style="display:inline-block;width: 120px"> 面向对象 </span></th><th>具体要求</th></tr></thead><tbody><tr><td>需求规格说明书</td><td>业务人员、用户</td><td>对所开发软件的功能、性能、用户界面及运行环境等作出详细的说明。它是在用户与开发人员双方对软件需求取得共同理解并达成协议的条件下编写的，也是实施开发工作的基础。该说明书应给出数据逻辑和数据采集的各项要求，为生成和维护系统数据文件做好准备</td></tr><tr><td>概要设计说明书</td><td>设计、开发人员</td><td>该说明书是概要实际阶段的工作成果，它应说明功能分配、模块划分、程序的总体结构、输入输出以及接口设计、运行设计、数据结构设计和出错处理设计等，为详细设计提供基础</td></tr><tr><td>详细设计说明书</td><td>设计、开发人员</td><td>着重描述每一模块是怎样实现的，包括实现算法、逻辑流程等。</td></tr><tr><td>可行性研究报告</td><td>设计、开发人员</td><td>说明该软件开发项目的实现在技术上、经济上和社会因素上的可行性，评述为了合理地达到开发目标可供选择的各种可能实施方案，说明并论证所选定实施方案的理由</td></tr><tr><td>项目开发计划</td><td>设计、开发人员、用户</td><td>为软件项目实施方案制订出具体计划，应该包括各部分工作的负责人员、开发的进度、开发经费的预算、所需的硬件及软件资源等。</td></tr><tr><td>开发进度月报</td><td>设计、开发人员</td><td>该月报系软件人员按月向管理部门提交的项目进展情况报告，报告应包括进度计划与实际执行情况的比较、阶段成果、遇到的问题和解决的办法以及下个月的打算等</td></tr><tr><td>用户操作手册</td><td>用户</td><td>本手册详细描述软件的功能、性能和用户界面，使用户对如何使用该软件得到具体的了解,为操作人员提供该软件各种运行情况的有关知识，特别是操作方法的具体细节。</td></tr><tr><td>产品测试文档</td><td>设计、开发人员</td><td>为做好集成测试和验收测试，需为如何组织测试制订实施计划。计划应包括测试的内容、进度、条件、人员、测试用例的选取原则、测试结果允许的偏差范围等</td></tr><tr><td>测试分析报告</td><td>设计、开发人员</td><td>测试工作完成以后，应提交测试计划执行情况的说明，对测试结果加以分析，并提出测试的结论意见。</td></tr><tr><td>项目开发总结报告</td><td>设计、开发人员</td><td>软件项目开发完成以后，应与项目实施计划对照，总结实际执行的情况，如进度、成果、资源利用、成本和投入的人力，此外，还需对开发工作做出评价，总结出经验和教训。</td></tr></tbody></table><h4 id="2-4-3服务"><a href="#2-4-3服务" class="headerlink" title="2.4.3服务"></a>2.4.3服务</h4><table><thead><tr><th><span style="display:inline-block;width: 120px"> 服务 </span></th><th><span style="display:inline-block;width: 60px"> 优先级 </span></th><th>具体内容</th></tr></thead><tbody><tr><td>用户注册</td><td>1</td><td>学生可利用自已学号进行注册，注册实现实名制</td></tr><tr><td>用户登录</td><td>1</td><td>只有登录用户才能进行信息发布。管理员登录后可以进行系统管理</td></tr><tr><td>发布信息</td><td>1</td><td>普通用户和管理员登录后都可以发布信息</td></tr><tr><td>修改信息</td><td>1</td><td>普通用户可以修改自己发布的信息，管理员可以修改所有信息</td></tr><tr><td>删除信息</td><td>1</td><td>普通用户可以删除自己发布的信息，管理员可以删除所有信息</td></tr><tr><td>浏览信息</td><td>1</td><td>游客、普通用户和管理员可以浏览所有发布的信息</td></tr><tr><td>搜索信息</td><td>1</td><td>游客、普通用户和管理员可以用关键字搜索所有发布的信息。普通用户可以搜索自己发布的所有信息</td></tr><tr><td>发表留言</td><td>1</td><td>普通用户和管理员登录后都可以对发布信息进行留言</td></tr><tr><td>查看留言</td><td>1</td><td>游客、普通用户和管理员都可以查看发布信息的留言</td></tr><tr><td>删除留言</td><td>1</td><td>管理员可以删除留言</td></tr><tr><td>添加二手指南</td><td>1</td><td>管理员可以添加二手指南</td></tr><tr><td>查看二手指南</td><td>1</td><td>游客、普通用户和管理员都可以查看二手指南</td></tr><tr><td>修改二手指南</td><td>1</td><td>管理员可以修改二手指南</td></tr><tr><td>删除二手指南</td><td>1</td><td>管理员可以删除二手指南</td></tr><tr><td>私信交流</td><td>1</td><td>用户之间可以相互私信交流</td></tr><tr><td>智能推荐</td><td>2</td><td>智能推荐用户喜欢的产品</td></tr><tr><td>图像识别</td><td>3</td><td>自动识别客户上传的图片</td></tr><tr><td>社区交流</td><td>3</td><td>用户可以在社区当中发帖交流</td></tr><tr><td>爱心公益</td><td>3</td><td>用户可以将自己不需要的物品进行爱心捐献</td></tr></tbody></table><h4 id="2-4-4验收标准和验收方式"><a href="#2-4-4验收标准和验收方式" class="headerlink" title="2.4.4验收标准和验收方式"></a>2.4.4验收标准和验收方式</h4><table><thead><tr><th><span style="display:inline-block;width: 100px"> 验收标准 </span></th><th>验收方式</th></tr></thead><tbody><tr><td>功能项测试</td><td>由第三方测试公司对软件需求规格说明书中所有功能进行测试</td></tr><tr><td>业务流程测试</td><td>由第三方测试公司对软件项目的典型业务流程进行测试</td></tr><tr><td>容错测试</td><td>由第三方测试公司对用户常见的误操作，软件错误进行测试是否有明确的容错提示</td></tr><tr><td>安全性测试</td><td>由第三方测试公司对软件安全性进行分析，包括软件密钥是否以密文方式存储，软件是否保存用户的操作日志</td></tr><tr><td>性能测试</td><td>由第三方测试公司对软件需求规格说明书中的性能介绍进行测试</td></tr></tbody></table><h4 id="2-4-5完成项目最后期限及批准日期"><a href="#2-4-5完成项目最后期限及批准日期" class="headerlink" title="2.4.5完成项目最后期限及批准日期"></a>2.4.5完成项目最后期限及批准日期</h4><table><thead><tr><th>最后期限</th><th>批准时间</th></tr></thead><tbody><tr><td>2022.5.21</td><td>待定</td></tr></tbody></table><h2 id="3、项目团队结构和角色分工"><a href="#3、项目团队结构和角色分工" class="headerlink" title="3、项目团队结构和角色分工"></a>3、项目团队结构和角色分工</h2><table><thead><tr><th align="center"><span style="display:inline-block;width: 90px"> 角色 </span></th><th align="center"><span style="display:inline-block;width: 70px"> 成员 </span></th><th>职责</th></tr></thead><tbody><tr><td align="center">项目组长</td><td align="center">杨顺杰</td><td>激励成员工作、主持周例会、分配工作、维护资料、组织项目总结</td></tr><tr><td align="center">计划经理</td><td align="center">龚云基</td><td>开发完整准确的团队计划和个人计划。每周准确报告项目小组状态、数据翔实</td></tr><tr><td align="center">开发经理</td><td align="center">杨笑千</td><td>带领小组开发计划、带领小组平衡计划、跟踪项目进度、参与项目总结</td></tr><tr><td align="center">质量经理</td><td align="center">高时玉</td><td>带领制定开发策略、带领开展产品规模估算、时间资源估算、带领制定需求规格说明书、带领概要设计、设计说明书、实现产品、测试、用户支持文档</td></tr><tr><td align="center">支持经理</td><td align="center">赵任生</td><td>领导和管理售前、售后技术团队，制定并不断完善技术支持方案； 大型项目的实施安排及指导，重大项目的技术支持； 配合技术和研发部门分析并解决疑难问题； 收集公司产品与技术部的资料，负责相关人员的技术培训。</td></tr><tr><td align="center">过程经理</td><td align="center">魏泽弘</td><td>完善制程质量数据统计和分析,评估各工序及设备过程能力,对异常进行分析并制定改进方案; 贯彻执行质量体系,确保生产过程中的质量问题能得到及时的解决。</td></tr></tbody></table><h2 id="4、计划与进度"><a href="#4、计划与进度" class="headerlink" title="4、计划与进度"></a>4、计划与进度</h2><table><thead><tr><th align="center">需求</th><th align="left">任务</th><th align="center">预估工时&#x2F;h</th><th align="center">预定日期</th><th align="center">完成日期</th><th align="center">优先级</th><th align="center">里程碑</th></tr></thead><tbody><tr><td align="center">用户登录功能</td><td align="left">用户通过账号、手机、微信或者qq等进行账号登陆，可以实现密码的修改和找回</td><td align="center">3</td><td align="center">2022.3.15</td><td align="center">2022.3.17</td><td align="center">中等</td><td align="center">实现登陆验证</td></tr><tr><td align="center">用户注册功能</td><td align="left">用户通过账号、手机、微信或者qq等进行账号注册</td><td align="center">3</td><td align="center">2022.3.16</td><td align="center">2022.3.18</td><td align="center">中等</td><td align="center">实现手机账号注册等</td></tr><tr><td align="center">二手交易</td><td align="left">发布信息：普通用户和管理员登录后都可以发布信息<br/>修改信息：普通用户可以修改自己发布的信息，管理员可以修改所有信息<br/>删除信息：普通用户可以删除自己发布的信息，管理员可以删除所有信息<br/>浏览信息：游客、普通用户和管理员可以浏览所有发布的信息<br/>搜索信息：游客、普通用户和管理员可以用关键字搜索所有发布的信息。普通用户可以搜索自己发布的所有信息</td><td align="center">15</td><td align="center">2022.3.20</td><td align="center">2022.4.15</td><td align="center">高</td><td align="center">实现基本的交易功能</td></tr><tr><td align="center">用户交流</td><td align="left">发表留言：普通用户和管理员登录后都可以对发布信息进行留言<br/>查看留言：游客、普通用户和管理员都可以查看发布信息的留言<br/>删除留言：管理员可以删除留言</td><td align="center">6</td><td align="center">2022.4.15</td><td align="center">2022.4.20</td><td align="center">中等</td><td align="center">实现用户留言功能</td></tr><tr><td align="center">用户指南</td><td align="left">添加二手指南：管理员可以添加二手指南<br/>查看二手指南：游客、普通用户和管理员都可以查看二手指南<br/>修改二手指南：管理员可以修改二手指南<br/>删除二手指南：管理员可以删除二手指南</td><td align="center">6</td><td align="center">2022.4.21</td><td align="center">2022.4.25</td><td align="center">低</td><td align="center">用户可使用二手指南</td></tr><tr><td align="center">智能推荐</td><td align="left">搜集用户点击信息<br/>实现推荐算法获得推荐商品<br/>将商品信息推荐到用户首页</td><td align="center">8</td><td align="center">2022.4.13</td><td align="center">2022.4.25</td><td align="center">高</td><td align="center">首页自动推荐用户商品信息</td></tr><tr><td align="center">独家活动</td><td align="left">社区交流，促进二手交易进行<br/>爱心公益，用户可以登记捐献的物品，将其捐献给有需要的人</td><td align="center">8</td><td align="center">2022.4.23</td><td align="center">2022.4.28</td><td align="center">中等</td><td align="center">活动界面完善</td></tr></tbody></table><h2 id="5、支持条件"><a href="#5、支持条件" class="headerlink" title="5、支持条件"></a>5、支持条件</h2><table><thead><tr><th align="center">支持条件</th><th align="center">数量</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">阿里云服务器</td><td align="center">1</td><td align="center">为平台提供稳定的服务器</td></tr><tr><td align="center">打印机</td><td align="center">1</td><td align="center">打印项目相关材料</td></tr></tbody></table><h2 id="6、预算"><a href="#6、预算" class="headerlink" title="6、预算"></a>6、预算</h2><table><thead><tr><th align="center">用途</th><th align="center">预算&#x2F;元</th></tr></thead><tbody><tr><td align="center">前期宣传</td><td align="center">200</td></tr><tr><td align="center">服务器</td><td align="center">150</td></tr><tr><td align="center">打印相关费用</td><td align="center">50</td></tr></tbody></table><h2 id="7、关键问题"><a href="#7、关键问题" class="headerlink" title="7、关键问题"></a>7、关键问题</h2><table><thead><tr><th>关键问题</th><th>具体描述</th><th>拟解决办法</th></tr></thead><tbody><tr><td>专业基础知识不牢</td><td>本次项目开发过程中涉及知识较多，给项目开发人员带来一定的困难</td><td>对相应的知识进行学习</td></tr><tr><td>经验欠缺</td><td>小组成员开发经验不足，使项目质量难以保证</td><td>在实践过程中不断优化</td></tr><tr><td>软件性能影响</td><td>使用过程中可能由于体量等问题，使服务器出现延迟</td><td>搭建良好的配置开发环境</td></tr><tr><td>小组成员异地开发</td><td>前三周的网络教学让小组成员只能通过线上交流进行工作汇报，给协同开发带来了一定难度</td><td>定期开展小组会议，利用GitHub进行协同开发</td></tr><tr><td>系统安全问题</td><td>作为二手交易平台，涉及网络货币支付等问题，需要对用户财产以及隐私进行保障</td><td>向一些已有的交易平台进行学习，并定期对系统进行维护</td></tr><tr><td>项目成果宣发使用问题</td><td>校园二手交易系统项目完成后，在投入使用时需要让本校师生了解并愿意使用本系统</td><td>在校园各个学生平台进行宣传，并开展一定程度的线下宣传</td></tr></tbody></table><h2 id="8、各种专题计划：合同计划、培训计划、测试计划、系统安全计划等等"><a href="#8、各种专题计划：合同计划、培训计划、测试计划、系统安全计划等等" class="headerlink" title="8、各种专题计划：合同计划、培训计划、测试计划、系统安全计划等等"></a>8、各种专题计划：合同计划、培训计划、测试计划、系统安全计划等等</h2>]]></content>
      
      
      <categories>
          
          <category> 软件系统构思综合训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园二手交易平台-需求规格说明书</title>
      <link href="/posts/a5bf220480aa/"/>
      <url>/posts/a5bf220480aa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="校园二手交易平台-需求规格说明书"><a href="#校园二手交易平台-需求规格说明书" class="headerlink" title="校园二手交易平台-需求规格说明书"></a>校园二手交易平台-需求规格说明书</h1><p><strong>编写人员：杨顺杰、魏泽弘、高时玉、赵任生、龚云基、杨笑千</strong></p><p><strong>指导老师：张大林</strong></p><p><strong>编写日期：2022.3.28</strong></p><p><strong>本说明书版权与一切解释权归蓝瞳团队所有</strong></p><p>[TOC]</p><h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><h3 id="1-1-定位与目标"><a href="#1-1-定位与目标" class="headerlink" title="1.1 定位与目标"></a>1.1 定位与目标</h3><p>目前我校的校园二手交易市场多是利用超级课程表上的“跳蚤市场”以及本校的贴吧进行，两者都形成了一定的规模。但是贴吧上的交易不够规范，而超级课程表改版之后对“跳蚤市场”这一模块也不够重视，对其入口进行了更改，进入不方便了，导致流量减少，目前在上面发布交易信息的人寥寥无几。因此我们建立二手交易市场的目的是：</p><p>1、为我校师生提供一个比较规范、方便的二手交易平台。</p><p>2、为学生提供廉价、有用的二手物品。目前我校的二手交易需求还是比较旺盛的，建立校内二手交易市场，可以让校内的师生将自己闲置的教材、数码设备、体育用具、自行车甚至是自己手工制作的小装饰品等物品挂上交易市场进行交易。这样既避免了手中有闲置品的师生废弃了这些物品，又可以让有需要的师生用较低的价格获得自己需要的物品。</p><p>3、每到毕业季，毕业的学长学姐都会有大量的物品无法带离学校的，这时学长学姐们都会在固定的几天时间，在学校的某个地点将自己不需要的物品拿出来摆卖，但是由于摆卖的时间短，有很多闲置物品不能及时出售。因此建立二手交易市场可以方便毕业离校的学长学姐将自己不需要的物品早早挂上交易市场进行出售。</p><h3 id="1-2-对象"><a href="#1-2-对象" class="headerlink" title="1.2 对象"></a>1.2 对象</h3><p><strong>本《软件需求规格说明书》的预期读者是：</strong> </p><ul><li>二手交易平台平台开发经理</li><li>项目组所有人员</li><li>测试组人员</li><li>开发团队授权调阅本文档的其他人员</li></ul><h3 id="1-3-软件需求分析理论"><a href="#1-3-软件需求分析理论" class="headerlink" title="1.3 软件需求分析理论"></a><strong>1.3 软件需求分析理论</strong></h3><p>​软件需求分析是研究用户需求得到的东西，完全理解用户对软件需求的完整功能，确认用户软件功能需求， 建立可确认的、可验证的一个基本依据。软件需求分析是一个项目的开端， 也是项目实施最重要的关键点。 据有关的机构分析结果表明， 设计的软件产品存在不完整性、 不正确性等问题 <strong>80％</strong>以上是需求分析错误所导致的，而且由于需求分析错误造成根本性的功能问题尤为突出。因此，一个项目的成功软件需求分析是关键的一步。</p><h3 id="1-4-软件需求分析目标"><a href="#1-4-软件需求分析目标" class="headerlink" title="1.4 软件需求分析目标"></a><strong>1.4 软件需求分析目标</strong></h3><p>​对实现软件的功能做全面的描述，帮助用户判断实现功能的正确性、一致性和完整性，促使用户在软件设计启动之前周密地、全面地思考软件需求。了解和描述软件实现所需的全部信息，为软件设计、确认和验证提供一个基准。</p><p>​为软件管理人员进行软件成本计价和编制软件开发计划书提供依据。</p><p>​需求分析的具体内容可以归纳为六个方面： 软件的功能需求， 软件与硬件或其他外部系统接口，软件的非功能性需求， 软件的反向需求， 软件设计和实现上的限制，阅读支持信息。</p><p>​软件需求分析应尽量提供软件实现功能需求的全部信息， 使得软件设计人员和软件测试人员不再需要需求方的接触。 这就要求软件需求分析内容应正确、 完整、一致和可验证。此外，为保证软件设计质量，便于软件功能的休整和验证，软件需求表达无岔意性，具有可追踪性和可修改性。</p><h3 id="1-5-参考资料"><a href="#1-5-参考资料" class="headerlink" title="1.5 参考资料"></a>1.5 参考资料</h3><p>1、张海藩 《软件工程导论》        清华大学出版社</p><p>2、侯爱民 《面向对象分析与设计（UML）》  清华大学出版社</p><p>3、王珊  《数据库系统概论》      高等教育出版社</p><h2 id="二、需求概述"><a href="#二、需求概述" class="headerlink" title="二、需求概述"></a><strong>二、需求概述</strong></h2><h3 id="2-1-项目背景"><a href="#2-1-项目背景" class="headerlink" title="2.1 项目背景"></a><strong>2.1 项目背景</strong></h3><p>将要开发的软件名为《校园二手交易网站》，本项目的提出者是北京交通大学软件学院蓝瞳研发团队，而开发者是蓝瞳研发团队，主要用户是北京交通大学全体学生， 该软件独立于其他系统，自成一个完整的系统，应用方便。</p><h3 id="2-2-需求概述"><a href="#2-2-需求概述" class="headerlink" title="2.2 需求概述"></a><strong>2.2 需求概述</strong></h3><p>下面就对校园二手交易网站分模块进行需求分析。</p><h4 id="用户信息模块"><a href="#用户信息模块" class="headerlink" title="用户信息模块"></a>用户信息模块</h4><table><thead><tr><th><span style="display:inline-block;width: 120px">需求</span></th><th>详细分析</th></tr></thead><tbody><tr><td>注册功能</td><td>系统应该为用户提供手机号注册和邮箱注册两个方式，为用户发送验证码，并确认验证码，设置账号密码时密码隐藏显示，并且提供确认密码输入框以避免出现差错，相关协议默认未勾中，账号和用户学号绑定。</td></tr><tr><td>登录功能</td><td>系统应该为用户提供输入框可以输入账号密码进行登陆，如果密码错误显示提示，输入密码错误超过三次需要输入验证码，密码显示为隐藏</td></tr><tr><td>忘记密码</td><td>系统应该给用户手机号发送验证码，确认验证码正确过后再提供重新设置密码的机会，设置完成后，退回到登录界面</td></tr><tr><td>修改密码</td><td>系统应该与用户确认原来密码，确认密码正确过后再提供重新设置密码的机会，设置完成后，退回到登录界面</td></tr><tr><td>注销用户</td><td>系统应该弹出确认注销的窗口，并在窗口提示用户，注销用户将删除一切用户信息</td></tr></tbody></table><h4 id="展示模块"><a href="#展示模块" class="headerlink" title="展示模块"></a>展示模块</h4><table><thead><tr><th><span style="display:inline-block;width: 120px">需求</span></th><th>详细分析</th></tr></thead><tbody><tr><td>智能推荐</td><td>系统应该通过一系列最优算法为用户提供满足其需求的二手物品推荐，具体表现为通过用户类型，最近浏览的物品种类以及倾向于购买的物品种类等信息为其推荐最适合的二手物品</td></tr><tr><td>视频展示</td><td>系统应该能够稳定流畅运行，通过录制新手使用指导视频对该项目的全部功能进行一个介绍和展示，让用户可以通过视频去直观的了解该项目的使用方式，从而轻松入手购买自己心怡的二手物品。</td></tr><tr><td>独家活动</td><td>系统应该举行一些独家活动激励卖家主动出售自己不需要的二手物品，同时鼓励买家积极购买平台的二手物品，通过活动提高平台的知名度，让买家与卖家享受到平台的便利实惠，打赢信誉战。</td></tr><tr><td>用户指南</td><td>系统应该配备一本便于新用户使用的用户指南。一份精心制作、对用户友好的用户指南可谓一件必需品，其影响着客户体验的优劣程度，对于新用户来说， 用户指南能够帮助它们快速了解本产品的用法，减少自己摸索使用所花费的时间，同时提高对产品的满意度。</td></tr></tbody></table><h4 id="交易模块"><a href="#交易模块" class="headerlink" title="交易模块"></a>交易模块</h4><table><thead><tr><th><span style="display:inline-block;width: 120px">需求</span></th><th>详细分析</th><th></th></tr></thead><tbody><tr><td>搜索信息</td><td>系统应该为想要搜索特定信息的用户提供文本输入框，当在文本输入框输入搜索的信息，如好友名，物品名，历史订单，活动名等，点击“搜索”按钮后，系统应该弹出相应主页给用户。</td><td></td></tr><tr><td>删除信息</td><td>系统应该为想要删除特定信息的用户提供删除，用户可在个人主页简介处，历史订单主页，好友页面，活动页面，点击选择所要删除的特定好友、历史订单、简介等，点击“删除”按钮后，系统将从数据库中删去该信息。</td><td></td></tr></tbody></table><h4 id="活动模块"><a href="#活动模块" class="headerlink" title="活动模块"></a>活动模块</h4><table><thead><tr><th><span style="display:inline-block;width: 120px">需求</span></th><th>详细分析</th><th></th></tr></thead><tbody><tr><td>以物易物—物品登记功能</td><td>系统应该为想要交换的用户提供交易物品登记表去登记想要交换的物品的基本信息，登记完之后点击提交，如果提交成功，系统将记录所登记的物品信息，如果登记的信息中含有敏感信息，则系统不会通过用户的提交。</td><td></td></tr><tr><td>以物易物—双方联系功能</td><td>系统应该为想要进行以物易物的双方提供一个临时的聊天框，让用户双方进行交流，如果交谈的过程中出现敏感词句，系统将删除敏感语句，并对违规用户进行警告。</td><td></td></tr><tr><td>捐赠二手物品—物品登记功能</td><td>系统应该为想要捐赠的用户提供捐赠物品登记表去登记想要去捐赠的物品的基本信息，登记完之后点击提交，如果提交成功，系统将记录所登记的物品信息，如果登记的信息中含有敏感信息，则系统不会通过用户的提交。</td><td></td></tr><tr><td>捐赠二手物品—捐赠情况反馈功能</td><td>系统应该为捐赠二手物品的用户提供一个反馈的渠道，让用户可以知道自己捐赠的物品的最终的去向</td><td></td></tr><tr><td>义卖—物品登记功能</td><td>系统应该为想要义卖的用户提供义卖物品登记表去登记想要义卖的物品的基本信息，登记完之后点击提交，如果提交成功，系统将记录所登记的物品信息，如果登记的信息中含有敏感信息，则系统不会通过用户的提交。</td><td></td></tr><tr><td>义卖—捐赠情况反馈功能</td><td>系统应该为义卖的用户提供一个反馈的渠道，让用户可以知道最后义卖所卖出的金额，和这些钱的使用情况和捐赠情况。</td><td></td></tr></tbody></table><h4 id="社区模块"><a href="#社区模块" class="headerlink" title="社区模块"></a>社区模块</h4><table><thead><tr><th><span style="display:inline-block;width: 120px">需求</span></th><th>详细分析</th></tr></thead><tbody><tr><td>私信交流</td><td>系统应该在用户信息处设置私聊按钮，以供点击后可以通过发信息、图片进行相互交流</td></tr><tr><td>发布留言</td><td>系统应该在社区的帖子中添加发布留言按钮，让用户对某件商品或事务发表看法</td></tr><tr><td>查看留言</td><td>系统应该为每个进入社区的用户提供他所查看的帖子的所有留言</td></tr><tr><td>删除留言</td><td>系统应该在用户已经发布的留言下添加删除按钮，让用户可以删除自己的留言</td></tr><tr><td>社区群聊</td><td>系统应该让用户能够在社区中点击按钮创建群聊，让更多对相关话题感兴趣的用户加入聊天，通过发送消息或图片进行多人讨论</td></tr><tr><td>发布动态</td><td>系统应该支持用户通过添加图片，配写文案等方式发布自己的动态</td></tr><tr><td>删除动态</td><td>系统应该支持在用户已经发布的动态下添加删除按钮，支持用户删除自己的动态</td></tr><tr><td>动态评论</td><td>系统应该在每位用户发表的动态下添加评论功能，其他用户可以通过输入框输入个人的评论</td></tr></tbody></table><h3 id="2-3-需求获取"><a href="#2-3-需求获取" class="headerlink" title="2.3 需求获取"></a>2.3 需求获取</h3><p>采用问卷调查法，线上了解需求，根据需求做出调整，具体的问卷附在文末。</p><h2 id="三、系统功能需求"><a href="#三、系统功能需求" class="headerlink" title="三、系统功能需求"></a><strong>三、系统功能需求</strong></h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><table><thead><tr><th align="center"><span style="display:inline-block;width: 80px">概念</span></th><th>具体定义</th></tr></thead><tbody><tr><td align="center">活动图</td><td>活动图是UML用于对系统的动态行为建模的另一种常用工具，它描述活动的顺序，展现从一个活动到另一个活动的控制流。活动图在本质上是一种流程图。虽然活动图与状态图都是状态机的表现形式，但是两者还是有本质区别：活动图着重表现从一个活动到另一个活动的控制流，是内部处理驱动的流程；而状态图着重描述从一个状态到另一个状态的流程，主要有外部事件的参与。</td></tr><tr><td align="center">用例图</td><td>用例图（英语：use case diagram）是用户与系统交互的最简表示形式，展现了用户和与他相关的用例之间的关系。通过用例图，人们可以获知系统不同种类的用户和用例。用例图也经常和其他图表配合使用。</td></tr><tr><td align="center">时序图</td><td>时序图（Sequence Diagram），又名序列图、循序图，是一种UML交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。它可以表示用例的行为顺序，当执行一个用例行为时，其中的每条消息对应一个类操作或状态机中引起转换的触发事件。</td></tr><tr><td align="center">类图</td><td>类图(Class diagram)由许多（静态）说明性的模型元素（例如类、包和它们之间的关系，这些元素和它们的内容互相连接）组成。类图可以组织在（并且属于）包中，仅显示特定包中的相关内容。类图(Class diagram)是最常用的UML图，显示出类、接口以及它们之间的静态结构和关系；它用于描述系统的结构化设计。类图(Class diagram)最基本的元素是类或者接口。<br/>类图主要用在面向对象软件开发的分析和设计阶段，描述系统的静态结构。类图图示了所构建系统的所有实体、实体的内部结构以及实体之间的关系。即．类图中包含从用户的客观世界模型中抽象出来的类、类的内部结构和类与类之间的关系。它是构建其他设计模型的基础，没有类图，就没有对象图、状态图、协作图等其他UMI．动态模型图．也就无法表示系统的动态行为。类图也是面向对象编程的起点和依据。<br/>类图用于描述系统中所包含的类以及它们之间的相互关系，帮助人们简化对系统的理解，它是系统分析和设计阶段的重要产物，也是系统编码和测试的重要模型依据。</td></tr><tr><td align="center">状态图</td><td>状态图(Statechart Diagram)是描述一个实体基于事件反应的动态行为，显示了该实体如何根据当前所处的状态对不同的事件做出反应。通常我们创建一个UML状态图是为了以下的研究目的：研究类、角色、子系统、或组件的复杂行为。UML通过使用状态图来支持基于事件的模型，状态图用来来描述一个类对象在不同用例间状态的迁移。当一个用例或某个事件发生时，类对象的状态就会发生迁移，状态图有助于分析人员审核业务逻辑，以及完善静态模型。</td></tr><tr><td align="center">数据流图</td><td>数据流图或数据流程图（Data Flow Diagram），缩写为DFD。数据流图DFD是描述系统中数据流程的一种图形工具，它标志了一个系统的逻辑输入和逻辑输出，以及把逻辑输入转换逻辑输出所需的加工处理。DFD显示系统将输入和输出什么样的信息，数据如何通过系统前进以及数据将被存储在何处。它不显示关于进程计时的信息，也不显示关于进程将按顺序还是并行运行的信息，而不像传统的关注控制流的结构化流程图，或者UML活动工作流程图，它将控制流和数据流作为一个统一的模型。<br/>数据流图从数据传递和加工的角度，以图形的方式刻画数据流从输入到输出的移动变换过程。</td></tr></tbody></table><h3 id="3-1-功能总览"><a href="#3-1-功能总览" class="headerlink" title="3.1 功能总览"></a><strong>3.1 功能总览</strong></h3><table><thead><tr><th align="center"><span style="display:inline-block;width: 120px">功能</span></th><th align="left">具体内容</th></tr></thead><tbody><tr><td align="center">用户注册</td><td align="left">学生可利用自已学号进行注册，注册实现实名制</td></tr><tr><td align="center">用户登录</td><td align="left">只有登录用户才能进行信息发布。管理员登录后可以进行系统管理</td></tr><tr><td align="center">发布信息</td><td align="left">普通用户和管理员登录后都可以发布信息</td></tr><tr><td align="center">修改信息</td><td align="left">普通用户可以修改自己发布的信息，管理员可以修改所有信息</td></tr><tr><td align="center">删除信息</td><td align="left">普通用户可以删除自己发布的信息，管理员可以删除所有信息</td></tr><tr><td align="center">浏览信息</td><td align="left">游客、普通用户和管理员可以浏览所有发布的信息</td></tr><tr><td align="center">搜索信息</td><td align="left">游客、普通用户和管理员可以用关键字搜索所有发布的信息。普通用户可以搜索自己发布的所有信息</td></tr><tr><td align="center">发表留言</td><td align="left">普通用户和管理员登录后都可以对发布信息进行留言</td></tr><tr><td align="center">查看留言</td><td align="left">游客、普通用户和管理员都可以查看发布信息的留言</td></tr><tr><td align="center">删除留言</td><td align="left">管理员可以删除留言</td></tr><tr><td align="center">添加二手指南</td><td align="left">管理员可以添加二手指南</td></tr><tr><td align="center">查看二手指南</td><td align="left">游客、普通用户和管理员都可以查看二手指南</td></tr><tr><td align="center">修改二手指南</td><td align="left">管理员可以修改二手指南</td></tr><tr><td align="center">删除二手指南</td><td align="left">管理员可以删除二手指南</td></tr><tr><td align="center">私信交流</td><td align="left">用户之间可以相互私信交流</td></tr><tr><td align="center">智能推荐</td><td align="left">智能推荐用户喜欢的产品</td></tr><tr><td align="center">图像识别</td><td align="left">自动识别客户上传的图片</td></tr><tr><td align="center">社区交流</td><td align="left">用户可以在社区当中发帖交流</td></tr><tr><td align="center">爱心公益</td><td align="left">用户可以将自己不需要的物品进行爱心捐献</td></tr></tbody></table><h3 id="3-2-功能结构图"><a href="#3-2-功能结构图" class="headerlink" title="3.2 功能结构图"></a><strong>3.2 功能结构图</strong></h3><p>![未命名文件 (软件需求规格说明书.assets&#x2F;未命名文件 (2).png)](..&#x2F;..&#x2F;Download&#x2F;未命名文件 (2).png)</p><h3 id="3-3-数据流分析"><a href="#3-3-数据流分析" class="headerlink" title="3.3 数据流分析"></a><strong>3.3 数据流分析</strong></h3><p>[^用户信息模块数据流图]: </p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/1647483600024.png" alt="1647483600024"></p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/1647483620846.png" alt="1647483620846"></p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/1647483630850.png" alt="1647483630850"></p><h3 id="3-4-功能分析"><a href="#3-4-功能分析" class="headerlink" title="3.4 功能分析"></a>3.4 功能分析</h3><p>在此部分将从用例图、活动图、时序图、状态图和类图从不同视角对用户信息模块、交易模块、展示模块、社区模块、活动模块进行刻画和描述。</p><h4 id="3-4-1-用户信息模块"><a href="#3-4-1-用户信息模块" class="headerlink" title="3.4.1 用户信息模块"></a>3.4.1 用户信息模块</h4><h5 id="用例图"><a href="#用例图" class="headerlink" title="用例图"></a>用例图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%94%A8%E4%BE%8B%E5%9B%BE-1648648796754.png" alt="用例图"></p><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>注册</th></tr></thead><tbody><tr><td>简述</td><td>该用例允许用户将用户名，密码，电话号码三段信息提交至系统注册账号</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>打开网页点击注册</td></tr><tr><td>正常流</td><td>①用户输入用户名，密码，电话号码三段信息， ②用户点击获取验证码，并将其填入到验证码一栏中， ③用户点击注册按钮，注册成功.</td></tr><tr><td>替代流</td><td>①若用户未输入用户名，密码，电话号码三段信息，则无法点击获取验证码，并在缺失信息的一栏提示 ②若用户未点击发送验证码，则无法点击注册按钮，并在验证码一栏提示 ③若用户输入错误的验证码，点击会提示验证码错误</td></tr><tr><td>后置条件</td><td>如果用例成功，用户信息在系统的数据库中，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>注册</th></tr></thead><tbody><tr><td>简述</td><td>该用例允许用户将用户名，密码，两段信息提交至系统登录账号</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>打开网页点击登录</td></tr><tr><td>正常流</td><td>①用户输入用户名，密码三段信息， ②用户点击登录按钮，登录成功.</td></tr><tr><td>替代流</td><td>①若用户未输入用户名，密码，则无法点击登录，并在缺失的一栏提示 ②若用户输入不存在的用户名，点击登录会提示该用户不存在 ③若用户输入错误的密码，点击登录会提示密码错误 ④若用户输入密码错误五次则登录失败，一小时内不可再次登录。</td></tr><tr><td>后置条件</td><td>如果用例成功，系统向用户展示主界面。</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>修改密码</th></tr></thead><tbody><tr><td>简述</td><td>该用例允许用户将手机号，新密码提交至系统修改密码</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>打开个人信息界面点击修改密码</td></tr><tr><td>正常流</td><td>①用户输入电话号码，新密码， ②用户点击获取验证码，并将其填入到验证码一栏中， ③用户点击修改密码按钮，修改成功.</td></tr><tr><td>替代流</td><td>①若用户未输入新密码或手机号，则无法获取验证吗，并在缺失的一栏提示 ②若用户未点击发送验证码，则无法点击注册按钮，并在验证码一栏提示 ③若用户输入错误的验证码，点击会提示验证码错误</td></tr><tr><td>后置条件</td><td>如果用例成功，在系统的数据库中修改用户信息，否则系统状态不变。</td></tr></tbody></table><h5 id="活动图"><a href="#活动图" class="headerlink" title="活动图"></a>活动图</h5><p>活动图1 中简单描述了，从开始到登录有账号则直接登录结束，没有账号则填写相关信息来注册账号最后回到登录账号再结束。 </p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%B4%BB%E5%8A%A8%E5%9B%BE1-1648648746339.png" alt="活动图1"></p><p>活动图2 中简单描述了，从开始填写信息，填写验证码，最后成功修改密码直接结束。</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%B4%BB%E5%8A%A8%E5%9B%BE2-1648648753740.png" alt="活动图2"></p><h5 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%97%B6%E5%BA%8F%E5%9B%BE-1648648763772.jpg" alt="时序图"></p><h5 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%8A%B6%E6%80%81%E5%9B%BE-1648648785838.png" alt="状态图"></p><h5 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%B1%BB%E5%9B%BE-1648648780872.png" alt="类图"></p><table><thead><tr><th><span style="display:inline-block;width: 120px">类图综述</span></th><th>类图名称</th></tr></thead><tbody><tr><td>目的</td><td>围绕用户注册模块分析类图</td></tr><tr><td>结构</td><td>用户-登录-账号</td></tr><tr><td>功能</td><td>提供用户登录功能</td></tr><tr><td>组织</td><td>大体上以为LoginBO类为中心</td></tr></tbody></table><table><thead><tr><th>LoginForm</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>展示登录界面</td></tr><tr><td>属性说明</td><td>login: LoginBO</td></tr><tr><td>操作说明</td><td>LoginForm(), validate( String account, String password) : void</td></tr><tr><td>关系说明</td><td>LoginForm类没有子类或父类</td></tr></tbody></table><table><thead><tr><th>LoginBO</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>登录业务逻辑类，封装实现登录功能的业务逻辑类</td></tr><tr><td>属性说明</td><td>userDAO : IUserDAO</td></tr><tr><td>操作说明</td><td>setlUserDAO(UserDAO userDAO) : void,  validate( String account, String password ) : boolean</td></tr><tr><td>关系说明</td><td>LoginBO类没有子类或父类</td></tr></tbody></table><table><thead><tr><th>lUserDAO</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>抽象数据访问类接口，声明对User表的数据操作方法，</td></tr><tr><td>属性说明</td><td>–</td></tr><tr><td>操作说明</td><td>findUserByAccAndPwd( String account, String password ) : boolean</td></tr><tr><td>关系说明</td><td>lUserDAO类没有子类或父类</td></tr></tbody></table><table><thead><tr><th>UserDAO</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>狊体数据访问类，实现对User表的数据操作方法</td></tr><tr><td>属性说明</td><td>–</td></tr><tr><td>操作说明</td><td>findUserByAccAndPwd( String account, String password ) : boolean</td></tr><tr><td>关系说明</td><td>UserDAO类没有子类或父类</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 100px">关联描述</span></th><th></th></tr></thead><tbody><tr><td>关联一</td><td>LoginForm类 和 LoginBO类是组合关系，LoginForm类是LoginBO类的整体部分且控制其生命周期。</td></tr><tr><td>关联二</td><td>LoginBO类 和 lUserDAO类是聚合关系，LoginBO类是lUserDAO类的整体部分，但部分lUserDAO类可以脱离整体部分单独存在。</td></tr><tr><td>关联三</td><td>UserDAO类是lUserDAO类的实现接口，在UserDAO类中具体声明了一些方法。</td></tr></tbody></table><h4 id="3-4-2-交易模块"><a href="#3-4-2-交易模块" class="headerlink" title="3.4.2 交易模块"></a>3.4.2 交易模块</h4><h5 id="用例图-1"><a href="#用例图-1" class="headerlink" title="用例图"></a>用例图</h5><img src="软件需求规格说明书.assets/交易模块用例图.png" alt="交易模块用例图" style="zoom: 80%;" /><table><thead><tr><th align="center"><span style="display:inline-block;width: 120px">用例名称</span></th><th>搜索信息</th></tr></thead><tbody><tr><td align="center">简述</td><td>该用例允许用户输入所需要搜索的信息，该信息包括所需要购买的物品名，好友名，历史订单以及现有开放活动。</td></tr><tr><td align="center">参与者</td><td>用户</td></tr><tr><td align="center">前置条件</td><td>用户需要进入搜索框，并且输入对应所需查找的物品、好友、历史订单或活动名。当用户单击“搜索”按钮时，该用例启动。</td></tr><tr><td align="center">正常流</td><td>① 当用户输入物品名，并点击”搜索“按钮时，系统显示用户搜索的物品售卖页面。② 当用户输入好友名，并点击”搜索“按钮时，系统显示用户搜索的好友主页。③ 当用户输入历史订单名，并点击”搜索“按钮时，系统显示用户搜索的历史订单详情页面。④ 当用户输入活动名，并点击”搜索“按钮时，系统显示</td></tr><tr><td align="center">替代流</td><td>① 当用户未输入物品名，并点击”搜索“按钮时，系统显示弹窗提示用户未输入文本。② 当用户未输入好友名，并点击”搜索“按钮时，系统显示弹窗提示用户未输入文本。③ 当用户未输入历史订单名，并点击”搜索“按钮时，系统显示弹窗提示用户未输入文本。④ 当用户未输入活动名，并点击”搜索“按钮时，系统显示弹窗提示用户未输入文本。</td></tr><tr><td align="center">后置条件</td><td>如果用例成功，搜索记录在系统的数据库中，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th align="center"><span style="display:inline-block;width: 120px">用例名称</span></th><th>删除信息</th></tr></thead><tbody><tr><td align="center">简述</td><td>该用例允许用户删除信息，该信息包括所需要曾经历史订单，好友，所参与活动的记录，个人主页，售卖物品主页。</td></tr><tr><td align="center">参与者</td><td>用户、管理员</td></tr><tr><td align="center">前置条件</td><td>用户需要进入个人主页，在不同模块如好友、历史订单、活动、个人主页处点击”删除“按钮，该用例启动。</td></tr><tr><td align="center">正常流</td><td>① 当用户进入个人主页，并点击”删除简介“按钮时，系统删除用户的个人主页信息（如签名，简介）。② 当用户进入个人主页-售卖物品主页，选择要删除的物品，并点击”删除“按钮时，系统删除用户的所售卖物品主页。③ 当用户进入好友主页，选择要删除的好友，并点击”删除“按钮时，系统删除用户的对应好友。④ 当用户进入历史订单主页，选择要删除的历史订单，并点击”删除“按钮时，系统删除用户的对应历史订单。⑤ 当用户进入活动主页，选择要删除的参与过的活动，并点击”删除“按钮时，系统删除用户的对应参与过活动。</td></tr><tr><td align="center">替代流</td><td>① 当用户未选择售卖物品，并点击”删除“按钮时，系统显示弹窗提示用户未选择售卖物品。② 当用户未选择好友，并点击”删除“按钮时，系统显示弹窗提示用户未选择好友。③ 当用户未选择历史订单，并点击”删除“按钮时，系统显示弹窗提示用户未选择历史订单。④ 当用户未选择活动，并点击”删除“按钮时，系统显示弹窗提示用户未选择活动。⑤ 当用户未选择个人主页简介，并点击”删除“按钮时，系统显示弹窗提示用户未选择简介。</td></tr><tr><td align="center">后置条件</td><td>如果用例成功，对应的删除记录会在系统的数据库消失中，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th align="center"><span style="display:inline-block;width: 120px">用例名称</span></th><th>浏览信息</th></tr></thead><tbody><tr><td align="center">简述</td><td>该用例允许用户浏览好友、物品、个人主页和活动信息，该信息包括历史订单，好友，所参与活动的记录，个人主页，售卖物品主页等。</td></tr><tr><td align="center">参与者</td><td>用户</td></tr><tr><td align="center">前置条件</td><td>用户需要进入个人主页、好友主页、物品主页、活动主页等，点击图片或名字，该用例启动。</td></tr><tr><td align="center">正常流</td><td>① 当用户进入个人主页，并点击下方个人主页按钮时，系统显示用户的个人主页信息（如签名，简介）。② 当用户进入个人主页-售卖物品主页，点击售卖的物品，系统显示用户的所售卖物品主页。③ 当用户进入好友主页，点击要选择的好友，系统显示用户的对应好友主页。④ 当用户进入历史订单主页，选择要点击的历史订单，系统显示用户的对应历史订单。⑤ 当用户进入活动主页，选择要参与过的活动，系统显示用户的对应参与过活动。</td></tr><tr><td align="center">替代流</td><td>① 当用户未选择个人主页，系统不会显示个人主页。② 当用户未选择好友，系统不会显示好友主页。③ 当用户未选择历史订单主页，系统不会显示历史订单主页。④ 当用户未选择物品，系统不会显示物品主页。⑤ 当用户未选择活动，系统不会显示活动主页。</td></tr><tr><td align="center">后置条件</td><td>如果用例成功，系统会显示相应点击的详情主页，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th align="center"><span style="display:inline-block;width: 120px">用例名称</span></th><th>修改信息</th></tr></thead><tbody><tr><td align="center">简述</td><td>该用例允许用户修改信息，该信息包括个人主页，自己所售卖物品的价格、图片、简介信息。</td></tr><tr><td align="center">参与者</td><td>用户</td></tr><tr><td align="center">前置条件</td><td>用户需要进入个人主页，在不同模块如签名简介或售卖物品的主页点击修改，该用例启动。</td></tr><tr><td align="center">正常流</td><td>① 当用户进入个人主页，并点击”修改“按钮时，用户的个人主页信息（如签名，简介）显示可修改状态。② 当用户进入个人主页-售卖物品主页，选择要修改的物品，并点击”修改“按钮时，用户的所售卖物品主页显示可修改状态。</td></tr><tr><td align="center">替代流</td><td>① 当用户未选择售卖物品，并点击”修改“按钮时，系统显示弹窗提示用户未选择售卖物品。</td></tr><tr><td align="center">后置条件</td><td>如果用例成功，对应的修改记录会在系统的数据库出现并覆盖之前的信息，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th align="center"><span style="display:inline-block;width: 120px">用例名称</span></th><th>发布信息</th></tr></thead><tbody><tr><td align="center">简述</td><td>该用例允许用户发布信息，该信息包括售卖物品主页。</td></tr><tr><td align="center">参与者</td><td>用户、管理员</td></tr><tr><td align="center">前置条件</td><td>用户需要进入个人主页-物品主页，点击发布“按钮，该用例启动。</td></tr><tr><td align="center">正常流</td><td>① 当用户进入个人主页，并点击”发布“按钮时，系统会发布用户的所售卖的物品主页信息。</td></tr><tr><td align="center">替代流</td><td>① 当用户未选择售卖物品，并点击”发布“按钮时，系统显示弹窗提示用户未选择售卖物品。</td></tr><tr><td align="center">后置条件</td><td>如果用例成功，发布售卖物品记录会在系统的数据库出现中，否则系统状态不变。</td></tr></tbody></table><h5 id="活动图-1"><a href="#活动图-1" class="headerlink" title="活动图"></a>活动图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%90%9C%E7%B4%A2%E4%BF%A1%E6%81%AF-1648647967592.png" alt="搜索信息"></p><p>![删除信息 (软件需求规格说明书.assets&#x2F;删除信息 (2)-1648648030631.png)](C:&#x2F;Users&#x2F;Lenovo&#x2F;Desktop&#x2F;交易模块&#x2F;删除信息 (2).png)</p><h5 id="时序图-1"><a href="#时序图-1" class="headerlink" title="时序图"></a>时序图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%B7%BB%E5%8A%A0%E5%87%BA%E5%85%A5%E5%BA%93%E8%AE%B0%E5%BD%95%E5%BA%8F%E5%88%97%E5%9B%BE.png" alt="添加出入库记录序列图"></p><h5 id="状态图-1"><a href="#状态图-1" class="headerlink" title="状态图"></a>状态图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%8A%B6%E6%80%81%E5%9B%BE-1648648042817.png" alt="状态图"></p><h5 id="类图-1"><a href="#类图-1" class="headerlink" title="类图"></a>类图</h5><p>![未命名文件 (软件需求规格说明书.assets&#x2F;未命名文件 (11).png)](G:&#x2F;Download&#x2F;未命名文件 (11).png)</p><table><thead><tr><th><span style="display:inline-block;width: 120px">类图综述</span></th><th>类图名称</th></tr></thead><tbody><tr><td>目的</td><td>围绕交易模块分析类图</td></tr><tr><td>结构</td><td>界面-控制-实体</td></tr><tr><td>功能</td><td>提供了二手物品交易功能、二手物品发布功能，可以进行二手物品信息的设置，包括名称，价格，是否包邮等等</td></tr><tr><td>组织</td><td>大体上以交易功能为中心</td></tr></tbody></table><table><thead><tr><th>DealPart类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>用于验证用户信息和交易信息</td></tr><tr><td>属性说明</td><td>- string userName - string dealInfo</td></tr><tr><td>操作说明</td><td>+ getShopInfo(): string<br/>+ validate( String account , String password ) : void</td></tr><tr><td>关系说明</td><td>有两个子类：<strong>DealDonePart</strong>类和<strong>ReleaseInfoPart</strong>类</td></tr></tbody></table><table><thead><tr><th><strong>DealDonePart</strong>类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>用于判断交易是否成功以及展示交易信息</td></tr><tr><td>属性说明</td><td>- string passWord</td></tr><tr><td>操作说明</td><td>+ dealSuccess():bool<br/>+ dealInfo(string dealNum):string</td></tr><tr><td>关系说明</td><td>是DealPart类的子类</td></tr></tbody></table><table><thead><tr><th><strong>ReleaseInfoPart</strong>类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>用于验证用户信息和交易信息</td></tr><tr><td>属性说明</td><td>- string Info<br/>- string nameOfSell<br/>- string prize<br/>- bool postal<br/>- bool release</td></tr><tr><td>操作说明</td><td>+ setInfo(): void<br/>+ getInfo(int dealNum): string<br/>+ getReleaseOrNot(int dealNum): bool<br/>+ getPostalOrNot(int dealNum): bool<br/>+ releaseNew(string info): void</td></tr><tr><td>关系说明</td><td>是DealPart类的子类</td></tr></tbody></table><h4 id="3-4-3-展示模块"><a href="#3-4-3-展示模块" class="headerlink" title="3.4.3 展示模块"></a>3.4.3 展示模块</h4><h5 id="用例图-2"><a href="#用例图-2" class="headerlink" title="用例图"></a>用例图</h5><img src="软件需求规格说明书.assets/用例图-1648648353326.png" alt="用例图" style="zoom: 33%;" /><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>视频展示</th></tr></thead><tbody><tr><td>简述</td><td>该用例将系统的使用以及注意事项通过视频的方式展现给用户，并可供用户下载</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>用户进入系统主页面，该页面显示系统各种功能，当用户单击“视频简介”按钮时，该用例启动。</td></tr><tr><td>正常流</td><td>①系统打开视频展示视频 ②用户观看视频，可暂停，跳转等 ③系统提供下载该视频功能</td></tr><tr><td>替代流</td><td>① 若系统打开视频失败，用户可提交投诉将错误及时反馈。 ② 若客户下载视频失败，用户可联系工作人员获取备用下载地址。</td></tr><tr><td>后置条件</td><td>如果用例成功，播放展示视频并提共下载源，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>智能推荐</th></tr></thead><tbody><tr><td>简述</td><td>该用例将用户最希望购置到的物品和最热门的物品推荐给用户，并提供评价服务。</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>客户进入购物页面，该页面显示各类二手物品及其价格，当用户单击“智能推荐”按钮时，该用例启动</td></tr><tr><td>正常流</td><td>①系统显示客户最希望购买的和最热门的商品列表供客户选择 ②客户选择心怡的物品，使用“购买”功能，选择付款方式，系统给订单唯一的订单编号，将订单信息存储到数据库.</td></tr><tr><td>替代流</td><td>①若客户未购买物品，返回主页面 ②若客户未选择付款方式，选择“购买”功能，则无法提交，仍然回到订单页面提示客户选择付款方式(网上支付&#x2F;货到付款)</td></tr><tr><td>后置条件</td><td>如果用例成功，购物订单记录在系统的数据库中，更新智能推荐物品列表，否则系统状态不变</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>用户指南</th></tr></thead><tbody><tr><td>简述</td><td>该用例将系统的使用以及注意事项通过文本的方式展现给用户。</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>客户进入系统主页面，该页面显示系统各种功能，当用户单击“用户指南”按钮时，该用例启动</td></tr><tr><td>正常流</td><td>① 系统显示系统的使用指南和注意事项。</td></tr><tr><td>替代流</td><td>① 若客户打开用户指南失败，用户可提交投诉将错误及时反馈。</td></tr><tr><td>后置条件</td><td>如果用例成功，打开用户指南，否则系统状态不变。</td></tr></tbody></table><h5 id="活动图-2"><a href="#活动图-2" class="headerlink" title="活动图"></a>活动图</h5><p>图中简单描述了：从打开视频简介开始，若视频打开失败则向客户发送错误反馈，若打开成功则可以查看视频，观看时有四个功能选项，即全屏播放、挑战进度、调节音量、暂停播放，播放完成后用户可选择是否下载，若选择下载且下载成功后，返回主界面；若下载失败，向客服发送错误反馈；若不下载则返回主页面，结束该活动。</p><img src="软件需求规格说明书.assets/活动图1-1648648358013.png" alt="活动图1" style="zoom: 50%;" /><p>图中简单描述了：从打开智能推荐开始，可以选择三种功能，即心意物品推荐、热门物品推荐和查看评价，找到自己想要购买的二手物品后，进行购买，选择付款方式后进行付款，付款成功后返回主界面，结束活动。</p><img src="软件需求规格说明书.assets/活动图2-1648648366272.png" alt="活动图2" style="zoom:50%;" /><p>图中简单描述了：从打开用户指南开始，若打开失败则自动提交错误反馈；若打开成功开始查看指南，结束后返回主界面，结束活动。</p><img src="软件需求规格说明书.assets/活动图3.png" alt="活动图3" style="zoom:50%;" /><h5 id="时序图-2"><a href="#时序图-2" class="headerlink" title="时序图"></a>时序图</h5><p>图中展示的是展示模块场景下的序列图。</p><img src="软件需求规格说明书.assets/序列图.png" alt="序列图" style="zoom: 50%;" /><h5 id="状态图-2"><a href="#状态图-2" class="headerlink" title="状态图"></a>状态图</h5><p>图中描述了展示模块在其生命周期内所经历的状态。</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%8A%B6%E6%80%81%E5%9B%BE-1648648386871.png" alt="状态图"></p><h5 id="类图-2"><a href="#类图-2" class="headerlink" title="类图"></a>类图</h5><img src="软件需求规格说明书.assets/类图-1648648392587.png" alt="类图"  /><table><thead><tr><th><span style="display:inline-block;width: 120px">类图综述</span></th><th>展示模块</th></tr></thead><tbody><tr><td>目的</td><td>围绕展示的目的将该产品的使用方法和建议介绍给用户</td></tr><tr><td>结构</td><td>展示界面控制用户使用这三个功能</td></tr><tr><td>功能</td><td>提供视频介绍、用户指南、智能推荐购买功能</td></tr><tr><td>组织</td><td>大体上以智能推荐购买功能为中心</td></tr></tbody></table><table><thead><tr><th>user类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>记录用户相关信息</td></tr><tr><td>属性说明</td><td>-ID : int  -name: String</td></tr><tr><td>操作说明</td><td>+show() : void</td></tr><tr><td>关系说明</td><td>无子类、父类</td></tr></tbody></table><table><thead><tr><th>recommend类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>推荐用户心意和热门的二手物品</td></tr><tr><td>属性说明</td><td>-judge : bool<br/> -ID : String<br/>  -type : int</td></tr><tr><td>操作说明</td><td>+recommendationAlgorithm() : void</td></tr><tr><td>关系说明</td><td>无子类、父类</td></tr></tbody></table><table><thead><tr><th>buy类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>用户购买物品</td></tr><tr><td>属性说明</td><td>-Buy : bool<br/>-price : double</td></tr><tr><td>操作说明</td><td>+ifBuy() : void<br/>+pay() : void</td></tr><tr><td>关系说明</td><td>无子类、父类</td></tr></tbody></table><table><thead><tr><th>video类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>播放以及下载介绍视频</td></tr><tr><td>属性说明</td><td>-judge : bool<br/>-type : int</td></tr><tr><td>操作说明</td><td>+ifDownload() : void<br/>+ifOpen() : void</td></tr><tr><td>关系说明</td><td>无子类、父类</td></tr></tbody></table><table><thead><tr><th>guide类描述</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>查看用户指南</td></tr><tr><td>属性说明</td><td>-judge : bool<br/>-type : int<br/>-content : String</td></tr><tr><td>操作说明</td><td>+ifOpen() : void</td></tr><tr><td>关系说明</td><td>无子类、父类</td></tr></tbody></table><table><thead><tr><th>关联描述</th><th></th></tr></thead><tbody><tr><td>关联一</td><td>user与recommend是聚合关系，推荐与用户功能是部分与整体之间的关系，且可以脱离整体单独存在</td></tr><tr><td>关联二</td><td>user与video是聚合关系，视频与用户功能是部分与整体之间的关系，且可以脱离整体单独存在</td></tr><tr><td>关联三</td><td>user与guide是聚合关系，用户指南与用户功能是部分与整体之间的关系，且可以脱离整体单独存在</td></tr><tr><td>关联四</td><td>recommend与buy是聚合关系，购买与推荐系统是部分与整体之间的关系，且可以脱离整体单独存在</td></tr></tbody></table><h4 id="3-4-4-社区模块"><a href="#3-4-4-社区模块" class="headerlink" title="3.4.4 社区模块"></a>3.4.4 社区模块</h4><h5 id="用例图-3"><a href="#用例图-3" class="headerlink" title="用例图"></a>用例图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%94%A8%E4%BE%8B%E5%9B%BE-1648647112149.png" alt="用例图"></p><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>用户交流</th></tr></thead><tbody><tr><td>简述</td><td>该用例用户交流部分让用户通过点击其他用户或社区进行私信聊天或者社区群聊。</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>用户进入社区界面，该界面显示所有与该用户有关的其他用户和社区，用户单击其他用户或社区时，用例启动。</td></tr><tr><td>正常流</td><td>1.系统显示与单个用户或社区内聊天的历史记录。2.系统支持用户在聊天框中添加文字、语音、图片和视频等内容。3.用户点击“发送”，聊天框中的内容储存至数据库并发送至聊天模块。</td></tr><tr><td>替代流</td><td>1.若用户没有在聊天框中添加任何信息，则消息不会发送。2.若用户添加内容过大，则显示发送失败3.若用户发送的文本内容或图片、视频涉嫌传播非法或淫秽信息，则不会发送消息。</td></tr><tr><td>后置条件</td><td>如果用例成功，聊天内容储存在数据库中并显示于聊天模块，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>帖子留言</th></tr></thead><tbody><tr><td>简述</td><td>该用例帖子留言部分让用户可以查看他人在各个帖子下的留言，并可以在各个帖子下发布留言或删除自己已发布的留言。</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>用户进入贴吧界面，该页面显示各个帖子标题和简介，用户可以点击进入各个帖子，当用户进入帖子时，该用例启动。</td></tr><tr><td>正常流</td><td>1.系统显示该帖下所有用户的留言，若用户自己有历史留言，则在个人用户端高亮置顶显示。2.系统支持用户在输入框中添加文字、图片和视频等内容。3.用户点击“发布”，输入框中的内容储存至数据库并发送至留言模块。4.用户自己发送的留言下有”删除“按钮，用户点击“删除”，留言在留言面板上抹除并在数据库中删除该记录。</td></tr><tr><td>替代流</td><td>1.若用户没有在输入框中添加任何信息，则无法发布留言。2.若用户添加内容过大，则显示发送失败。3.若用户发送的文本内容或图片、视频涉嫌传播非法或淫秽信息，则不会发布留言。</td></tr><tr><td>后置条件</td><td>如果用例成功，发布的留言将储存至数据库并显示在留言面板，删除的留言将在数据库中删除该记录并在留言面板上抹除，否则系统状态不变。</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>动态</th></tr></thead><tbody><tr><td>简述</td><td>该用例动态部分让用户可以发布自己的动态并进行修改或删除。</td></tr><tr><td>参与者</td><td>用户</td></tr><tr><td>前置条件</td><td>用户进入动态界面，该界面显示用户自己发布的历史动态，当用户点击“发布动态”或“管理动态”时，该用例启动。</td></tr><tr><td>正常流</td><td>1.系统显示用户自己发布的历史动态。2.系统支持用户在输入框中添加文字、图片和视频等内容。3.用户点击“发布动态”，输入框中的内容储存至数据库并发送至动态模块。4.用户点击“管理动态”，可以选择修改动态文本内容或删除该动态，并于数据库中做相应修改。</td></tr><tr><td>替代流</td><td>1.若用户没有在输入框中添加任何信息，则无法发布动态。2.若用户添加内容过大，则显示发送失败。3.若用户发送的文本内容或图片涉嫌传播非法或淫秽信息，则不会发布动态。</td></tr><tr><td>后置条件</td><td>如果用例成功，发布的动态将储存至数据库并显示在动态面板，删除或修改的动态将在数据库中删除或修改该记录并在动态面板上抹除，否则系统状态不变。</td></tr></tbody></table><h5 id="活动图-3"><a href="#活动图-3" class="headerlink" title="活动图"></a>活动图</h5><p>用户打开聊天界面，如私信聊天或社区群聊，在聊天框中输入文字或编辑语音、图片、视频等内容，点击发送，系统检测文本内容和图片视频是否含有非法淫秽信息，如果有则发送失败，提示用户“内容含有非法信息，发送失败” ；如果没有，则发送成功并将内容储存至数据库，在聊天面板显示发送的内容，退出聊天界面后结束。</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%B4%BB%E5%8A%A8%E5%9B%BE-1648647098082.png" alt="活动图"></p><h5 id="时序图-3"><a href="#时序图-3" class="headerlink" title="时序图"></a>时序图</h5><p>下图展示的是用户交流场景下的时序图</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%97%B6%E5%BA%8F%E5%9B%BE-1648647104487.png" alt="时序图"></p><h5 id="状态图-3"><a href="#状态图-3" class="headerlink" title="状态图"></a>状态图</h5><p>下图描述了用户交流在其生命周期内所经历的状态</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%8A%B6%E6%80%81%E5%9B%BE-1648647108348.png" alt="状态图"></p><h5 id="类图-3"><a href="#类图-3" class="headerlink" title="类图"></a>类图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%B1%BB%E5%9B%BE%E6%96%B0.png" alt="类图新"></p><table><thead><tr><th><span style="display:inline-block;width: 120px">类图综述</span></th><th>描述</th></tr></thead><tbody><tr><td>目的</td><td>围绕用户交流分析类图</td></tr><tr><td>结构</td><td>用户—聊天室—信息</td></tr><tr><td>功能</td><td>提供用户交流功能</td></tr><tr><td>组织</td><td>大体上以message类为中心</td></tr></tbody></table><table><thead><tr><th>User</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>定义用户类</td></tr><tr><td>属性说明</td><td>-ID:int<br/>-name:String<br/>-password:String</td></tr><tr><td>操作说明</td><td>+login():void</td></tr><tr><td>关系说明</td><td>User类没有子类或父类</td></tr></tbody></table><table><thead><tr><th>Chatroom</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>定义聊天室类</td></tr><tr><td>属性说明</td><td>-userName:String</td></tr><tr><td>操作说明</td><td>+sendMessage():void</td></tr><tr><td>关系说明</td><td>Chatroom类没有子类或父类</td></tr></tbody></table><table><thead><tr><th>Message</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>定义信息类</td></tr><tr><td>属性说明</td><td>-content:String<br/>-type:int</td></tr><tr><td>操作说明</td><td>+sendMsg():void</td></tr><tr><td>关系说明</td><td>Message有三个子类，分别是textMessage、picMessage、videoMessage</td></tr></tbody></table><table><thead><tr><th>textMessage</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>定义文本信息类</td></tr><tr><td>属性说明</td><td>-content:String<br/>-type:int</td></tr><tr><td>操作说明</td><td>+sendText():void</td></tr><tr><td>关系说明</td><td>textMessage有父类message</td></tr></tbody></table><table><thead><tr><th>picMessage</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>定义图片信息类</td></tr><tr><td>属性说明</td><td>-content:Image<br/>-type:int</td></tr><tr><td>操作说明</td><td>+sendPicture():void</td></tr><tr><td>关系说明</td><td>picMessage有父类message</td></tr></tbody></table><table><thead><tr><th>videoMessage</th><th></th></tr></thead><tbody><tr><td>整体说明</td><td>定义视频信息类</td></tr><tr><td>属性说明</td><td>-src:String   <br/>-type:int</td></tr><tr><td>操作说明</td><td>+sendVideo():void</td></tr><tr><td>关系说明</td><td>videoMessage有父类message</td></tr></tbody></table><table><thead><tr><th>关联描述</th><th></th></tr></thead><tbody><tr><td>关联一</td><td>用户进入聊天室</td></tr><tr><td>关联二</td><td>聊天室编辑并发送信息</td></tr></tbody></table><table><thead><tr><th>继承描述</th><th></th></tr></thead><tbody><tr><td>继承一</td><td>textMessage是message子类，因为其文本信息属于信息中的一种</td></tr><tr><td>继承二</td><td>picMessage是message子类，因为其图片信息属于信息中的一种</td></tr><tr><td>继承三</td><td>videoMessage是message子类，因为其视频信息属于信息中的一种</td></tr></tbody></table><h4 id="3-4-5-活动模块"><a href="#3-4-5-活动模块" class="headerlink" title="3.4.5 活动模块"></a>3.4.5 活动模块</h4><h5 id="用例图-4"><a href="#用例图-4" class="headerlink" title="用例图"></a>用例图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%94%A8%E4%BE%8B%E5%9B%BE-1648649896513.png" alt="用例图"></p><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>活动模块—以物易物</th></tr></thead><tbody><tr><td>简述</td><td>该用例允许用户填写一份物品登记表，该物品登记表包括用户信息、物品信息、交换需求，完成填写后将数据存进数据库，当发现可匹配的用户后，双方进行联系，并且进行交换</td></tr><tr><td>参与</td><td>用户</td></tr><tr><td>前置条件</td><td>用户登录系统</td></tr><tr><td>正常流</td><td>① 系统显示登记表供客户确认 ② 系统请求客户填写用户信息、物品信息、交换需求 ③ 客户选择“提交”功能，将登记表存储到数据库</td></tr><tr><td>替代流</td><td>① 若用户未填写用户信息，选择“提交”功能，则无法提交，仍然回到登记表页面提示用户填写用户信息 ② 若用户未填写物品信息，选择“提交”功能，仍然回到登记表页面提示用户填写物品信息</td></tr><tr><td>后置条件</td><td>如果用例成功，登记表记录在系统的数据库中，否则系统状态不变</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>活动模块—捐赠二手物品</th></tr></thead><tbody><tr><td>简述</td><td>该用例允许用户填写一份物品登记表，该物品登记表包括用户信息、物品信息、需求，完成填写后将数据存进数据库，当物品被捐赠后，系统会对用户进行反馈</td></tr><tr><td>参与</td><td>用户</td></tr><tr><td>前置条件</td><td>用户登录系统</td></tr><tr><td>正常流</td><td>① 系统显示登记表供客户确认 ② 系统请求客户填写用户信息、物品信息、需求 ③ 客户选择“提交”功能，将登记表存储到数据库</td></tr><tr><td>替代流</td><td>① 若用户未填写用户信息，选择“提交”功能，则无法提交，仍然回到登记表页面提示用户填写用户信息 ② 若用户未填写物品信息，选择“提交”功能，仍然回到登记表页面提示用户填写物品信息</td></tr><tr><td>后置条件</td><td>如果用例成功，登记表记录在系统的数据库中，否则系统状态不变</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">用例名称</span></th><th>活动模块—义卖</th></tr></thead><tbody><tr><td>简述</td><td>该用例允许用户填写一份物品登记表，该物品登记表包括用户信息、物品信息、需求，完成填写后将数据存进数据库，最终义卖的结果系统会对用户进行反馈</td></tr><tr><td>参与</td><td>用户</td></tr><tr><td>前置条件</td><td>用户登录系统</td></tr><tr><td>正常流</td><td>① 系统显示登记表供客户确认 ② 系统请求客户填写用户信息、物品信息、需求 ③ 客户选择“提交”功能，将登记表存储到数据库</td></tr><tr><td>替代流</td><td>① 若用户未填写用户信息，选择“提交”功能，则无法提交，仍然回到登记表页面提示用户填写用户信息 ② 若用户未填写物品信息，选择“提交”功能，仍然回到登记表页面提示用户填写物品信息</td></tr><tr><td>后置条件</td><td>如果用例成功，登记表记录在系统的数据库中，否则系统状态不变</td></tr></tbody></table><h5 id="活动图-4"><a href="#活动图-4" class="headerlink" title="活动图"></a>活动图</h5><p>​ 图中简单描述了，用户从打开登记表到填写表中的信息，填写完毕后点击提交，系统将对表中的内容进行审核，如果不存在违规的词句就提示用户填写完成，等待之后售卖的结果，退出界面并结束；如果存在违规的词句就警告用户再退出界面直接结束。 </p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E6%B4%BB%E5%8A%A8%E5%9B%BE-1648649902753.png" alt="活动图"></p><h5 id="时序图-4"><a href="#时序图-4" class="headerlink" title="时序图"></a>时序图</h5><p>图中展示的是填写登记表场景下的序列图</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E5%A1%AB%E5%86%99%E7%99%BB%E8%AE%B0%E8%A1%A8%E6%97%B6%E5%BA%8F%E5%9B%BE.png" alt="填写登记表时序图"></p><h5 id="状态图-4"><a href="#状态图-4" class="headerlink" title="状态图"></a>状态图</h5><p>图中描述了登记物品信息活动在其生命周期内所经历的状态</p><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%8A%B6%E6%80%81%E5%9B%BE-1648649918190.png" alt="状态图"></p><h5 id="类图-4"><a href="#类图-4" class="headerlink" title="类图"></a>类图</h5><p><img src="/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6.assets/%E7%B1%BB%E5%9B%BE-1648649924522.png" alt="类图"></p><table><thead><tr><th>类图综述</th><th>类图名称</th></tr></thead><tbody><tr><td>目的</td><td>围绕类的关系分析类图</td></tr><tr><td>结构</td><td>父类-子类-依赖</td></tr><tr><td>功能</td><td>提供填写二手物品登记表并写入数据库功能</td></tr><tr><td>组织</td><td>大体上以填写二手物品登记表为中心</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">登记表类描述</span></th><th align="left"></th></tr></thead><tbody><tr><td>整体说明</td><td align="left">这是所有登记表的父类</td></tr><tr><td>属性说明</td><td align="left">UserName：用户姓名；<br/>UserIphoneNumber：用户联系方式；<br/>Adress：用户地址；<br/>ObjectName：物品名称；<br/>ObjectDescribe：物品描述；<br/>ObjectPrice：物品价格；<br/>ObjectInformation：物品附加信息说明</td></tr><tr><td>操作说明</td><td align="left">Write（）：填写登记表 ；<br/>Confirm（）：确认登记表信息；<br/>Submit（）：提交登记表；</td></tr><tr><td>关系说明</td><td align="left">无父类；Table1；Table2；Table3 是他的子类；</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">登记表类描述</span></th><th align="left"></th></tr></thead><tbody><tr><td>整体说明</td><td align="left">以物易物的二手物品物品信息登记表</td></tr><tr><td>属性说明</td><td align="left">UserName：用户姓名；<br/>UserIphoneNumber：用户联系方式；<br/>Adress：用户地址；<br/>ObjectName：物品名称；<br/>ObjectDescribe：物品描述；<br/>ObjectPrice：物品价格；<br/>ObjectInformation：物品附加信息说明</td></tr><tr><td>操作说明</td><td align="left">Write（）：填写登记表 ；<br/>Confirm（）：确认登记表信息； <br/>Submit（）：提交登记表；</td></tr><tr><td>关系说明</td><td align="left">Table是他的父类；无子类</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">登记表类描述</span></th><th align="left"></th></tr></thead><tbody><tr><td>整体说明</td><td align="left">捐赠的二手物品物品信息登记表</td></tr><tr><td>属性说明</td><td align="left">UserName：用户姓名；<br/>UserIphoneNumber：用户联系方式；<br/>Adress：用户地址；<br/>ObjectName：物品名称；<br/>ObjectDescribe：物品描述；<br/>ObjectPrice：物品价格；<br/>ObjectInformation：物品附加信息说明</td></tr><tr><td>操作说明</td><td align="left">Write（）：填写登记表 ；<br/>Confirm（）：确认登记表信息； <br/>Submit（）：提交登记表；</td></tr><tr><td>关系说明</td><td align="left">Table是他的父类；无子类</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">登记表类描述</span></th><th align="left"></th></tr></thead><tbody><tr><td>整体说明</td><td align="left">义卖的二手物品物品信息登记表</td></tr><tr><td>属性说明</td><td align="left">UserName：用户姓名；<br/>UserIphoneNumber：用户联系方式；<br/>Adress：用户地址；<br/>ObjectName：物品名称；<br/>ObjectDescribe：物品描述；<br/>ObjectPrice：物品价格；<br/>ObjectInformation：物品附加信息说明</td></tr><tr><td>操作说明</td><td align="left">Write（）：填写登记表 ；<br/>Confirm（）：确认登记表信息； <br/>Submit（）：提交登记表；</td></tr><tr><td>关系说明</td><td align="left">Table是他的父类；无子类</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">登记表类描述</span></th><th align="left"></th></tr></thead><tbody><tr><td>整体说明</td><td align="left">不同物品信息登记表在数据库中的读写</td></tr><tr><td>属性说明</td><td align="left">-Table：需要操作的物品信息登记表</td></tr><tr><td>操作说明</td><td align="left">TableWriteIntoDBS（Object table）：物品信息登记表写入数据库；ReadTableFromDBS（）：物品信息登记表从数据库读出</td></tr><tr><td>关系说明</td><td align="left">无父类；无子类</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">继承描述</span></th><th></th></tr></thead><tbody><tr><td>继承一</td><td>Table1是Table的子类；Table1是以物易物的二手物品物品信息登记表，二手物品物品信息登记表类型之一</td></tr><tr><td>继承二</td><td>Table2是Table的子类；Table2是捐赠的二手物品物品信息登记表，二手物品物品信息登记表类型之一</td></tr><tr><td>继承三</td><td>Table3是Table的子类；Table3是义卖的二手物品物品信息登记表，二手物品物品信息登记表类型之一</td></tr></tbody></table><table><thead><tr><th><span style="display:inline-block;width: 120px">依赖描述</span></th><th></th></tr></thead><tbody><tr><td>依赖一</td><td>DBS类依赖于Table1类，Table3类，或者Table3类；因为数据库的读写需要表格</td></tr></tbody></table><h2 id="四、软硬件及外部系统接口需求"><a href="#四、软硬件及外部系统接口需求" class="headerlink" title="四、软硬件及外部系统接口需求"></a>四、软硬件及外部系统接口需求</h2><h3 id="4-1-用户界面"><a href="#4-1-用户界面" class="headerlink" title="4.1 用户界面"></a><strong>4.1 用户界面</strong></h3><p>​用户界面是程序中用户能看见并与之交互作用的部分,设计一个好的用户界面是非常重要的,本设计将为用户提供美观,大方,直观,操作简单的用户界面。</p><h3 id="4-2-硬件需求"><a href="#4-2-硬件需求" class="headerlink" title="4.2 硬件需求"></a><strong>4.2 硬件需求</strong></h3><p>​移动终端硬件配置应遵循如下原则：具有高的可靠性，可用性和安全性。【描述系统中软件和硬件每一接口的特征。这种描述可能包括支持的硬件类型、软硬件之间的交流的数据和控制信息的性质以及使用的通信协议。】</p><h3 id="4-3-运行环境"><a href="#4-3-运行环境" class="headerlink" title="4.3 运行环境"></a><strong>4.3 运行环境</strong></h3><ul><li><strong>Web 浏览器：</strong>0+、Chrome、Opera、Safari、Firefox及任何支持HTML5标准的浏览器。</li><li><strong>标准分辨率：</strong>1024<em>768、1920</em>1080、2K</li></ul><h2 id="五、可靠性与可用性需求"><a href="#五、可靠性与可用性需求" class="headerlink" title="五、可靠性与可用性需求"></a><strong>五、可靠性与可用性需求</strong></h2><h3 id="5-1-性能需求"><a href="#5-1-性能需求" class="headerlink" title="5.1 性能需求"></a><strong>5.1 性能需求</strong></h3><h4 id="处理能力"><a href="#处理能力" class="headerlink" title="处理能力"></a>处理能力</h4><p>​由于是在线二手交易平台，其处理能力主要考虑系统能承载的最大并发用户数，按照实际情况的规划，系统至少能承载的最大并发用户数要求达到全校学生总人数*φ，φ为0至1的常数，随服务器容量而定。</p><h4 id="应时间"><a href="#应时间" class="headerlink" title="应时间"></a>应时间</h4><p>​为了能够快捷地提供在线测评服务，系统应该能够快速地响应在线测评请求。用户最终得到结果的响应时间除了与系统响应速度有关外，还与网络状况有关。因此对Web服务器端需要较高的要求。</p><h3 id="5-2-安全性需求"><a href="#5-2-安全性需求" class="headerlink" title="5.2 安全性需求"></a><strong>5.2 安全性需求</strong></h3><p>​传输的数据都采用高强度的加密算法加密 (DES)，使得数据即使泄漏、被截获后，也无法识别相关的数据内容，确保数据安全。对于客户端与服务器交互的数据，使用安全套接子层 (SSL,SSL 加密传输主要是针对 WEB的数据传输，基于重要信息的传输安全考虑而设计的) 进行信息交换，并在客户移动终端和服务器之间重要的信息的交换。</p><h2 id="六、附录"><a href="#六、附录" class="headerlink" title="六、附录"></a>六、附录</h2><h3 id="大学生二手交易平台问卷调查"><a href="#大学生二手交易平台问卷调查" class="headerlink" title="大学生二手交易平台问卷调查"></a>大学生二手交易平台问卷调查</h3><p>在校园里，网购已成为一种趋势，足不出户便达成买卖。而二手商品交易也逐步走进我们的生活中，为我们大多数人所接纳。无论网购或二手交易，于商家于买家都是一种既实际又环保的途径。为此，我们针对北京交通大学展开此次调查，了解本校学生对二手交易的需求，更好地构建一个满足本校学生们的校园App二手交易平台。希望同学们能积极参与，感谢您的配合与合作！</p><p>1、性别 【单选题】</p><p> ○ 男</p><p> ○ 女</p><p>2、您有在二手市场购买或卖出东西的经历么？ 【单选题】</p><p> ○ 有</p><p> ○ 没有</p><p> ○ 有想过但没实施过</p><p>3、您对购买二手物品持何种态度？ 【单选题】</p><p> ○ 质量差，不支持</p><p> ○ 只要价钱合理，质量可靠就可以购买</p><p> ○ 看物品而定</p><p> ○ 二手物品价格低廉，很喜欢购买</p><p>4、您购买二手货的原因是？ 【单选题】</p><p> ○ 价格便宜</p><p> ○ 实用价值高</p><p> ○ 物超所值</p><p>5、对于二手物品多少程度的磨损您可以接受？ 【单选题】</p><p> ○ 一成到两成</p><p> ○ 三成到五成</p><p> ○ 六成到八成</p><p> ○ 九成到十成</p><p>6、您在购买二手商品过程中存在的疑虑？ 【单选题】</p><p> ○ 质量问题</p><p> ○ 卫生问题</p><p> ○ 心理作用</p><p> ○ 购买机会</p><p>7、您对二手物品交易网网站上的哪些物品比较感兴趣？（多项） 【多选题】</p><p> □ 专业书籍</p><p> □ 娱乐书籍或杂志</p><p> □ 服装</p><p> □ 饰物、精品类</p><p> □ 文体用品</p><p> □ 电器类</p><p> □ 鞋类</p><p> □ 电子产品</p><p>8、如果建立一个专门的校园二手物品交易网上交易平台，您的态度是？ 【单选题】</p><p> ○ 非常欢迎，能在交易平台上交易</p><p> ○ 持续关注，会推荐给同学</p><p> ○ 偶尔关注</p><p> ○ 持怀疑观望态度</p><p> ○ 不看好网站的发展</p><p>9、对于本校二手网站你最希望淘到什么二手物品？（多项） 【多选题】</p><p> □ 二手教科书</p><p> □ 二手期末复习资料</p><p> □ 二手电脑MP3等数码物品</p><p> □ 二手运动器械</p><p> □ 其它二手物品</p><p>10、如本校二手平台向您收购商品，您一般有哪些物品愿意出售？（多项） 【多选题】</p><p> □ 专业书籍</p><p> □ 娱乐书籍或杂志</p><p> □ 服装</p><p> □ 饰物、精品类</p><p> □ 文体用品</p><p> □ 电器类</p><p> □ 鞋类</p><p> □ 电子产品</p><p>11、您购买二手物品希望卖家能提供哪些信息？（多项） 【多选题】</p><p> □ 购买时间</p><p> □ 生产时间</p><p> □ 物品使用情况</p><p> □ 保修期是否已过</p><p>12、您认为二手物品交易平台应提供哪些服务？ （多项） 【多选题】</p><p> □ 提供物流服务</p><p> □ 提供有信用的第三方支付体系服务</p><p> □ 提供退货等售后服务</p><p> □ 提供货到付款服务</p><p> □ 提供手递手的送货</p><p> □ 质量评价体系</p><p>13、对即将出现的本校校园二手物品交易网站，有什么好的建议？ 【填空题】</p><hr>]]></content>
      
      
      <categories>
          
          <category> 软件系统构思综合训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎来到舜桀BB的秘密基地！</title>
      <link href="/posts/2fa1216955e2/"/>
      <url>/posts/2fa1216955e2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>欢迎来到<strong>舜桀BB</strong>的秘密基地呀！<br>在这里你会看到我的日常分享，你也可以通过留言功能与我交流。<br>希望你我都能在这个复杂的世界找到一份专属于自己的喜乐！</p><img src="https://s3.bmp.ovh/imgs/2022/05/16/e5404ce657de463a.png" />]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欢迎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DeepAI经典框架总结</title>
      <link href="/posts/8e74962e7eee/"/>
      <url>/posts/8e74962e7eee/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><table><thead><tr><th>框架名称</th><th>应用场景</th><th>策略</th><th>代码</th></tr></thead><tbody><tr><td>CEAL</td><td>深度图像分类问题</td><td>CEAL是第一个结合AL与DL解决深度图像分类问题的工作之一。CEAL将深度卷积神经网络合并到AL中，提出了一个新颖的DAL框架。它通过将来自未标注数据集中的样本逐步送入CNN，由CNN分类器输出两种类别的样本：少量不确定性的样本和大量高预测置信度样本。通过orcal为少量不确定性样本进行标注，同时使用CNN分类器为大量的高预测置信度样本自动分配伪标签。然后，使用这两种类型的样本对CNN进行微调，并重复这个更新过程。在Fig2中，我们展示了CEAL的总体框架图。类似的，HDAL也采用了类似的框架用于人脸识别任务中，它将AL与深度CNN模型进行结合从而一体化的同时考虑特征学习和AL查询模型的训练。</td><td></td></tr><tr><td>HDAL</td><td>人脸识别任务</td><td>将AL与深度CNN模型进行结合从而一体化的同时考虑特征学习和AL查询模型的训练</td><td></td></tr><tr><td>【243】</td><td>医学图像分割问题</td><td>提出使用全卷积网络和AL进行结合的框架来解决使用少量标注进行医学图像分割的问题。它首先将FCN在少量的标注数据集上进行训练，然后将未标注数据集中的样本通过FCN进行特征提取，并使用这些特征来对未标注样本进行不确定性和相似度估计。这种类似于2.1.2中的策略有助于选择具有高度不确定性和多样化的样本被添加到标注数据集中，从而开始下一阶段的训练。</td><td></td></tr><tr><td>【56】</td><td>掌纹识别任务</td><td>受到域适应的启发，将AL视为一个二分类任务，期待标注样本集与未标注样本集拥有相同的数据分布并使得二者难以区分，这样就可以直接在少量的标注数据集上进行监督训练了，从而减轻标注负担。</td><td></td></tr><tr><td>MetaQNN【140】</td><td>缺陷检测</td><td>基于检测模型的输出特征执行不确定性抽样，以生成用于注释的候选样本列表；设计了一种平均裕度方法来控制每个缺陷类别的抽样比</td><td></td></tr><tr><td>LLAL[245]</td><td>图像分类、目标检测和人体姿态估计</td><td>设计了一个损耗预测模块的小型参数模块附加到目标网络，使用目标网络的多个隐藏层的输出作为损耗预测模块的输入。通过学习损耗预测模块来预测未标记数据集的目标损耗，并以top-k的策略选择查询样本。LLAL以较小的参数代价实现了与任务无关的AL框架设计，并在多种主流的视觉任务（即，图像分类、目标检测和人体姿态估计）上都取得了有竞争力的性能表现。</td><td></td></tr><tr><td>[17]</td><td>手指骨分割任务</td><td>将Deeply Supervised U-Net作为分割网络，然后将多级分割隐藏层的输出以及最后一层的输出作为AL的输入，综合这些输入信息作为样本信息量大小的评估依据。</td><td></td></tr><tr><td>AL-MV[16]</td><td></td><td>将来自CNN中间不同隐藏层的特征视为多视图数据，同时考虑两个阶段的不确定性，并设计了AL-MV算法来实现对各层的不确定性进行自适应加权，从而更加准确的测量样本的不确定性。</td><td></td></tr><tr><td>[100]</td><td>视频任务</td><td>提出使用模仿学习来执行导航任务。教师从第一人称角度看待的视觉环境和所采取的行动被用作训练集。通过培训，希望学生们能够在自己的环境中预测和执行相应的行动。学生在执行任务时，使用深度cnn进行特征提取，学习模仿策略，并进一步使用AL方法选择置信度不足的样本，并将其添加到训练集中，更新动作策略。</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 人工智能算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NASA MDP 软件缺陷数据集</title>
      <link href="/posts/7818ebd11df5/"/>
      <url>/posts/7818ebd11df5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>软件缺陷预测研究中心广泛应用的由美国航空航天局（NASA）公布的NASA IV＆V Facility Metrics Data Program(MDP)数据集，MDP 是一个开放的数据仓库，数据集的开放性方便了不同的研究者进行实验的重复、改进甚至反驳。 MDP包括 13个不同的数据集，这些数据均来自NASA 的13个实际软件项目，由最常见的开发语言编写。每个数据集包含来自不同软件项目的若干模块，规模从 125个模块到 17186 个模块不等。各个数据集由LOC、McCabe、Halstead等几类度量元属性和是否包含缺陷的类别标记（defective）组成。MDP数据集所提供的记录，一行代表一个模块，每个字段对应一个属性。 </p><p>资源链接: https:&#x2F;&#x2F;<a href="https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020">github</a>.com&#x2F;klainfo&#x2F;NASADefectDataset&#x2F; <a href="https://github.com/klainfo/NASADefectDataset/">点此跳转</a></p><p>NASA MDP 软件缺陷数据集统计规模如下表：</p><p> <img src="https://img-blog.csdnimg.cn/20190709073518136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pxenExOTk1MDcyNQ==,size_16,color_FFFFFF,t_70" alt="img"> </p><p>MDP包括13个来自NASA的实际项目。在每一个数据集的开头，会标注项目名称，然后是度量元解释，之后就是数据。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@relation</span> <span class="string">&#x27;CM1&#x27;</span> <span class="comment">// 项目名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下为度量元</span></span><br><span class="line"><span class="meta">@attribute</span> LOC_BLANK numeric <span class="comment">// 空白行数量</span></span><br><span class="line"><span class="meta">@attribute</span> BRANCH_COUNT numeric <span class="comment">// 分支数量</span></span><br><span class="line"><span class="meta">@attribute</span> CALL_PAIRS numeric <span class="comment">// 调用对数</span></span><br><span class="line"><span class="meta">@attribute</span> LOC_CODE_AND_COMMENT numeric <span class="comment">// 代码和注释行数</span></span><br><span class="line"><span class="meta">@attribute</span> LOC_COMMENTS numeric <span class="comment">// 注释行数</span></span><br><span class="line"><span class="meta">@attribute</span> CONDITION_COUNT numeric <span class="comment">// 条件语句计数</span></span><br><span class="line"><span class="meta">@attribute</span> CYCLOMATIC_COMPLEXITY numeric <span class="comment">// 圈复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> CYCLOMATIC_DENSITY numeric <span class="comment">// 圈密度</span></span><br><span class="line"><span class="meta">@attribute</span> DECISION_COUNT numeric <span class="comment">// 决策数量</span></span><br><span class="line"><span class="meta">@attribute</span> DECISION_DENSITY numeric <span class="comment">// 决策复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> DESIGN_COMPLEXITY numeric <span class="comment">// 设计复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> DESIGN_DENSITY numeric <span class="comment">// 设计密度</span></span><br><span class="line"><span class="meta">@attribute</span> EDGE_COUNT numeric <span class="comment">// 边界统计</span></span><br><span class="line"><span class="meta">@attribute</span> ESSENTIAL_COMPLEXITY numeric <span class="comment">// 本质复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> ESSENTIAL_DENSITY numeric <span class="comment">// 本质密度</span></span><br><span class="line"><span class="meta">@attribute</span> LOC_EXECUTABLE numeric <span class="comment">// 可执行行数</span></span><br><span class="line"><span class="meta">@attribute</span> PARAMETER_COUNT numeric <span class="comment">// 参数计数</span></span><br><span class="line"><span class="meta">@attribute</span> GLOBAL_DATA_COMPLEXITY numeric <span class="comment">// 全局数据复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> GLOBAL_DATA_DENSITY numeric <span class="comment">// 全局数据密度</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_CONTENT numeric <span class="comment">// Halstead 内容</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_DIFFICULTY numeric <span class="comment">// Halstead 复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_EFFORT numeric <span class="comment">// Halstead 编程效率</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_ERROR_EST numeric <span class="comment">// Halstead 错误预测</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_LENGTH numeric <span class="comment">// Halstead 程序长度</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_LEVEL numeric <span class="comment">// Halstead 程序语言等级</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_PROG_TIME numeric <span class="comment">// Halstead 编写程序的时间</span></span><br><span class="line"><span class="meta">@attribute</span> HALSTEAD_VOLUME numeric <span class="comment">// Halstead 程序容量</span></span><br><span class="line"><span class="meta">@attribute</span> MAINTENANCE_SEVERITY numeric <span class="comment">// 维护严重性</span></span><br><span class="line"><span class="meta">@attribute</span> MODIFIED_CONDITION_COUNT numeric <span class="comment">// 修改条件语句数</span></span><br><span class="line"><span class="meta">@attribute</span> MULTIPLE_CONDITION_COUNT numeric <span class="comment">// 多条件语句数</span></span><br><span class="line"><span class="meta">@attribute</span> NODE_COUNT numeric <span class="comment">// 节点计数</span></span><br><span class="line"><span class="meta">@attribute</span> NORMALIZED_CYLOMATIC_COMPLEXITY numeric <span class="comment">// 规范圈复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> NUM_OPERANDS numeric <span class="comment">// 操作数数量</span></span><br><span class="line"><span class="meta">@attribute</span> NUM_OPERATORS numeric <span class="comment">// 操作符数量</span></span><br><span class="line"><span class="meta">@attribute</span> NUM_UNIQUE_OPERANDS numeric <span class="comment">// 特殊操作数数量</span></span><br><span class="line"><span class="meta">@attribute</span> NUM_UNIQUE_OPERATORS numeric <span class="comment">// 特殊操作符数量</span></span><br><span class="line"><span class="meta">@attribute</span> NUMBER_OF_LINES numeric <span class="comment">// 行数量</span></span><br><span class="line"><span class="meta">@attribute</span> PATHOLOGICAL_COMPLEXITY numeric <span class="comment">// 病理复杂度</span></span><br><span class="line"><span class="meta">@attribute</span> PERCENT_COMMENTS numeric <span class="comment">// 注释比例</span></span><br><span class="line"><span class="meta">@attribute</span> LOC_TOTAL numeric <span class="comment">// 总行数</span></span><br><span class="line"><span class="meta">@attribute</span> Defective &#123;Y,N&#125; <span class="comment">// 是否存在缺陷</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@data</span> <span class="comment">//以下为数据，每行数据代表一个模块</span></span><br><span class="line"><span class="number">6</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">16</span>,<span class="number">5</span>,<span class="number">0.2</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0.6</span>,<span class="number">17</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">32.54</span>,<span class="number">9.5</span>,<span class="number">2936.77</span>,<span class="number">0.1</span>,<span class="number">63</span>,<span class="number">0.11</span>,<span class="number">163.15</span>,<span class="number">309.13</span>,<span class="number">0.2</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">14</span>,<span class="number">0.16</span>,<span class="number">19</span>,<span class="number">44</span>,<span class="number">15</span>,<span class="number">15</span>,<span class="number">32</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">25</span>,N</span><br><span class="line"><span class="comment">// 数据用逗号隔开，与之前定义的元组相对应，N代表存在缺陷</span></span><br><span class="line"><span class="number">15</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">0.13</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">0.5</span>,<span class="number">17</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">31</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">38.55</span>,<span class="number">21.52</span>,<span class="number">17846.19</span>,<span class="number">0.28</span>,<span class="number">141</span>,<span class="number">0.05</span>,<span class="number">991.46</span>,<span class="number">829.45</span>,<span class="number">0.25</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">0.06</span>,<span class="number">51</span>,<span class="number">90</span>,<span class="number">32</span>,<span class="number">27</span>,<span class="number">67</span>,<span class="number">1</span>,<span class="number">39.22</span>,<span class="number">32</span>,Y</span><br><span class="line"><span class="comment">// Y代表不存在问题</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 新生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
